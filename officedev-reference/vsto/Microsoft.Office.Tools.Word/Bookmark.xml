<Type Name="Bookmark" FullName="Microsoft.Office.Tools.Word.Bookmark">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8a1736dd235aa783a5e61a134111023533332a47" />
    <Meta Name="ms.sourcegitcommit" Value="bb8a3a96823cedeffbdbcc0c41a8118399de8074" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="02/21/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Bookmark : IDisposable, System.ComponentModel.IComponent, System.ComponentModel.ISupportInitialize, System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Bookmark implements class System.ComponentModel.IComponent, class System.ComponentModel.ISupportInitialize, class System.IDisposable, class System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Tools.Word.Bookmark" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IBindableComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("716bd356-0f64-430b-9ea0-bde2921a0227")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件是一个具有唯一名称且用于公开事件的书签，可以绑定到数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:Microsoft.Office.Tools.Word.ControlCollection.AddBookmark%2A>方法将添加到文档范围的书签。  
  
 [!INCLUDE[vsto_interface](~/includes/vsto-interface-md.md)]  
  
## <a name="usage"></a>用法  
 [!INCLUDE[vsto_net35mref](~/includes/vsto-net35mref-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个表示该 <see cref="T:Microsoft.Office.Interop.Word.Application" /> 控件的创建者的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Application" />，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的创建者。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 以下代码示例获取和显示在一个消息框中，名称和版本的应用程序，该书签会显示。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#1](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#1)]
 [!code-vb[Trin_WordBookmark#1](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public void AutoFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AutoFormat() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.AutoFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>自动设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的格式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeDoubleClick">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Tools.Word.ClickEventHandler BeforeDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Word.ClickEventHandler BeforeDoubleClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Word.Bookmark.BeforeDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.ClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当在默认的双击操作之前双击 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 双击重叠<xref:Microsoft.Office.Tools.Word.Bookmark>控件会引发该事件在每个重叠书签。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>到文档的文本与控件，然后创建<xref:Microsoft.Office.Tools.Word.Bookmark.BeforeDoubleClick>事件处理程序。 选择书签中的文本时<xref:Microsoft.Office.Tools.Word.Bookmark>双击控件时。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#2)]
 [!code-vb[Trin_WordBookmark#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeRightClick">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Tools.Word.ClickEventHandler BeforeRightClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Word.ClickEventHandler BeforeRightClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Word.Bookmark.BeforeRightClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.ClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当在默认的右击操作之前右击 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 右键单击重叠<xref:Microsoft.Office.Tools.Word.Bookmark>控件会引发该事件在每个重叠书签。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>到文档控件，然后创建<xref:Microsoft.Office.Tools.Word.Bookmark.BeforeRightClick>事件处理程序。 当<xref:Microsoft.Office.Tools.Word.Bookmark>控件处于右键单击时，该书签中的文本复制到剪贴板。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#3](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#3)]
 [!code-vb[Trin_WordBookmark#3](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Word.Bookmark.BindingContextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="P:System.Windows.Forms.IBindableComponent.BindingContext" /> 的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 属性的值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将引发此事件<xref:System.Windows.Forms.IBindableComponent.BindingContext%2A>属性更改通过以编程方式修改或用户交互更改。 有关详细信息有关的用途<xref:System.Windows.Forms.IBindableComponent.BindingContext%2A>属性，请参阅<xref:System.Windows.Forms.BindingContext>类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bold">
      <MemberSignature Language="C#" Value="public int Bold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Bold" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Bold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的格式是否设置为粗体。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的任何文本都不是粗体，则为 0；如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有文本都是粗体，则为 -1；如果 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdUndefined" /> 控件中的部分文本是粗体，则为 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> (999999)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可以设置为的值是 0，-1，和<xref:Microsoft.Office.Interop.Word.WdConstants.wdToggle>。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制对该文档，然后将应用格式设置为基于书签<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>在书签内的文本。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#4)]
 [!code-vb[Trin_WordBookmark#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoldBi">
      <MemberSignature Language="C#" Value="public int BoldBi { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BoldBi" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.BoldBi" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的格式是否设置为粗体。</summary>
        <value>如果无中的文本 0<see cref="T:Microsoft.Office.Tools.Word.Bookmark" />控件是粗体; 1 如果中的文本的所有<see cref="T:Microsoft.Office.Tools.Word.Bookmark" />控件为粗体;<see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdUndefined" /> (999999) 中的文本的一部分<see cref="T:Microsoft.Office.Tools.Word.Bookmark" />控件为粗体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可以设置为值为 0、 1、 和<xref:Microsoft.Office.Interop.Word.WdConstants.wdToggle>。  
  
 <xref:Microsoft.Office.Tools.Word.Bookmark.BoldBi%2A>属性适用于从右到左语言中的文本。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制对该文档，然后将应用格式设置为基于书签<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>在书签内的文本。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#4)]
 [!code-vb[Trin_WordBookmark#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BookmarkID">
      <MemberSignature Language="C#" Value="public int BookmarkID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BookmarkID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.BookmarkID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件在文档中的位置。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件在文档中的位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该数字对应的顺序到<xref:Microsoft.Office.Tools.Word.Bookmark>文档中的控件： 第一个书签的 1，2 代表第二个中，依次类推。 如果其中一个书签被删除，则<xref:Microsoft.Office.Tools.Word.Bookmark.BookmarkID%2A>的其他书签将相应地重新编号。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档，然后通过显示文档中显示的位置的书签<xref:Microsoft.Office.Tools.Word.Bookmark.BookmarkID%2A>消息框中。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#5](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#5)]
 [!code-vb[Trin_WordBookmark#5](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bookmarks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Bookmarks Bookmarks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Bookmarks Bookmarks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Bookmarks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Bookmarks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Bookmarks" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件内的所有书签。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Bookmarks" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件内的所有书签。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不能枚举每个<xref:Microsoft.Office.Tools.Word.Bookmark>在文档中使用的控件<xref:Microsoft.Office.Interop.Word.Bookmarks?displayProperty=fullName>集合。 使用<xref:Microsoft.Office.Tools.Word.ControlCollection>，然后查找类型的项<xref:Microsoft.Office.Tools.Word.Bookmark>。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为到文档的文本，然后将另一个书签添加书签的第六个字符。 然后在消息框中显示该书签中找到的书签的总数。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#6](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#6)]
 [!code-vb[Trin_WordBookmark#6](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Borders Borders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Borders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Borders" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的所有边框。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Borders" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的所有边框。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为文本，然后将边框添加到该书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#7](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#7)]
 [!code-vb[Trin_WordBookmark#7](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public float Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 Calculate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Calculate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>计算 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的数学表达式。</summary>
        <returns>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的数学表达式的计算结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:Microsoft.Office.Tools.Word.Bookmark>控件包含错误，则此方法会显示**拼写和语法**对话框中，与**检查语法**复选框处于选中状态。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanEdit">
      <MemberSignature Language="C#" Value="public int CanEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CanEdit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.CanEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public int CanPaste { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CanPaste" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.CanPaste" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Case">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdCharacterCase Case { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdCharacterCase Case" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Case" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdCharacterCase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:Microsoft.Office.Interop.Word.WdCharacterCase" /> 常数，该常数表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的大小写。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.WdCharacterCase" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有文本控件并将文本然后更改为大写形式。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#8](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#8)]
 [!code-vb[Trin_WordBookmark#8](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Cells Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Cells Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Cells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Cells</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Cells" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的表单元格。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Cells" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的表单元格。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将三个列中，三行的表添加到文档中，然后添加<xref:Microsoft.Office.Tools.Word.Bookmark>到表的控件。 最后，代码将更改该书签中的表单元格的宽度。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#9)]
 [!code-vb[Trin_WordBookmark#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Characters Characters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Characters Characters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Characters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Characters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Characters" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的字符。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Characters" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的字符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件带到文档的文本，然后添加另一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到第一个书签的第六个字符。 在消息框中将显示该书签中找到的书签的总数。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#6](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#6)]
 [!code-vb[Trin_WordBookmark#6](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterStyle">
      <MemberSignature Language="C#" Value="public object CharacterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CharacterStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.CharacterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的一个或多个字符的格式的样式。</summary>
        <value>一个对象，表示用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的一个或多个字符的格式的样式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterWidth">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdCharacterWidth CharacterWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdCharacterWidth CharacterWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.CharacterWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdCharacterWidth</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的字符宽度。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.WdCharacterWidth" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有文本控件然后更改文本的字符宽度的半角字符。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#10](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#10)]
 [!code-vb[Trin_WordBookmark#10](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckGrammar">
      <MemberSignature Language="C#" Value="public void CheckGrammar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckGrammar() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.CheckGrammar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>开始对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件进行拼写和语法检查。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (ref object CustomDictionary, ref object IgnoreUppercase, ref object AlwaysSuggest, ref object CustomDictionary2, ref object CustomDictionary3, ref object CustomDictionary4, ref object CustomDictionary5, ref object CustomDictionary6, ref object CustomDictionary7, ref object CustomDictionary8, ref object CustomDictionary9, ref object CustomDictionary10);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling(object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object CustomDictionary2, object CustomDictionary3, object CustomDictionary4, object CustomDictionary5, object CustomDictionary6, object CustomDictionary7, object CustomDictionary8, object CustomDictionary9, object CustomDictionary10) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.CheckSpelling(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreUppercase" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AlwaysSuggest" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary4" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary5" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary6" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary7" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary8" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary9" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary10" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是自定义字典的文件名。</param>
        <param name="IgnoreUppercase">
          如果忽略大小写，则为 <see langword="true" />。 如果省略此参数，则使用 <see cref="P:Microsoft.Office.Interop.Word.Options.IgnoreUppercase" /> 属性的当前值。</param>
        <param name="AlwaysSuggest">
          如果要让 Microsoft Office Word 始终建议替代拼写，则为 <see langword="true" />。 如果省略此参数，则使用 <see cref="P:Microsoft.Office.Interop.Word.Options.SuggestSpellingCorrections" /> 属性的当前值。</param>
        <param name="CustomDictionary2">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary3">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary4">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary5">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary6">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary7">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary8">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary9">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary10">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <summary>从 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的开始处到文档末尾开始对文档进行拼写检查。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:Microsoft.Office.Tools.Word.Bookmark>控件包含错误，则此方法会显示**拼写和语法**对话框中，与**检查语法**清除复选框。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为文本与文档，然后检查在文档中，从书签的起始位置到文档末尾的文本的拼写。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#11](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#11)]
 [!code-vb[Trin_WordBookmark#11](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSynonyms">
      <MemberSignature Language="C#" Value="public void CheckSynonyms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSynonyms() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.CheckSynonyms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>显示“同义词库”对话框，其中列出了 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中文本的替代词语选择或同义词。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse (ref object direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Collapse(object direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Collapse(System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="direction">折叠 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 的方向。 可以为以下 <see cref="T:Microsoft.Office.Interop.Word.WdCollapseDirection" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdCollapseDirection.wdCollapseEnd" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdCollapseDirection.wdCollapseStart" />。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdCollapseDirection.wdCollapseStart" />。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件折叠到起始或结束位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 后<xref:Microsoft.Office.Tools.Word.Bookmark>控件处于折叠状态、 开始和结束点是否相等。  
  
 如果你使用<xref:Microsoft.Office.Interop.Word.WdCollapseDirection.wdCollapseEnd>折叠<xref:Microsoft.Office.Tools.Word.Bookmark>指整个段落，范围的控件位于之后结束段落标记 （下一段的开头）。 但是，您可以移动范围使用备份一个字符<xref:Microsoft.Office.Interop.Word.Range.MoveEnd%2A>方法之后的范围<xref:Microsoft.Office.Tools.Word.Bookmark>控件处于折叠状态。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有文本，然后显示的开始和结束位置的书签之前和之后折叠书签控件。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#12](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#12)]
 [!code-vb[Trin_WordBookmark#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public bool Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Column" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件是否为表列。</summary>
        <value>
          如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件为表列，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Columns Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Columns Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Columns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Columns" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有表列。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Columns" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有表列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例向文档添加一个三列三行的表，添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件到表中，然后将更改该书签中的第一列的宽度。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#13](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#13)]
 [!code-vb[Trin_WordBookmark#13](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineCharacters">
      <MemberSignature Language="C#" Value="public bool CombineCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CombineCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.CombineCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件是否包含组合字符。</summary>
        <value>
          如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件包含组合字符，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Comments Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Comments Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Comments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Comments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Comments" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有注释。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Comments" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有注释。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>使用来控制向该文档，然后插入文本注释插入书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#14](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#14)]
 [!code-vb[Trin_WordBookmark#14](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeStatistics">
      <MemberSignature Language="C#" Value="public int ComputeStatistics (Microsoft.Office.Interop.Word.WdStatistic Statistic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ComputeStatistics(valuetype Microsoft.Office.Interop.Word.WdStatistic Statistic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ComputeStatistics(Microsoft.Office.Interop.Word.WdStatistic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Statistic" Type="Microsoft.Office.Interop.Word.WdStatistic" />
      </Parameters>
      <Docs>
        <param name="Statistic">
          <see cref="T:Microsoft.Office.Interop.Word.WdStatistic" />。</param>
        <summary>获取基于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的内容的统计信息。</summary>
        <returns>基于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的内容的统计信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有文本控件，然后在书签中使用显示的字符总数<xref:Microsoft.Office.Tools.Word.Bookmark.ComputeStatistics%2A>方法。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#15](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#15)]
 [!code-vb[Trin_WordBookmark#15](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Conflicts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Conflicts Conflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Conflicts Conflicts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Conflicts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Conflicts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的所有共同创作冲突。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的共同创作冲突。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以仅在共同创作启用的文档中使用此属性。 如果你尝试访问此属性的文档中未启用共同创作，你将收到<xref:System.Runtime.InteropServices.COMException>。  
  
> [!NOTE]
>  此方法将显示在 IntelliSense Word 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。 但是，无法在 Word 2007 项目中使用此属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">包含书签的文档中未启用共同创作。</exception>
        <exception cref="T:System.MissingMemberException">在 Word 2007 项目中使用此属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentControls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ContentControls ContentControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ContentControls ContentControls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ContentControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ContentControls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中包含的内容控件。</summary>
        <value>包含 <see cref="T:Microsoft.Office.Interop.Word.ContentControls" /> 中的内容控件的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertHangulAndHanja">
      <MemberSignature Language="C#" Value="public void ConvertHangulAndHanja (ref object ConversionsMode, ref object FastConversion, ref object CheckHangulEnding, ref object EnableRecentOrdering, ref object CustomDictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConvertHangulAndHanja(object ConversionsMode, object FastConversion, object CheckHangulEnding, object EnableRecentOrdering, object CustomDictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ConvertHangulAndHanja(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConversionsMode" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FastConversion" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CheckHangulEnding" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="EnableRecentOrdering" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ConversionsMode">设置朝鲜文字与朝鲜文汉字之间的转换方向。 可以为以下 <see cref="T:Microsoft.Office.Interop.Word.WdMultipleWordConversionsMode" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdMultipleWordConversionsMode.wdHangulToHanja" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdMultipleWordConversionsMode.wdHanjaToHangul" />。 默认值为 <see cref="P:Microsoft.Office.Interop.Word.Options.MultipleWordConversionsMode" /> 属性的当前值。</param>
        <param name="FastConversion">
          如果 Microsoft Office Word 仅用一种转换建议来进行自动转换，则为 <see langword="true" />。 默认值为 <see cref="P:Microsoft.Office.Interop.Word.Options.HangulHanjaFastConversion" /> 属性的当前值。</param>
        <param name="CheckHangulEnding">
          如果 Word 自动检测朝鲜文字结尾并忽略它们，则为 <see langword="true" />。 默认值为 <see cref="P:Microsoft.Office.Interop.Word.Options.CheckHangulEndings" /> 属性的当前值。 如果 <c>ConversionsMode</c> 参数设置为 <see cref="F:Microsoft.Office.Interop.Word.WdMultipleWordConversionsMode.wdHanjaToHangul" />，则忽略此参数。</param>
        <param name="EnableRecentOrdering">
          如果 Word 在建议列表顶部显示最近使用过的单词，则为 <see langword="true" />。 默认值为 <see cref="P:Microsoft.Office.Interop.Word.Options.EnableHangulHanjaRecentOrdering" /> 属性的当前值。</param>
        <param name="CustomDictionary">自定义朝鲜文字-朝鲜文汉字转换字典的名称。 使用此参数以便对主字典中所不包含的朝鲜文字-朝鲜文汉字转换使用自定义字典。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件文本从朝鲜文字转换为朝鲜文汉字，或从朝鲜文汉字转换为朝鲜文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件在文档中的第一个段落，然后检查是否<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>的书签是<xref:Microsoft.Office.Interop.Word.WdLanguageID.wdKorean>。 如果是这样，它将书签转换从朝鲜文字转换为 Hanja，反之亦然。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#16](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#16)]
 [!code-vb[Trin_WordBookmark#16](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Table ConvertToTable (ref object Separator, ref object NumRows, ref object NumColumns, ref object InitialColumnWidth, ref object Format, ref object ApplyBorders, ref object ApplyShading, ref object ApplyFont, ref object ApplyColor, ref object ApplyHeadingRows, ref object ApplyLastRow, ref object ApplyFirstColumn, ref object ApplyLastColumn, ref object AutoFit, ref object AutoFitBehavior, ref object DefaultTableBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Table ConvertToTable(object Separator, object NumRows, object NumColumns, object InitialColumnWidth, object Format, object ApplyBorders, object ApplyShading, object ApplyFont, object ApplyColor, object ApplyHeadingRows, object ApplyLastRow, object ApplyFirstColumn, object ApplyLastColumn, object AutoFit, object AutoFitBehavior, object DefaultTableBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ConvertToTable(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Table</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Separator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NumRows" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NumColumns" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InitialColumnWidth" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyBorders" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyShading" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyFont" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyColor" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyHeadingRows" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyLastRow" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyFirstColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyLastColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AutoFit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AutoFitBehavior" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DefaultTableBehavior" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Separator">指定用于将文本分隔成单元格的字符。 可以是一个字符或以下 <see cref="T:Microsoft.Office.Interop.Word.WdTableFieldSeparator" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdTableFieldSeparator.wdSeparateByCommas" />、<see cref="F:Microsoft.Office.Interop.Word.WdTableFieldSeparator.wdSeparateByDefaultListSeparator" />、<see cref="F:Microsoft.Office.Interop.Word.WdTableFieldSeparator.wdSeparateByParagraphs" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdTableFieldSeparator.wdSeparateByTabs" />。  
  
 如果省略此参数，则使用 <see cref="P:Microsoft.Office.Interop.Word._Application.DefaultTableSeparator" /> 属性的值。</param>
        <param name="NumRows">表中的行数。 如果省略此参数，则 Microsoft Office Word 根据 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的内容设置行数。</param>
        <param name="NumColumns">表中的列数。 如果省略此参数，则 Word 根据 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的内容设置列数。</param>
        <param name="InitialColumnWidth">每一列的初始宽度（以磅为单位）。 如果省略此参数，则 Word 计算并调整列宽度，以便表在边距间拉伸。</param>
        <param name="Format">指定“表格自动套用格式”对话框中列出的预定义格式之一。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdTableFormat" /> 常量之一。</param>
        <param name="ApplyBorders">
          为 <see langword="true" />，则应用指定格式的边框属性。</param>
        <param name="ApplyShading">
          为 <see langword="true" />，则应用指定格式的底纹属性。</param>
        <param name="ApplyFont">
          为 <see langword="true" />，则应用指定格式的字体属性。</param>
        <param name="ApplyColor">
          为 <see langword="true" />，则应用指定格式的颜色属性。</param>
        <param name="ApplyHeadingRows">
          为 <see langword="true" />，则应用指定格式的标题行属性。</param>
        <param name="ApplyLastRow">
          为 <see langword="true" />，则应用指定格式的最后一行属性。</param>
        <param name="ApplyFirstColumn">
          为 <see langword="true" />，则应用指定格式的第一列属性。</param>
        <param name="ApplyLastColumn">
          为 <see langword="true" />，则应用指定格式的最后一列属性。</param>
        <param name="AutoFit">
          为 <see langword="true" />，则在不更改单元格中的文本换行方式的情况下尽可能地缩小表列的宽度。</param>
        <param name="AutoFitBehavior">设置规定 Word 如何调整表大小的自动调整规则。 可以是下列 <see cref="T:Microsoft.Office.Interop.Word.WdAutoFitBehavior" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdAutoFitBehavior.wdAutoFitContent" />、<see cref="F:Microsoft.Office.Interop.Word.WdAutoFitBehavior.wdAutoFitFixed" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdAutoFitBehavior.wdAutoFitWindow" />。 如果 <c>DefaultTableBehavior</c> 为 <see cref="F:Microsoft.Office.Interop.Word.WdDefaultTableBehavior.wdWord8TableBehavior" />，则忽略此参数。</param>
        <param name="DefaultTableBehavior">设置一个值，该值指定 Word 是否自动调整表中单元格的大小以适合内容（自动调整）。 可以是下列 <see cref="T:Microsoft.Office.Interop.Word.WdDefaultTableBehavior" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdDefaultTableBehavior.wdWord8TableBehavior" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdDefaultTableBehavior.wdWord9TableBehavior" />。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本转换为表。</summary>
        <returns>
          <see cref="T:Microsoft.Office.Interop.Word.Table" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为文本与文档，然后将书签到表中的文本。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#40](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#40)]
 [!code-vb[Trin_WordBookmark#40](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#40)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToTableOld">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Table ConvertToTableOld (ref object Separator, ref object NumRows, ref object NumColumns, ref object InitialColumnWidth, ref object Format, ref object ApplyBorders, ref object ApplyShading, ref object ApplyFont, ref object ApplyColor, ref object ApplyHeadingRows, ref object ApplyLastRow, ref object ApplyFirstColumn, ref object ApplyLastColumn, ref object AutoFit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Table ConvertToTableOld(object Separator, object NumRows, object NumColumns, object InitialColumnWidth, object Format, object ApplyBorders, object ApplyShading, object ApplyFont, object ApplyColor, object ApplyHeadingRows, object ApplyLastRow, object ApplyFirstColumn, object ApplyLastColumn, object AutoFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ConvertToTableOld(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Table</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Separator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NumRows" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NumColumns" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InitialColumnWidth" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyBorders" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyShading" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyFont" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyColor" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyHeadingRows" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyLastRow" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyFirstColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyLastColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AutoFit" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Separator">To be added.</param>
        <param name="NumRows">To be added.</param>
        <param name="NumColumns">To be added.</param>
        <param name="InitialColumnWidth">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="ApplyBorders">To be added.</param>
        <param name="ApplyShading">To be added.</param>
        <param name="ApplyFont">To be added.</param>
        <param name="ApplyColor">To be added.</param>
        <param name="ApplyHeadingRows">To be added.</param>
        <param name="ApplyLastRow">To be added.</param>
        <param name="ApplyFirstColumn">To be added.</param>
        <param name="ApplyLastColumn">To be added.</param>
        <param name="AutoFit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Copy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在与现有 <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 控件相同的位置上创建一个新的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新书签将变为<xref:Microsoft.Office.Interop.Word.Bookmark?displayProperty=fullName>对象而不是<xref:Microsoft.Office.Tools.Word.Bookmark?displayProperty=fullName>控件。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>到文档控件，然后创建<xref:Microsoft.Office.Tools.Word.Bookmark.BeforeRightClick>事件处理程序。 当<xref:Microsoft.Office.Tools.Word.Bookmark>控件处于右键单击时，该书签中的文本复制到剪贴板。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#3](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#3)]
 [!code-vb[Trin_WordBookmark#3](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Bookmark Copy (string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Bookmark Copy(string Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Copy(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name">新书签的名称。</param>
        <summary>使用指定的 <paramref name="Name" /> 参数，在与现有 <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 控件相同的位置创建一个新的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <returns>
          <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新书签将变为<xref:Microsoft.Office.Interop.Word.Bookmark?displayProperty=fullName>对象而不是<xref:Microsoft.Office.Tools.Word.Bookmark?displayProperty=fullName>控件。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件与文本发送到第一个段落，然后将该书签复制到与原始书签相同的位置。 一个消息框显示类型和每个书签的位置。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#17](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#17)]
 [!code-vb[Trin_WordBookmark#17](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyAsPicture">
      <MemberSignature Language="C#" Value="public void CopyAsPicture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyAsPicture() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.CopyAsPicture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:Microsoft.Office.Tools.Word.Bookmark.CopyAsPicture" /> 方法将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的内容复制到剪贴板。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public void CreatePublisher (ref object Edition, ref object ContainsPICT, ref object ContainsRTF, ref object ContainsText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreatePublisher(object Edition, object ContainsPICT, object ContainsRTF, object ContainsText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.CreatePublisher(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ContainsPICT" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ContainsRTF" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ContainsText" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Edition">To be added.</param>
        <param name="ContainsPICT">To be added.</param>
        <param name="ContainsRTF">To be added.</param>
        <param name="ContainsText">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示在其中创建 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的应用程序。</summary>
        <value>在其中创建 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的应用程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因为<xref:Microsoft.Office.Tools.Word.Bookmark>在 Microsoft Office Word 中创建控件，则此属性返回的十六进制数 4d535744，它表示字符串"MSWD。" 此值也可以表示由常数<xref:Microsoft.Office.Interop.Word.WdConstants.wdCreatorCode>。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换的文档和显示的第一个段落的文本消息框中的创建者应用程序。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#18](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#18)]
 [!code-vb[Trin_WordBookmark#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Cut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从文档中移除 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的内容，并将其放入剪贴板。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内容<xref:Microsoft.Office.Tools.Word.Bookmark>控件剪切到剪贴板，但折叠<xref:Microsoft.Office.Tools.Word.Bookmark>控件保留在文档。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDataSourceUpdateMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataSourceUpdateMode DefaultDataSourceUpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataSourceUpdateMode DefaultDataSourceUpdateMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.DefaultDataSourceUpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataSourceUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> 的默认 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> 值之一。 默认值是<c>System.Windows.Forms.DataSourceUpdateMode.Never</c>。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在情况下使用此属性其中<xref:System.Windows.Forms.Binding>而无需<xref:System.Windows.Forms.Binding.DataSourceUpdateMode%2A>指定值添加到<xref:System.Windows.Forms.IBindableComponent.DataBindings%2A>集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Delete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从该文档中删除动态创建的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 并将其从 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中移除。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法仅应该用于<xref:Microsoft.Office.Tools.Word.Bookmark>在运行时以编程方式创建的控件。 如果在调用此方法引发异常<xref:Microsoft.Office.Tools.Word.Bookmark>在设计时添加到文档的控制。  
  
 内容<xref:Microsoft.Office.Tools.Word.Bookmark>不会从文档中删除。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件以在文档中的文本将样式更改为`Heading 1`，然后删除该书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#107](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#107)]
 [!code-vb[Trin_WordBookmark#107](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deselected">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Tools.Word.SelectionEventHandler Deselected;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Word.SelectionEventHandler Deselected" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Word.Bookmark.Deselected" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.SelectionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当所选内容从 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件外部的区域时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将引发此事件仅当<xref:Microsoft.Office.Tools.Word.Bookmark>控件具有焦点，并且然后将焦点移远离<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为文档的第一个段落的文本，并创建<xref:Microsoft.Office.Tools.Word.Bookmark.Deselected>事件处理程序。 当用户将光标从内部书签到书签以外的区域，显示一个消息框。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#19](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#19)]
 [!code-vb[Trin_WordBookmark#19](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectLanguage">
      <MemberSignature Language="C#" Value="public void DetectLanguage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetectLanguage() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.DetectLanguage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>分析 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文本，以确定编写该文本所用的语言。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 结果<xref:Microsoft.Office.Tools.Word.Bookmark.DetectLanguage%2A>方法存储在<xref:Microsoft.Office.Interop.Word.Range.LanguageID%2A>基于字符的字符的属性。  
  
 如果<xref:Microsoft.Office.Tools.Word.Bookmark.DetectLanguage%2A>方法已应用于<xref:Microsoft.Office.Tools.Word.Bookmark>控件，<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageDetected%2A>属性设置为`true`。 重新计算的文本的语言<xref:Microsoft.Office.Tools.Word.Bookmark>控件，则必须首先设置<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageDetected%2A>属性`false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCharacterSpaceGrid">
      <MemberSignature Language="C#" Value="public bool DisableCharacterSpaceGrid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableCharacterSpaceGrid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.DisableCharacterSpaceGrid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 Microsoft Office Word 是否忽略相应的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的每行字符数。</summary>
        <value>
          如果 Microsoft Office Word 忽略相应 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件每行的字符数，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Document Document" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与该 <see cref="T:Microsoft.Office.Interop.Word.Document" /> 控件关联的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <value>与 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件关联的 <see cref="T:Microsoft.Office.Interop.Word.Document" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制显示和文档中的第一个段落包含书签的文档的名称。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#20](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#20)]
 [!code-vb[Trin_WordBookmark#20](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Duplicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range Duplicate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Duplicate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个只读 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的所有属性。</summary>
        <value>一个只读 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的所有属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以将返回的对象分配<xref:Microsoft.Office.Tools.Word.Bookmark.Duplicate%2A>到另一个属性<xref:Microsoft.Office.Interop.Word.Range>若要在一次应用这些设置。 然后再将重复的对象分配到另一个<xref:Microsoft.Office.Interop.Word.Range>，可以更改任何重复的对象的属性而不影响原始。  
  
 通过复制<xref:Microsoft.Office.Interop.Word.Range>对象，你可以更改开始点或而无需更改的原始范围结束的重复的范围的字符位置。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到第一个段落的文本控件并设置要用粗体显示的文本。 然后，它返回介于<xref:Microsoft.Office.Tools.Word.Bookmark.Duplicate%2A>属性书签并显示消息框，指示的范围包含与书签相同的属性。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#21](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#21)]
 [!code-vb[Trin_WordBookmark#21](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Editors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Editors Editors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Editors Editors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Editors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Editors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Editors" /> 对象，该对象表示获得修改文档中 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的授权的所有用户。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Editors" /> 对象，表示获得修改文档中 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的授权的所有用户。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制与在文档中的第一个段落的文本，并添加作为在书签中的第四个单词的编辑器的所有用户。 示例然后保护该文档不被修订，并在消息框中显示的书签的可编辑范围。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#22](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#22)]
 [!code-vb[Trin_WordBookmark#22](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmphasisMark">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdEmphasisMark EmphasisMark { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdEmphasisMark EmphasisMark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.EmphasisMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdEmphasisMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的字符或指定字符字符串的强调标记。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.WdEmphasisMark" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到第一个段落，然后设置的文本控件<xref:Microsoft.Office.Tools.Word.Bookmark.EmphasisMark%2A>到书签上<xref:Microsoft.Office.Interop.Word.WdEmphasisMark.wdEmphasisMarkOverComma>。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#23](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#23)]
 [!code-vb[Trin_WordBookmark#23](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public bool Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Empty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件是否为空。</summary>
        <value>
          如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件为空，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个空<xref:Microsoft.Office.Tools.Word.Bookmark>控件标记的位置 （折叠选定内容）; 它不会将标记任何文本。  
  
 如果引发异常<xref:Microsoft.Office.Tools.Word.Bookmark>控件不存在。 使用<xref:Microsoft.Office.Interop.Word.Bookmarks.Exists%2A>方法来确定是否<xref:Microsoft.Office.Tools.Word.Bookmark>控件存在。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public int End { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 End" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.End" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束字符位置。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束字符位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark>控件具有的起始位置和结束位置。 结束的位置是远的开始点<xref:Microsoft.Office.Tools.Word.Bookmark>控件。 使用<xref:Microsoft.Office.Tools.Word.Bookmark.End%2A>属性可以更改的大小<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
 如果此属性设置为一个值小于<xref:Microsoft.Office.Tools.Word.Bookmark.Start%2A>属性，<xref:Microsoft.Office.Tools.Word.Bookmark.Start%2A>属性设置为相同的值 (即，<xref:Microsoft.Office.Tools.Word.Bookmark.Start%2A>和<xref:Microsoft.Office.Tools.Word.Bookmark.End%2A>属性相等)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件带到第一个段落的文本，然后添加另一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到第一个书签中的第三个单词。 该代码然后移动第二个的书签的范围，直到它找到的字符 k。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#67](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#67)]
 [!code-vb[Trin_WordBookmark#67](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#67)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndnoteOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.EndnoteOptions EndnoteOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.EndnoteOptions EndnoteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.EndnoteOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.EndnoteOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.EndnoteOptions" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的尾注。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.EndnoteOptions" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的尾注。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>5 到该书签中尾注的起始编号和样式的数字的控件替换为文本的第一个段落，然后集<xref:Microsoft.Office.Interop.Word.WdNoteNumberStyle.wdNoteNumberStyleArabic>。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#25](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#25)]
 [!code-vb[Trin_WordBookmark#25](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Endnotes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Endnotes Endnotes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Endnotes Endnotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Endnotes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Endnotes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Endnotes" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有尾注。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Endnotes" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有尾注。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>5 到该书签中尾注的起始编号和样式的数字的控件替换为文本的第一个段落，然后集<xref:Microsoft.Office.Interop.Word.WdNoteNumberStyle.wdNoteNumberStyleArabic>。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#25](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#25)]
 [!code-vb[Trin_WordBookmark#25](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOf">
      <MemberSignature Language="C#" Value="public int EndOf (ref object unit, ref object extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndOf(object unit, object extend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.EndOf(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="extend" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="unit">移动结束字符位置所依据的单位。 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />。</param>
        <param name="extend">
          <see cref="T:Microsoft.Office.Interop.Word.WdMovementType" />。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束字符位置移动或扩展到最近的文本单元的末尾。</summary>
        <returns>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 扩展的字符位置数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果同时起始和结束位置<xref:Microsoft.Office.Tools.Word.Bookmark>控件已位于单位的末尾，则此方法不移动或扩展<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件带到文档的文本，然后该书签之后添加的附加文本。 然后，它会通过一个字扩展书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#27](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#27)]
 [!code-vb[Trin_WordBookmark#27](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnhMetaFileBits">
      <MemberSignature Language="C#" Value="public object EnhMetaFileBits { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EnhMetaFileBits" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.EnhMetaFileBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件范围的显示方式的图片表示形式。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件范围的显示方式的图片表示形式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark.EnhMetaFileBits%2A>属性返回的可与 Microsoft Windows Api 使用的字节数组。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为文本的第一个段落，然后存储在变量中的书签的文本的图表示。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#28](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#28)]
 [!code-vb[Trin_WordBookmark#28](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public int Expand (ref object unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Expand(object unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Expand(System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="unit">扩展 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件范围所依据的单位。 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />。</param>
        <summary>扩展 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的字符数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件与文本发送到第一个段落，然后将插入该书签之后一个句子，并扩展包括新的句子的书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#29](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#29)]
 [!code-vb[Trin_WordBookmark#29](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (string OutputFileName, Microsoft.Office.Interop.Word.WdExportFormat ExportFormat, bool OpenAfterExport = false, Microsoft.Office.Interop.Word.WdExportOptimizeFor OptimizeFor = Microsoft.Office.Interop.Word.WdExportOptimizeFor.wdExportOptimizeForPrint, bool ExportCurrentPage = false, Microsoft.Office.Interop.Word.WdExportItem Item = Microsoft.Office.Interop.Word.WdExportItem.wdExportDocumentContent, bool IncludeDocProps = false, bool KeepIRM = true, Microsoft.Office.Interop.Word.WdExportCreateBookmarks CreateBookmarks = Microsoft.Office.Interop.Word.WdExportCreateBookmarks.wdExportCreateNoBookmarks, bool DocStructureTags = true, bool BitmapMissingFonts = true, bool UseISO19005_1 = false, ref object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat(string OutputFileName, valuetype Microsoft.Office.Interop.Word.WdExportFormat ExportFormat, bool OpenAfterExport, valuetype Microsoft.Office.Interop.Word.WdExportOptimizeFor OptimizeFor, bool ExportCurrentPage, valuetype Microsoft.Office.Interop.Word.WdExportItem Item, bool IncludeDocProps, bool KeepIRM, valuetype Microsoft.Office.Interop.Word.WdExportCreateBookmarks CreateBookmarks, bool DocStructureTags, bool BitmapMissingFonts, bool UseISO19005_1, object FixedFormatExtClassPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ExportAsFixedFormat(System.String,Microsoft.Office.Interop.Word.WdExportFormat,System.Boolean,Microsoft.Office.Interop.Word.WdExportOptimizeFor,System.Boolean,Microsoft.Office.Interop.Word.WdExportItem,System.Boolean,System.Boolean,Microsoft.Office.Interop.Word.WdExportCreateBookmarks,System.Boolean,System.Boolean,System.Boolean,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OutputFileName" Type="System.String" />
        <Parameter Name="ExportFormat" Type="Microsoft.Office.Interop.Word.WdExportFormat" />
        <Parameter Name="OpenAfterExport" Type="System.Boolean" />
        <Parameter Name="OptimizeFor" Type="Microsoft.Office.Interop.Word.WdExportOptimizeFor" />
        <Parameter Name="ExportCurrentPage" Type="System.Boolean" />
        <Parameter Name="Item" Type="Microsoft.Office.Interop.Word.WdExportItem" />
        <Parameter Name="IncludeDocProps" Type="System.Boolean" />
        <Parameter Name="KeepIRM" Type="System.Boolean" />
        <Parameter Name="CreateBookmarks" Type="Microsoft.Office.Interop.Word.WdExportCreateBookmarks" />
        <Parameter Name="DocStructureTags" Type="System.Boolean" />
        <Parameter Name="BitmapMissingFonts" Type="System.Boolean" />
        <Parameter Name="UseISO19005_1" Type="System.Boolean" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="OutputFileName">新 PDF 或 XPS 文件的完整路径。</param>
        <param name="ExportFormat">
          <see cref="T:Microsoft.Office.Interop.Word.WdExportFormat" /> 值之一，指定是以 PDF 还是 XPS 格式保存 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</param>
        <param name="OpenAfterExport">
          如果要在导出 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 后打开新文件，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="OptimizeFor">
          <see cref="T:Microsoft.Office.Interop.Word.WdExportOptimizeFor" /> 值之一，指定进行屏幕优化还是打印优化。</param>
        <param name="ExportCurrentPage">
          如果导出整个页面，则为 <see langword="true" />；如果仅导出当前选定内容，则为 <see langword="false" />。</param>
        <param name="Item">
          <see cref="T:Microsoft.Office.Interop.Word.WdExportItem" /> 值之一，指定导出过程是仅包括文本，还是同时包括文本和标记。</param>
        <param name="IncludeDocProps">
          如果要在新导出的文件中包含文档属性，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="KeepIRM">
          如果要在源文档具有信息权限管理 (IRM) 保护时将 IRM 权限复制到 XPS 文档，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</param>
        <param name="CreateBookmarks">
          <see cref="T:Microsoft.Office.Interop.Word.WdExportCreateBookmarks" /> 值之一，指定是否导出书签以及要导出的书签类型。</param>
        <param name="DocStructureTags">
          如果要包含额外数据（如有关内容的流和逻辑组织的信息）来协助使用屏幕读取器，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</param>
        <param name="BitmapMissingFonts">
          如果要包含文本的位图，则为 <see langword="true" />；如果要引用文本字体，则为 <see langword="false" />。 如果字体许可证不允许在 PDF 文件中嵌入某种字体，则将此参数设置为 <see langword="true" />。 如果将此参数设置为 <see langword="false" />，则当指定字体不可用时，查看者的计算机会替换合适的字体。 默认值为 <see langword="true" />。</param>
        <param name="UseISO19005_1">
          如果要将 PDF 使用范围限制为按照 ISO 19005-1 进行标准化的 PDF 子集，则为 <see langword="true" />；否则为 <see langword="false" />。 如果将此参数设置为 <see langword="true" />，则生成的文件会是更加可靠的独立文件，但这些文件可能会更大，或者由于格式限制而显示更多的视觉瑕疵。 默认值为 <see langword="false" />。</param>
        <param name="FixedFormatExtClassPtr">一个指针，指向使书签能够以其他固定格式保存的 <see langword="IMsoDocExporter" /> 接口的实现。 有关详细信息，请参阅“扩展 Office (2007) 固定格式导出功能”。</param>
        <summary>以 PDF 或 XPS 格式保存 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以将保存为 PDF 或 XPS 文件从 Word 外接程序计算机上安装。 有关详细信息，搜索"启用支持对其他文件格式，例如 PDF 和 XPS"Office online。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportFragment">
      <MemberSignature Language="C#" Value="public void ExportFragment (string FileName, Microsoft.Office.Interop.Word.WdSaveFormat Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportFragment(string FileName, valuetype Microsoft.Office.Interop.Word.WdSaveFormat Format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ExportFragment(System.String,Microsoft.Office.Interop.Word.WdSaveFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Word.WdSaveFormat" />
      </Parameters>
      <Docs>
        <param name="FileName">在其中保存文档片段的文件的完整路径。</param>
        <param name="Format">
          <see cref="T:Microsoft.Office.Interop.Word.WdSaveFormat" /> 值之一，指定文档片段文件的文件格式。 可以采用 Microsoft Office Word 支持的任何格式来保存文档片段。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 导出到文档用作文档片段。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Fields Fields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Fields Fields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Fields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Fields</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个只读 <see cref="T:Microsoft.Office.Interop.Word.Fields" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有字段。</summary>
        <value>一个只读 <see cref="T:Microsoft.Office.Interop.Word.Fields" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有字段。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为文本的第一个段落，然后在书签的末尾添加日期字段。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#30](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#30)]
 [!code-vb[Trin_WordBookmark#30](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Find Find { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Find Find" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Find" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Find</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Find" /> 对象，该对象包含在一个 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中进行查找操作的条件。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Find" /> 对象，包含在一个 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中进行查找操作的条件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件与文本发送到第一个段落，然后使用词语`sample`以单词`replacement`在书签内。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#31](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#31)]
 [!code-vb[Trin_WordBookmark#31](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FitTextWidth">
      <MemberSignature Language="C#" Value="public float FitTextWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 FitTextWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.FitTextWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 Microsoft Office Word 适合 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的宽度（以当前度量单位表示）。</summary>
        <value>Microsoft Office Word 适合 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的宽度（以当前度量单位表示）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件与文本发送到第一个段落，然后将更改<xref:Microsoft.Office.Tools.Word.Bookmark.FitTextWidth%2A>为一英寸的属性。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#32](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#32)]
 [!code-vb[Trin_WordBookmark#32](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:Microsoft.Office.Interop.Word.Font" /> 对象，该对象表示分配给一个 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文本的字符格式设置。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Font" /> 对象，表示分配给一个 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文本的字符格式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件与文本发送到第一个段落，然后将更改为蓝色的书签的字体颜色。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#33](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#33)]
 [!code-vb[Trin_WordBookmark#33](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FootnoteOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.FootnoteOptions FootnoteOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.FootnoteOptions FootnoteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.FootnoteOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.FootnoteOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.FootnoteOptions" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的脚注。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.FootnoteOptions" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的脚注。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>脚注 1 到书签中的起始数目和样式的数字的控件替换为文本的第一个段落，然后集<xref:Microsoft.Office.Interop.Word.WdNoteNumberStyle.wdNoteNumberStyleArabic>。 然后，它将插入脚注书签文本的下方。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#34](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#34)]
 [!code-vb[Trin_WordBookmark#34](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Footnotes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Footnotes Footnotes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Footnotes Footnotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Footnotes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Footnotes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Footnotes" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有脚注。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Footnotes" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有脚注。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>脚注 1 到书签中的起始数目和样式的数字的控件替换为文本的第一个段落，然后集<xref:Microsoft.Office.Interop.Word.WdNoteNumberStyle.wdNoteNumberStyleArabic>。 然后，它将插入脚注书签文本的下方。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#34](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#34)]
 [!code-vb[Trin_WordBookmark#34](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattedText">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range FormattedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range FormattedText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.FormattedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象包括 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的格式化文本。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，包括 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的格式化文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当设置此属性中的文本<xref:Microsoft.Office.Tools.Word.Bookmark>控件被替换为带格式文本。  
  
   
  
## Examples  
 下面的代码示例将文本插入的第一个段落，然后格式化为加粗第三个单词。 然后将第三个单词 （带格式设置） 复制到<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#35](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#35)]
 [!code-vb[Trin_WordBookmark#35](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormFields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.FormFields FormFields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.FormFields FormFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.FormFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.FormFields</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.FormFields" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有窗体域。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.FormFields" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有窗体域。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当你使用<xref:Microsoft.Office.Interop.Word.FormFields.Add%2A>方法<xref:Microsoft.Office.Tools.Word.Bookmark.FormFields%2A>，你可以仅传递以下枚举之一：  
  
 <xref:Microsoft.Office.Interop.Word.WdFieldType.wdFieldFormCheckBox>  
  
 <xref:Microsoft.Office.Interop.Word.WdFieldType.wdFieldFormDropDown>  
  
 <xref:Microsoft.Office.Interop.Word.WdFieldType.wdFieldFormTextInput>  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件的第一个段落，然后添加<xref:Microsoft.Office.Interop.Word.WdFieldType.wdFieldFormCheckBox>到书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#36](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#36)]
 [!code-vb[Trin_WordBookmark#36](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Frames Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Frames Frames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Frames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Frames</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Frames" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有框架。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Frames" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有框架。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为到文档的文本，然后将帧添加到书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#24](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#24)]
 [!code-vb[Trin_WordBookmark#24](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingSuggestions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.SpellingSuggestions GetSpellingSuggestions (ref object CustomDictionary, ref object IgnoreUppercase, ref object MainDictionary, ref object SuggestionMode, ref object CustomDictionary2, ref object CustomDictionary3, ref object CustomDictionary4, ref object CustomDictionary5, ref object CustomDictionary6, ref object CustomDictionary7, ref object CustomDictionary8, ref object CustomDictionary9, ref object CustomDictionary10);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.SpellingSuggestions GetSpellingSuggestions(object CustomDictionary, object IgnoreUppercase, object MainDictionary, object SuggestionMode, object CustomDictionary2, object CustomDictionary3, object CustomDictionary4, object CustomDictionary5, object CustomDictionary6, object CustomDictionary7, object CustomDictionary8, object CustomDictionary9, object CustomDictionary10) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.GetSpellingSuggestions(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.SpellingSuggestions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreUppercase" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MainDictionary" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SuggestionMode" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary4" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary5" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary6" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary7" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary8" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary9" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary10" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是自定义字典的文件名。</param>
        <param name="IgnoreUppercase">
          为 <see langword="true" />，则忽略全部是大写字母的单词。 如果省略此参数，则使用 <see cref="P:Microsoft.Office.Interop.Word.Options.IgnoreUppercase" /> 属性的当前值。</param>
        <param name="MainDictionary">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是主字典的文件名。 如果不指定主字典，则 Microsoft Office Word 使用对应于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的第一个单词的语言格式设置的主字典。</param>
        <param name="SuggestionMode">指定 Word 提供拼写建议的方式。 可以为以下 <see cref="T:Microsoft.Office.Interop.Word.WdSpellingWordType" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdSpellingWordType.wdAnagram" />、<see cref="F:Microsoft.Office.Interop.Word.WdSpellingWordType.wdSpellword" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdSpellingWordType.wdWildcard" />。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdSpellingWordType.wdSpellword" />。</param>
        <param name="CustomDictionary2">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary3">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary4">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary5">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary6">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary7">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary8">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary9">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary10">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.SpellingSuggestions" /> 集合，该集合表示建议作为 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的第一个单词的拼写替换的单词。</summary>
        <returns>一个 <see cref="T:Microsoft.Office.Interop.Word.SpellingSuggestions" /> 集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>拼写错误的文本，然后显示在第一个段落与使用来控制在消息框中的第一个拼写建议。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#37](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#37)]
 [!code-vb[Trin_WordBookmark#37](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GoTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoTo (ref object What, ref object Which, ref object Count, ref object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoTo(object What, object Which, object Count, object Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.GoTo(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Which" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Name" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="What">在 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 中检索的项的类型。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" /> 常量之一。</param>
        <param name="Which">在 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 中检索的项可以是 <see cref="T:Microsoft.Office.Interop.Word.WdGoToDirection" /> 常数之一。</param>
        <param name="Count">文档中项的编号。 默认值为 1。  
  
 只有正数值才有效。 要指定位于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件之前的项，请使用 <see cref="F:Microsoft.Office.Interop.Word.WdGoToDirection.wdGoToPrevious" /> 作为 <c>Which</c> 参数，并指定一个 <c>Count</c> 值。</param>
        <param name="Name">如果 <c>What</c> 参数是 <see cref="F:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToBookmark" />、<see cref="F:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToComment" />、<see cref="F:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToField" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToObject" />，则此参数指定一个名称。</param>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中某个项的起始位置。</summary>
        <returns>
          <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当你使用<xref:Microsoft.Office.Tools.Word.Bookmark.GoTo%2A>方法替换<xref:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToGrammaticalError>， <xref:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToProofreadingError>，或<xref:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToSpellingError>常量，<xref:Microsoft.Office.Interop.Word.Range>返回包括任何语法错误的文本或拼写错误的文本。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例中插入<xref:Microsoft.Office.Tools.Word.Bookmark>具有拼写错误的第一个段落的文本控件然后将转到在书签中的第一个拼写错误，并显示在一个消息框中的位置。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#38](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#38)]
 [!code-vb[Trin_WordBookmark#38](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToEditableRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToEditableRange (ref object EditorID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToEditableRange(object EditorID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.GoToEditableRange(System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EditorID" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="EditorID">可以是一个表示用户的电子邮件别名的字符串（如果在同一域中）、一个电子邮件地址或一个表示一组用户的 <see cref="T:Microsoft.Office.Interop.Word.WdEditorType" /> 常数。 如果省略，则选择所有用户都有权限编辑的所有范围。</param>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象表示可由用户或用户组修改的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的区域。</summary>
        <returns>一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示可由用户或用户组修改的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的区域。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制与在文档中的第一个段落的文本，并添加作为在书签中的第四个单词的编辑器的所有用户。 然后，该示例将保护该文档不被修订版本。 最后，该代码可显示消息框中的书签的可编辑范围。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#22](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#22)]
 [!code-vb[Trin_WordBookmark#22](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToNext">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToNext (Microsoft.Office.Interop.Word.WdGoToItem What);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToNext(valuetype Microsoft.Office.Interop.Word.WdGoToItem What) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.GoToNext(Microsoft.Office.Interop.Word.WdGoToItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="Microsoft.Office.Interop.Word.WdGoToItem" />
      </Parameters>
      <Docs>
        <param name="What">
          <see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" />。</param>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象表示由 <paramref name="What" /> 参数指定的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中下一项或位置的起始位置。</summary>
        <returns>一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示由 <paramref name="What" /> 参数指定的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中下一项或位置的起始位置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当你使用此方法与<xref:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToGrammaticalError>， <xref:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToProofreadingError>，或<xref:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToSpellingError>常量，<xref:Microsoft.Office.Interop.Excel.Range>返回的对象包括任何语法错误的文本或拼写错误的文本。  
  
   
  
## Examples  
 下面的代码示例将文本添加和<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为到该文档中的文本，然后将注释添加到文本。 使用<xref:Microsoft.Office.Tools.Word.Bookmark.GoToNext%2A>和<xref:Microsoft.Office.Tools.Word.Bookmark.GoToPrevious%2A>，它在消息框中显示注释的位置。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#39](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#39)]
 [!code-vb[Trin_WordBookmark#39](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#39)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToPrevious">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToPrevious (Microsoft.Office.Interop.Word.WdGoToItem What);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToPrevious(valuetype Microsoft.Office.Interop.Word.WdGoToItem What) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.GoToPrevious(Microsoft.Office.Interop.Word.WdGoToItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="Microsoft.Office.Interop.Word.WdGoToItem" />
      </Parameters>
      <Docs>
        <param name="What">
          <see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" />。 要移动到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的项。</param>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，该对象表示由 <paramref name="What" /> 参数指定的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中上一项或位置的起始位置。</summary>
        <returns>一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，表示由 <paramref name="What" /> 参数指定的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中上一项或位置的起始位置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将文本添加和<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为到该文档中的文本，然后将注释添加到文本。 使用<xref:Microsoft.Office.Tools.Word.Bookmark.GoToNext%2A>和<xref:Microsoft.Office.Tools.Word.Bookmark.GoToPrevious%2A>，此代码示例在一个消息框显示注释的位置。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#39](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#39)]
 [!code-vb[Trin_WordBookmark#39](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#39)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GrammarChecked">
      <MemberSignature Language="C#" Value="public bool GrammarChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GrammarChecked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.GrammarChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件执行了语法检查。</summary>
        <value>
          如果对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件运行了语法检查，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以重新检查中的语法<xref:Microsoft.Office.Tools.Word.Bookmark>控制、 设置<xref:Microsoft.Office.Tools.Word.Bookmark.GrammarChecked%2A>属性`false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GrammaticalErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ProofreadingErrors GrammaticalErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ProofreadingErrors GrammaticalErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.GrammaticalErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ProofreadingErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.ProofreadingErrors" /> 集合，该集合表示对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件进行语法检查失败的句子。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ProofreadingErrors" /> 集合，表示对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 进行语法检查失败的句子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以有多个错误，每个句子。  
  
 如果没有任何语法错误，<xref:Microsoft.Office.Interop.Word.ProofreadingErrors.Count%2A>属性<xref:Microsoft.Office.Interop.Word.ProofreadingErrors>返回对象<xref:Microsoft.Office.Tools.Word.Bookmark.GrammaticalErrors%2A>属性都返回 0 （零）。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>带到第一个段落，然后运行文本控制语法检查程序，如果在书签中有语法错误。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#41](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#41)]
 [!code-vb[Trin_WordBookmark#41](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdColorIndex HighlightColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdColorIndex HighlightColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.HighlightColorIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的突出显示颜色。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.WdColorIndex" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性设置为<xref:Microsoft.Office.Interop.Word.WdColorIndex.wdNoHighlight>从 （如果有） 中的突出显示颜色移除<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到第一个段落，然后设置的文本控件<xref:Microsoft.Office.Tools.Word.Bookmark.HighlightColorIndex%2A>为黄色书签中的第三个单词。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#42](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#42)]
 [!code-vb[Trin_WordBookmark#42](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalInVertical">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdHorizontalInVerticalType HorizontalInVertical { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdHorizontalInVerticalType HorizontalInVertical" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.HorizontalInVertical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdHorizontalInVerticalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的垂直文本中设置的水平文本的格式设置。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.WdHorizontalInVerticalType" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为到第一个段落，然后更改文本垂直显示在书签中的第三个单词。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#43](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#43)]
 [!code-vb[Trin_WordBookmark#43](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HTMLDivisions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.HTMLDivisions HTMLDivisions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.HTMLDivisions HTMLDivisions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.HTMLDivisions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.HTMLDivisions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.HTMLDivisions" /> 对象，该对象表示 Web 文档中的 HTML 分段。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.HTMLDivisions" /> 对象，表示 Web 文档中的 HTML 分段。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件带到第一个段落的文本，然后添加<xref:Microsoft.Office.Tools.Word.Bookmark.HTMLDivisions%2A>给书签的对象并在消息框中的书签中显示的 HTML 片段的总数。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#44](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#44)]
 [!code-vb[Trin_WordBookmark#44](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#44)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Hyperlinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Hyperlinks" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有超链接。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Hyperlinks" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有超链接。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为到文档的文本，然后将超链接添加到书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#45](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#45)]
 [!code-vb[Trin_WordBookmark#45](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#45)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在将当前文档另存为网页时 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的标识标签。</summary>
        <value>在将当前文档另存为网页时 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的标识标签。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这是不同于<xref:Microsoft.Office.Tools.Word.Bookmark.BookmarkID%2A>属性，并不表示订单书签显示文档中。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为文本的文档，然后集的 ID 属性`Sample`。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#46](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#46)]
 [!code-vb[Trin_WordBookmark#46](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#46)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportFragment">
      <MemberSignature Language="C#" Value="public void ImportFragment (string FileName, bool MatchDestination = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportFragment(string FileName, bool MatchDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ImportFragment(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="MatchDestination" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileName">指定要导入的文档片段的完整路径。</param>
        <param name="MatchDestination">
          如果要与目标格式设置相匹配，则为 <see langword="true" />；否则为 <see langword="false" />。 如果指定为 <see langword="false" />，则导入的文档片段会保留原始文档中的格式设置。 默认值为 <see langword="false" />。</param>
        <summary>将文档片段导入到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法的内容替换<xref:Microsoft.Office.Tools.Word.Bookmark>。 若要阻止这发生，请使用<xref:Microsoft.Office.Tools.Word.Bookmark.Collapse%2A>方法，然后才能使用此方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Information">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.Bookmark_InformationType Information { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Word.Bookmark_InformationType Information" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Information" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.Bookmark_InformationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取有关 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的信息。</summary>
        <value>提供有关 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的信息的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark.Information%2A>属性应与以下参数一起使用。  
  
|参数|描述|  
|---------------|-----------------|  
|`Type`|之一<xref:Microsoft.Office.Interop.Word.WdInformation>为该书签返回指定的信息类型的值。|  
  
 如果你使用<xref:Microsoft.Office.Tools.Word.Bookmark.Information%2A>未指定参数的属性，它返回<xref:Microsoft.Office.Tools.Word.Bookmark_InformationType>不应在代码中直接使用的对象。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有为文档，然后使用的文本控件<xref:Microsoft.Office.Tools.Word.Bookmark.Information%2A>属性在消息框中显示页码。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#47](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#47)]
 [!code-vb[Trin_WordBookmark#47](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InlineShapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShapes InlineShapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.InlineShapes InlineShapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.InlineShapes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.InlineShapes" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> 控件中的所有 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.InlineShapes" /> 集合，表示 <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> 控件中的所有 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制对文档，然后将水平行添加到该书签。 然后，代码将显示书签包含在消息框中的内联形状的总数。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#48](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#48)]
 [!code-vb[Trin_WordBookmark#48](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Bookmark InnerObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Bookmark InnerObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.InnerObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Bookmark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 控件的基础 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不能将传递<xref:Microsoft.Office.Tools.Word.Bookmark?displayProperty=fullName>主机到方法或属性需要基础对象的控件 ( <xref:Microsoft.Office.Interop.Word.Bookmark?displayProperty=fullName>)。 必须使用<xref:Microsoft.Office.Tools.Word.Bookmark.InnerObject%2A>属性<xref:Microsoft.Office.Tools.Word.Bookmark?displayProperty=fullName>主机控件来访问基础<xref:Microsoft.Office.Interop.Word.Bookmark?displayProperty=fullName>。 然后将该对象传递给方法或属性需要<xref:Microsoft.Office.Interop.Word.Bookmark?displayProperty=fullName>。 有关详细信息，请参阅[限制的主机项和主机控件编程](/visualstudio/vsto/programmatic-limitations-of-host-items-and-host-controls.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InRange">
      <MemberSignature Language="C#" Value="public bool InRange (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InRange(class Microsoft.Office.Interop.Word.Range Range) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InRange(Microsoft.Office.Interop.Word.Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range">
          <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象。</param>
        <summary>确定 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 控件中是否包含应用该方法的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <returns>
          如果应用该方法的 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 控件中包含指定的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可确定是否<xref:Microsoft.Office.Interop.Word.Range>中包含<xref:Microsoft.Office.Tools.Word.Bookmark>通过比较的起始和结束字符的位置，以及情景类型的控件。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到文档，然后检查以确定是否的书签将变为在相同的范围为 1 个段落的文本控件。 此代码随后将一个消息框中显示结果。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#49](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#49)]
 [!code-vb[Trin_WordBookmark#49](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#49)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public void InsertAfter (string Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAfter(string Text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertAfter(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">要插入的文本。</param>
        <summary>在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的末尾插入指定文本。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将文本添加和<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为到该文档中的文本，然后将注释添加到文本。 使用<xref:Microsoft.Office.Tools.Word.Bookmark.GoToNext%2A>和<xref:Microsoft.Office.Tools.Word.Bookmark.GoToPrevious%2A>，它在消息框中显示注释的位置。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#39](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#39)]
 [!code-vb[Trin_WordBookmark#39](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#39)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAlignmentTab">
      <MemberSignature Language="C#" Value="public void InsertAlignmentTab (int Alignment, int RelativeTo = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAlignmentTab(int32 Alignment, int32 RelativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertAlignmentTab(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Alignment" Type="System.Int32" />
        <Parameter Name="RelativeTo" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Alignment">
          <see cref="T:Microsoft.Office.Interop.Word.WdAlignmentTabAlignment" /> 值之一，指定制表位的对齐类型（如左对齐、居中或右对齐）。</param>
        <param name="RelativeTo">
          <see cref="T:Microsoft.Office.Interop.Word.WdAlignmentTabRelative" /> 值之一，指定制表位是相对于边距还是段落缩进。</param>
        <summary>将一个绝对制表符插入到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中，该绝对制表符相对于边距或缩进始终位于相同点上。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAutoText">
      <MemberSignature Language="C#" Value="public void InsertAutoText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAutoText() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertAutoText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>尝试将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本与现有“自动图文集”词条名匹配。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果找到任何此类匹配，则<xref:Microsoft.Office.Tools.Word.Bookmark.InsertAutoText%2A>插入图文来替换该文本。 如果找不到匹配项，则引发异常。  
  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
 你可以使用<xref:Microsoft.Office.Interop.Word.AutoTextEntry.Insert%2A>方法替换<xref:Microsoft.Office.Interop.Word.AutoTextEntry>要插入特定图文条目对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public void InsertBefore (string Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBefore(string Text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertBefore(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">要插入的文本。</param>
        <summary>在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件之前插入指定文本。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将文本添加和<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为到该文档中的文本，然后将注释添加到文本。 使用<xref:Microsoft.Office.Tools.Word.Bookmark.GoToNext%2A>和<xref:Microsoft.Office.Tools.Word.Bookmark.GoToPrevious%2A>，此代码在消息框中将显示注释的位置。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#39](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#39)]
 [!code-vb[Trin_WordBookmark#39](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#39)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBreak">
      <MemberSignature Language="C#" Value="public void InsertBreak (ref object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBreak(object Type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertBreak(System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Type">要插入的分隔符的类型。 <see cref="T:Microsoft.Office.Interop.Word.WdBreakType" />。</param>
        <summary>向 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中插入分页符、分列符或分节符。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到文档，然后插入的文本控件**下一页**第四个单词在书签中之前的部分中断。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#50](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#50)]
 [!code-vb[Trin_WordBookmark#50](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#50)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCaption">
      <MemberSignature Language="C#" Value="public void InsertCaption (ref object Label, ref object Title, ref object TitleAutoText, ref object Position, ref object ExcludeLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCaption(object Label, object Title, object TitleAutoText, object Position, object ExcludeLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertCaption(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Label" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Title" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="TitleAutoText" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Position" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ExcludeLabel" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Label">要插入的标题标签。 <see cref="T:Microsoft.Office.Interop.Word.WdCaptionLabelID" />。</param>
        <param name="Title">要在紧靠该标题中的标签之后插入的文本（如果指定了 <c>TitleAutoText</c>，则忽略）。</param>
        <param name="TitleAutoText">要在紧靠该标题中的标签之后插入其内容的“自动图文集”词条（替代由 <c>Title</c> 指定的任何文本）。</param>
        <param name="Position">指定是在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件之上还是之下插入标题。 <see cref="T:Microsoft.Office.Interop.Word.WdCaptionPosition" />。</param>
        <param name="ExcludeLabel">
          <see langword="true" /> 表示不包含文本标签，如 <c>Label</c> 参数中所定义。 如果为 <see langword="false" />，则包含指定的标签。</param>
        <summary>紧靠 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件之前或之后插入标题。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>使用来控制文档，然后再插入的文本标题插入书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#51](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#51)]
 [!code-vb[Trin_WordBookmark#51](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCaptionXP">
      <MemberSignature Language="C#" Value="public void InsertCaptionXP (ref object Label, ref object Title, ref object TitleAutoText, ref object Position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCaptionXP(object Label, object Title, object TitleAutoText, object Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertCaptionXP(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Label" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Title" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="TitleAutoText" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Position" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Label">To be added.</param>
        <param name="Title">To be added.</param>
        <param name="TitleAutoText">To be added.</param>
        <param name="Position">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCrossReference">
      <MemberSignature Language="C#" Value="public void InsertCrossReference (ref object ReferenceType, Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, ref object ReferenceItem, ref object InsertAsHyperlink, ref object IncludePosition, ref object SeparateNumbers, ref object SeparatorString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCrossReference(object ReferenceType, valuetype Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, object ReferenceItem, object InsertAsHyperlink, object IncludePosition, object SeparateNumbers, object SeparatorString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertCrossReference(System.Object@,Microsoft.Office.Interop.Word.WdReferenceKind,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ReferenceType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ReferenceKind" Type="Microsoft.Office.Interop.Word.WdReferenceKind" />
        <Parameter Name="ReferenceItem" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsHyperlink" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IncludePosition" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SeparateNumbers" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SeparatorString" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ReferenceType">要插入交叉引用的项的类型。 可以是任何 <see cref="T:Microsoft.Office.Interop.Word.WdReferenceType" /> 或 <see cref="T:Microsoft.Office.Interop.Word.WdCaptionLabelID" /> 常数或一个用户定义的标题标签。</param>
        <param name="ReferenceKind">要包含在交叉引用中的信息。</param>
        <param name="ReferenceItem">如果 <c>ReferenceType</c> 为 <see cref="F:Microsoft.Office.Interop.Word.WdReferenceType.wdRefTypeBookmark" />，则此参数指定一个书签名。 对于所有其他 <c>ReferenceType</c> 值，此参数指定位于“交叉引用”对话框的“引用类型”框中的项数或名称。 使用 <see cref="M:Microsoft.Office.Interop.Word._Document.GetCrossReferenceItems(System.Object@)" /> 方法可返回可与此参数一起使用的项名称列表。</param>
        <param name="InsertAsHyperlink">
          为 <see langword="true" />，则将交叉引用作为超链接插入被引用项中；否则为 <see langword="false" />。</param>
        <param name="IncludePosition">
          为 <see langword="true" />，则根据引用项相对于交叉引用的位置，在之上或之下插入。</param>
        <param name="SeparateNumbers">
          为 <see langword="true" />，则使用分隔符将编号与关联文本分隔开来。 （仅当 <c>ReferenceType</c> 参数设置为 <see cref="F:Microsoft.Office.Interop.Word.WdReferenceType.wdRefTypeNumberedItem" /> 且 <c>ReferenceKind</c> 参数设置为 <see cref="F:Microsoft.Office.Interop.Word.WdReferenceKind.wdNumberFullContext" /> 时使用。）</param>
        <param name="SeparatorString">如果 <c>SeparateNumbers</c> 参数设置为 <see langword="true" />，则指定一个字符串来用作分隔符。</param>
        <summary>将对标题、书签、脚注或尾注、或对定义有标题标签的项（例如，公式、图形或表）的交叉引用插入 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果指定<xref:Microsoft.Office.Interop.Word.WdReferenceKind.wdPageNumber>的值的`ReferenceKind`，你可能需要重新文档分页才能看到正确的交叉引用信息。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将标题和文本添加到文档使用<xref:Microsoft.Office.Tools.Word.Bookmark>控制，然后插入对标题文本的交叉引用。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#52](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#52)]
 [!code-vb[Trin_WordBookmark#52](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#52)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCrossReference_2002">
      <MemberSignature Language="C#" Value="public void InsertCrossReference_2002 (ref object ReferenceType, Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, ref object ReferenceItem, ref object InsertAsHyperlink, ref object IncludePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCrossReference_2002(object ReferenceType, valuetype Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, object ReferenceItem, object InsertAsHyperlink, object IncludePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertCrossReference_2002(System.Object@,Microsoft.Office.Interop.Word.WdReferenceKind,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ReferenceType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ReferenceKind" Type="Microsoft.Office.Interop.Word.WdReferenceKind" />
        <Parameter Name="ReferenceItem" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsHyperlink" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IncludePosition" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ReferenceType">To be added.</param>
        <param name="ReferenceKind">To be added.</param>
        <param name="ReferenceItem">To be added.</param>
        <param name="InsertAsHyperlink">To be added.</param>
        <param name="IncludePosition">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDatabase">
      <MemberSignature Language="C#" Value="public void InsertDatabase (ref object Format, ref object Style, ref object LinkToSource, ref object Connection, ref object SQLStatement, ref object SQLStatement1, ref object PasswordDocument, ref object PasswordTemplate, ref object WritePasswordDocument, ref object WritePasswordTemplate, ref object DataSource, ref object From, ref object To, ref object IncludeFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertDatabase(object Format, object Style, object LinkToSource, object Connection, object SQLStatement, object SQLStatement1, object PasswordDocument, object PasswordTemplate, object WritePasswordDocument, object WritePasswordTemplate, object DataSource, object From, object To, object IncludeFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertDatabase(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Style" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="LinkToSource" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Connection" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SQLStatement" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SQLStatement1" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PasswordDocument" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PasswordTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="WritePasswordDocument" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="WritePasswordTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DataSource" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="From" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="To" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IncludeFields" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Format">在“表格自动套用格式”对话框中的“格式”框中列出的格式。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdTableFormat" /> 常数中的任何一个。 默认情况下，会对表中的单元格应用边框。</param>
        <param name="Style">由应用于表的 <c>Format</c> 指定的“自动套用格式”的属性。 使用以下值的任意组合之和：  
  
 [1|1] 值  
  
 [1|2] 意义  
  
 [2|1] 0 （零）  
  
 [2|2] 无  
  
 [3|1] 1  
  
 [3|2] 边框  
  
 [4|1] 2  
  
 [4|2] 底纹  
  
 [5|1] 4  
  
 [5|2] 字体  
  
 [6|1] 8  
  
 [6|2] 颜色  
  
 [7|1] 16  
  
 [7|2] 自动调整  
  
 [8|1] 32  
  
 [8|2] 标题行  
  
 [9|1] 64  
  
 [9|2] 最后一行  
  
 [10|1] 128  
  
 [10|2] 第一列  
  
 [11|1] 256  
  
 [11|2] 最后一列</param>
        <param name="LinkToSource">
          如果为 <see langword="true" />，则创建新表与数据源之间的链接。</param>
        <param name="Connection">限制执行由 <c>SQLStatement</c> 指定的查询的范围。 指定范围的方式取决于数据的检索方式。 例如:  
  
 如果通过开放式数据库连接 (ODBC) 检索，则指定一个连接字符串。  
  
 如果通过使用动态数据交换 (DDE) 从 Microsoft Office Excel 检索，则指定一个指定范围或“整个电子表格”。  
  
 **注意**<see langword="   " />动态数据交换 (DDE) 是比较老的技术，它不是很安全。 如果可能，请使用更安全的 DDE 的替代技术，如对象链接和嵌入 (OLE)。  
  
 如果从 Microsoft Access 检索数据，则指定单词“Table”或“Query”，其后跟表名或查询名称。</param>
        <param name="SQLStatement">一个可选查询字符串，它检索要插入文档中的、主数据源中的数据的子集。</param>
        <param name="SQLStatement1">如果查询字符串的长度超过 255 个字符，则 <c>SQLStatement</c> 表示该字符串的第一部分，而 <c>SQLStatement1</c> 表示第二部分。</param>
        <param name="PasswordDocument">打开数据源所需的密码（如果有）。 （请参见下面的备注。）</param>
        <param name="PasswordTemplate">如果数据源为 Microsoft Office Word 文档，则此参数为打开附加模板所需的密码（如果有）。 （请参见下面的备注。）</param>
        <param name="WritePasswordDocument">保存对文档的更改所需的密码。 （请参见下面的备注。）</param>
        <param name="WritePasswordTemplate">保存对模板的更改所需的密码。 （请参见下面的备注。）</param>
        <param name="DataSource">数据源的路径和文件名。</param>
        <param name="From">要插入的记录的范围中第一个数据记录的编号。</param>
        <param name="To">要插入的记录的范围中最后一个数据记录的编号。</param>
        <param name="IncludeFields">
          为 <see langword="true" />，则在新表的第一行中包含来自数据源的字段名。</param>
        <summary>从数据源（例如，一个单独的 Microsoft Office Word 文档、一个 Microsoft Office Excel 工作表或一个 Microsoft Access 数据库）检索数据，并以表的形式插入该数据来代替 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 避免在你的应用程序中使用硬编码的密码。 如果在过程中需要使用密码，从用户请求密码、 将其存储在变量中，然后在代码中使用该变量。  
  
 避免使用内置的系统管理员 (sa) 登录帐户。 相反，使系统管理员成员的 sysadmin 固定的服务器角色，并将它们使用其自己的帐户登录。 仅当没有其他方法登录，请使用 sa。 若要防止未经授权的访问通过 sa 登录帐户，应该为该帐户分配唯一的强密码。  
  
 如果可能，请使用 Windows 身份验证 （也称为可信连接） 的 Windows 用户帐户用于连接到 SQL Server。 当用户连接通过 Windows 用户帐户时，SQL Server 使用信息在 Windows 操作系统中来验证帐户名和密码。 你可以使用 Windows 身份验证之前，服务器管理员必须配置 SQL Server 以使用这种模式的身份验证。 如果 Windows 身份验证不可用，避免保存用户的登录信息。 它是更安全的用户输入他们的登录信息每次登录的时。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 此示例将插入到 Microsoft Excel 电子表格<xref:Microsoft.Office.Tools.Word.Bookmark>控件。 样式值 (191) 为数字 1、 2、 4、 8、 16、 32 和 128 的组合。 此示例假定您具有名为工作簿`Data.xlsx`工作表上保存到使用的数据的至少两个行 C 目录的根目录。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#54](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#54)]
 [!code-vb[Trin_WordBookmark#54](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#54)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDateTime">
      <MemberSignature Language="C#" Value="public void InsertDateTime (ref object DateTimeFormat, ref object InsertAsField, ref object InsertAsFullWidth, ref object DateLanguage, ref object CalendarType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertDateTime(object DateTimeFormat, object InsertAsField, object InsertAsFullWidth, object DateLanguage, object CalendarType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertDateTime(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateTimeFormat" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsField" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsFullWidth" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DateLanguage" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CalendarType" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="DateTimeFormat">要用于显示日期或时间，或同时显示日期和时间的格式。 如果省略此参数，则 Microsoft Office Word 使用来自 Windows 控制面板（“区域设置”图标）的短日期样式。</param>
        <param name="InsertAsField">
          为 <see langword="true" />，则以 TIME 字段的形式插入指定信息；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</param>
        <param name="InsertAsFullWidth">
          为 <see langword="true" />，则以双字节数字的形式插入指定信息；否则为 <see langword="false" />。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <param name="DateLanguage">设置显示日期和时间的语言。 可以为以下 <see cref="T:Microsoft.Office.Interop.Word.WdDateLanguage" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdDateLanguage.wdDateLanguageBidi" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdDateLanguage.wdDateLanguageLatin" />。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <param name="CalendarType">设置显示日期或时间时要使用的日历类型。 可以为以下 <see cref="T:Microsoft.Office.Interop.Word.WdCalendarTypeBi" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdCalendarTypeBi.wdCalendarTypeBidi" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdCalendarTypeBi.wdCalendarTypeGregorian" />。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <summary>以文本或以 TIME 字段的形式将当前日期或时间，或同时将日期和时间插入 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例中插入<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为文本，然后插入和文档中的日期和时间字段到书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#55](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#55)]
 [!code-vb[Trin_WordBookmark#55](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#55)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDateTimeOld">
      <MemberSignature Language="C#" Value="public void InsertDateTimeOld (ref object DateTimeFormat, ref object InsertAsField, ref object InsertAsFullWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertDateTimeOld(object DateTimeFormat, object InsertAsField, object InsertAsFullWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertDateTimeOld(System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateTimeFormat" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsField" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsFullWidth" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="DateTimeFormat">To be added.</param>
        <param name="InsertAsField">To be added.</param>
        <param name="InsertAsFullWidth">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertFile">
      <MemberSignature Language="C#" Value="public void InsertFile (string FileName, ref object Range, ref object ConfirmConversions, ref object Link, ref object Attachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertFile(string FileName, object Range, object ConfirmConversions, object Link, object Attachment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertFile(System.String,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Range" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Link" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Attachment" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">要插入的文件的路径和文件名。 如果不指定路径，则 Microsoft Office Word 假定该文件在当前文件夹中。</param>
        <param name="Range">如果指定的文件是一个 Word 文档，则此参数表示一个书签。 如果该文件是另一种类型（例如，一个 Microsoft Office Excel 工作簿），则此参数表示指定范围或单元格范围（例如，R1C1:R3C4）。</param>
        <param name="ConfirmConversions">
          为 <see langword="true" />，则插入非 Word 文档格式的文件时，让 Word 提示确认转换。</param>
        <param name="Link">
          为 <see langword="true" />，则通过使用 <see cref="F:Microsoft.Office.Interop.Word.WdFieldType.wdFieldIncludeText" /> 字段插入文件。</param>
        <param name="Attachment">
          为 <see langword="true" />，则以附件的形式将该文件插入电子邮件。</param>
        <summary>将所有或部分指定文件插入 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例向文档添加书签控件，然后将一个文件插入到书签。 此示例要求你拥有名为的文档`Sales.docx`在 C 目录的根目录。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#56](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#56)]
 [!code-vb[Trin_WordBookmark#56](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#56)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraph">
      <MemberSignature Language="C#" Value="public void InsertParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertParagraph" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用新段落替换 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你不想要替换<xref:Microsoft.Office.Tools.Word.Bookmark>控制，请使用<xref:Microsoft.Office.Tools.Word.Bookmark.Collapse%2A>方法，然后才能使用此方法。 <xref:Microsoft.Office.Tools.Word.Bookmark.InsertParagraphAfter%2A>方法插入段落后的新<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphAfter">
      <MemberSignature Language="C#" Value="public void InsertParagraphAfter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraphAfter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertParagraphAfter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件之后插入一个段落标记。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBefore">
      <MemberSignature Language="C#" Value="public void InsertParagraphBefore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraphBefore() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertParagraphBefore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件之前插入一个新段落。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用此方法后，<xref:Microsoft.Office.Tools.Word.Bookmark>控件扩展以包含新段落。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertSymbol">
      <MemberSignature Language="C#" Value="public void InsertSymbol (int CharacterNumber, ref object Font, ref object Unicode, ref object Bias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertSymbol(int32 CharacterNumber, object Font, object Unicode, object Bias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertSymbol(System.Int32,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharacterNumber" Type="System.Int32" />
        <Parameter Name="Font" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Unicode" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Bias" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="CharacterNumber">指定符号的字符数。 此值始终为 31 与对应于该符号在符号表中的位置的数字（从左向右数）之和。 例如，要指定在 Symbol 字体中位于符号表中位置 37 处的增量字符，请将 <c>CharacterNumber</c> 设置为 68。</param>
        <param name="Font">包含符号的字体的名称。</param>
        <param name="Unicode">
          为 <see langword="true" />，则插入由 <c>CharacterNumber</c> 指定的 Unicode 字符；为 <see langword="false" />，则插入由 <c>CharacterNumber</c> 指定的 ANSI 字符。 默认值为 <see langword="false" />。</param>
        <param name="Bias">设置符号的字体偏量。 此参数在设置东亚字符的正确字体偏量时很有用。 可以为以下 <see cref="T:Microsoft.Office.Interop.Word.WdFontBias" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdFontBias.wdFontBiasDefault" />、<see cref="F:Microsoft.Office.Interop.Word.WdFontBias.wdFontBiasDontCare" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdFontBias.wdFontBiasFareast" />。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <summary>插入一个符号来代替 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档，然后插入双向双箭头插入该书签。 当你使用时从文档中删除该书签<xref:Microsoft.Office.Tools.Word.Bookmark.InsertSymbol%2A>方法。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#57](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#57)]
 [!code-vb[Trin_WordBookmark#57](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#57)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertXML">
      <MemberSignature Language="C#" Value="public void InsertXML (string XML, ref object Transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertXML(string XML, object Transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertXML(System.String,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XML" Type="System.String" />
        <Parameter Name="Transform" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="XML">要插入的 XML 文本。</param>
        <param name="Transform">要应用于插入的 XML 文本的转换。</param>
        <summary>向 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件插入指定的 XML 文本。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:Microsoft.Office.Tools.Word.Bookmark>控件包含文本，<xref:Microsoft.Office.Tools.Word.Bookmark.InsertXML%2A>方法替换现有文本。  
  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
 使用<xref:Microsoft.Office.Tools.Word.Bookmark.InsertXML%2A>方法将文本插入任意 XML 或 Word XML 标记。 此 XML 必须格式正确。 如果它使用 Word XML，然后它还必须是符合 Word XML 架构。  
  
 如果指定的 XML 文本不能插入<xref:Microsoft.Office.Tools.Word.Bookmark>显示控件，一条错误消息。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档，然后将 XML 文本插入书签。 然后显示一个消息框以显示总数目<xref:Microsoft.Office.Interop.Word.XMLNodes>和书签的 XML 内容。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#58](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#58)]
 [!code-vb[Trin_WordBookmark#58](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#58)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InStory">
      <MemberSignature Language="C#" Value="public bool InStory (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InStory(class Microsoft.Office.Interop.Word.Range Range) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InStory(Microsoft.Office.Interop.Word.Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range">
          <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，其文章与包含 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文章进行比较。</param>
        <summary>确定应用此方法的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件与 <paramref name="Range" /> 参数指定的范围是否位于同一文章中。</summary>
        <returns>
          如果应用此方法的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件与 <paramref name="Range" /> 参数指定的范围位于同一文章中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到文档，然后检查以找出是否它为作为第一个段落的同一篇文章中的文本控件。 结果将显示消息框中。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#59](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#59)]
 [!code-vb[Trin_WordBookmark#59](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#59)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEndOfRowMark">
      <MemberSignature Language="C#" Value="public bool IsEndOfRowMark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEndOfRowMark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.IsEndOfRowMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件是否已折叠且位于表中的行末标记处。</summary>
        <value>
          如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件已折叠且位于表中的行末标记处，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="C#" Value="public bool IsEqual (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEqual(class Microsoft.Office.Interop.Word.Range Range) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.IsEqual(Microsoft.Office.Interop.Word.Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range">与 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 控件进行比较的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</param>
        <summary>确定应用此方法的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件是否与 <paramref name="Range" /> 参数指定的范围相等。</summary>
        <returns>
          如果应用此方法的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件与 <paramref name="Range" /> 参数指定的范围相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 起始和结束字符的位置，以及情景类型，此方法将进行比较。 如果这些项中的所有三个对于两个对象相同，则对象相等。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有文档，然后检查以查明书签的范围是否相等的范围的第一个段落的文本控件。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#60](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#60)]
 [!code-vb[Trin_WordBookmark#60](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#60)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Italic">
      <MemberSignature Language="C#" Value="public int Italic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Italic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Italic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的格式是否设置为斜体。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的任何文本都不是斜体，则为 0；如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有文本都是斜体，则为 -1；如果 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdUndefined" /> 控件中的部分文本是斜体，则为 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> (999999)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可以设置为的值是 0，-1，或<xref:Microsoft.Office.Interop.Word.WdConstants.wdToggle>。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制对该文档，然后将应用格式设置为基于书签<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>在书签内的文本。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#4)]
 [!code-vb[Trin_WordBookmark#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItalicBi">
      <MemberSignature Language="C#" Value="public int ItalicBi { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItalicBi" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ItalicBi" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的格式是否设置为斜体。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件文本中的任何文本都不是斜体，则为 0；如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有文本都是斜体，则为 1；如果 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdUndefined" /> 控件中的部分文本是斜体，则为 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> (999999)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可以设置为值为 0、 1、 或<xref:Microsoft.Office.Interop.Word.WdConstants.wdToggle>。  
  
 <xref:Microsoft.Office.Tools.Word.Bookmark.ItalicBi%2A>属性适用于从右到左语言的文本。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制对该文档，然后将应用格式设置为基于书签<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>在书签内的文本。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#4)]
 [!code-vb[Trin_WordBookmark#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Kana">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdKana Kana { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdKana Kana" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Kana" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdKana</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中指定范围的日语文本是平假名还是片假名。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.WdKana" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性返回<xref:Microsoft.Office.Interop.Word.WdConstants.wdUndefined>如果的范围<xref:Microsoft.Office.Tools.Word.Bookmark>控件包含平假名和片假名或包含一些非日语文本范围的组合。 如果你设置<xref:Microsoft.Office.Tools.Word.Bookmark.Kana%2A>属性<xref:Microsoft.Office.Interop.Word.WdConstants.wdUndefined>，将引发异常。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到第一个段落，并显示一条消息，如果文本包含平假名字符。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#61](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#61)]
 [!code-vb[Trin_WordBookmark#61](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#61)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageDetected">
      <MemberSignature Language="C#" Value="public bool LanguageDetected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LanguageDetected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.LanguageDetected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 Microsoft Office Word 是否已检测到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的语言。</summary>
        <value>
          如果 Microsoft Office Word 已检测到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的语言，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 检查<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>的结果的任何以前的语言检测的属性。  
  
 <xref:Microsoft.Office.Tools.Word.Bookmark.LanguageDetected%2A>属性设置为`true`时<xref:Microsoft.Office.Interop.Word.Range.DetectLanguage%2A>调用方法。 若要重新计算的文本的语言，必须首先设置<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageDetected%2A>属性`false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageID">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.LanguageID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的语言。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于自定义词典，你必须首先设置<xref:Microsoft.Office.Interop.Word.Dictionary.LanguageSpecific%2A>属性`true`之前指定<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>属性。 特定于语言的自定义词典仅查看针对该语言的格式的文本。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制对该文档，然后将应用格式设置为基于书签<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>在书签内的文本。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#4)]
 [!code-vb[Trin_WordBookmark#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageIDFarEast">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageIDFarEast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageIDFarEast" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.LanguageIDFarEast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的东亚语言。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这是建议的方法要返回或设置在东亚语言版本的 Microsoft Office Word 中创建的文档中的东亚文本的语言。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到的第一个段落和集<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageIDFarEast%2A>为朝鲜语的属性。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#62](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#62)]
 [!code-vb[Trin_WordBookmark#62](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#62)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageIDOther">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageIDOther { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageIDOther" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.LanguageIDOther" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的语言。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这是建议的方法可以返回或设置拉丁文本的语言从右向左的语言版本的 Microsoft Office Word 中创建的文档中。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到的第一个段落和集<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageIDOther%2A>为法语的属性。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#63](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#63)]
 [!code-vb[Trin_WordBookmark#63](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#63)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ListFormat ListFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ListFormat ListFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ListFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ListFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.ListFormat" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的所有列表格式设置特征。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ListFormat" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的所有列表格式设置特征。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制转移到第一个段落，并将默认项目符号列表格式应用到的书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#64](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#64)]
 [!code-vb[Trin_WordBookmark#64](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#64)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListParagraphs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ListParagraphs ListParagraphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ListParagraphs ListParagraphs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ListParagraphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ListParagraphs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.ListParagraphs" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有编号段落。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ListParagraphs" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有编号段落。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制转移到第一个段落，并将默认项目符号列表格式应用到的书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#64](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#64)]
 [!code-vb[Trin_WordBookmark#64](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#64)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListStyle">
      <MemberSignature Language="C#" Value="public object ListStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ListStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ListStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的项目符号列表或编号列表的格式的样式。</summary>
        <value>一个对象，表示用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的项目符号列表或编号列表的格式的样式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.CoAuthLocks Locks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.CoAuthLocks Locks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Locks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.CoAuthLocks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的共同创作锁。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的共同创作锁。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以仅在共同创作启用的文档中使用此属性。 如果你尝试访问此属性的文档中未启用共同创作，你将收到<xref:System.Runtime.InteropServices.COMException>。  
  
> [!NOTE]
>  此方法将显示在 IntelliSense Word 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。 但是，无法在 Word 2007 项目中使用此属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">包含书签的文档中未启用共同创作。</exception>
        <exception cref="T:System.MissingMemberException">在 Word 2007 项目中使用此属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="LookupNameProperties">
      <MemberSignature Language="C#" Value="public void LookupNameProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LookupNameProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.LookupNameProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在全局通讯簿列表中查找一个姓名并显示“属性”对话框，其中包含 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的指定姓名的有关信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果此方法找到多个匹配项，则显示**检查名称**对话框。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyEnclosure">
      <MemberSignature Language="C#" Value="public void ModifyEnclosure (ref object Style, ref object Symbol, ref object EnclosedText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyEnclosure(object Style, object Symbol, object EnclosedText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ModifyEnclosure(System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Style" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Symbol" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="EnclosedText" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Style">包围符号的样式。 可以是任何 <see cref="T:Microsoft.Office.Interop.Word.WdEncloseStyle" /> 常数。</param>
        <param name="Symbol">包围 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的符号。 可以是任何 <see cref="T:Microsoft.Office.Interop.Word.WdEnclosureType" /> 常数。</param>
        <param name="EnclosedText">要包围的字符。 如果包含此参数，则 Microsoft Office Word 用包围的字符替换 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。 如果不指定要包围的文本，则 Microsoft Office Word 包围 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有文本。</param>
        <summary>在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中添加、修改或移除指定字符周围的包围符号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制转移到第一个段落，操作数包含在一个圆周中的第三个字符。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#65](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#65)]
 [!code-vb[Trin_WordBookmark#65](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#65)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public int Move (ref object unit, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Move(object unit, object count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Move(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="unit">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEnd">
      <MemberSignature Language="C#" Value="public int MoveEnd (ref object unit, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEnd(object unit, object count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveEnd(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="unit">移动结束字符位置所依据的单位。</param>
        <param name="count">要移动的单元的数量。 如果此数字为正数，则结束字符位置将在文档中向前移动。 如果此数字为负数，则结束字符位置将向后移动。 如果结束位置超过起始位置，则范围将折叠，并且两个字符位置将一起移动。 默认值为 1。</param>
        <summary>移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束字符位置。</summary>
        <returns>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件实际被移动的单位数，或者，如果移动不成功，则该控件返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到第一个段落的文本控件，并显示消息框中的书签的最后一个单词。 然后，代码调用<xref:Microsoft.Office.Tools.Word.Bookmark.MoveEnd%2A>方法并在新的消息框中显示书签的最后一个单词。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#66](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#66)]
 [!code-vb[Trin_WordBookmark#66](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#66)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndUntil">
      <MemberSignature Language="C#" Value="public int MoveEndUntil (ref object cset, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndUntil(object cset, object count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveEndUntil(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cset">一个或多个字符。 此参数区分大小写。</param>
        <param name="count">要将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移动的最大字符数。 可以是一个数字，也可以是 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdBackward" /> 常数。 如果 <c>Count</c> 是正数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将在文档中向前移动。 如果是负数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将向后移动。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" />。</param>
        <summary>移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束位置，直到在文档中找到任意指定字符。</summary>
        <returns>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束位置被移动的字符数。 如果 <paramref name="Count" /> 大于 0（零），则此方法返回被移动的字符数加 1。 如果 <paramref name="Count" /> 小于 0（零），则此方法返回被移动的字符数减 1。 如果未找到 <paramref name="Cset" /> 字符，则不会更改 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，并且该方法返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果是向前移动在文档中，<xref:Microsoft.Office.Tools.Word.Bookmark>控件已展开。  
  
 如果结束位置向后移动到原始开始位置之前的点，起始位置设置为新的结束位置。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件带到第一个段落的文本，然后添加另一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到第一个书签中的第三个单词。 然后，该代码移动第二个的书签的范围，直至找到字符 k。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#67](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#67)]
 [!code-vb[Trin_WordBookmark#67](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#67)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndWhile">
      <MemberSignature Language="C#" Value="public int MoveEndWhile (ref object cset, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndWhile(object cset, object count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveEndWhile(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cset">一个或多个字符。 此参数区分大小写。</param>
        <param name="count">要将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移动的最大字符数。 可以是一个数字，也可以是 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdBackward" /> 常数。 如果 <c>Count</c> 是正数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将在文档中向前移动。 如果是负数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将向后移动。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" />。</param>
        <summary>只要在文档中找到任意指定字符，就移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束字符位置。</summary>
        <returns>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束位置被移动的字符数。 如果未找到 <paramref name="Cset" /> 字符，则不会更改 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，并且该方法返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的任意字符`Cset`找到的结束位置<xref:Microsoft.Office.Tools.Word.Bookmark>移动控件。  
  
 如果结束位置向后移动到原始开始位置之前的点，起始位置设置为新的结束位置。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件带到第一个段落的文本，然后添加另一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到第一个书签中的第三个单词。 该代码时它可以查找字符 b、 o、 o、 k、 m，然后移动第二个的书签的范围，r 或 k。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#68](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#68)]
 [!code-vb[Trin_WordBookmark#68](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#68)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStart">
      <MemberSignature Language="C#" Value="public int MoveStart (ref object unit, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStart(object unit, object count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveStart(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="unit">
          <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />。 要移动指定范围或所选内容的起始位置所依据的单位。</param>
        <param name="count">要将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移动的最大单位数。 如果 <c>Count</c> 是正数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置将在文档中向前移动。 如果是负数，起始位置将向后移动。 如果将起始位置向前移动到超出结束位置的某个位置，将折叠 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，并将一起移动起始位置和结束位置。 默认值为 1。</param>
        <summary>移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置。</summary>
        <returns>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置实际被移动的单位数，或者，如果移动不成功，则该控件返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>与第一个段落，然后移动到文本中控制书签的起始位置。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#69](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#69)]
 [!code-vb[Trin_WordBookmark#69](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#69)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStartUntil">
      <MemberSignature Language="C#" Value="public int MoveStartUntil (ref object cset, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStartUntil(object cset, object count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveStartUntil(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cset">一个或多个字符。 此参数区分大小写。</param>
        <param name="count">要将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移动的最大字符数。 可以是一个数字，也可以是 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdBackward" /> 常数。 如果 <c>Count</c> 是正数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将在文档中向前移动。 如果是负数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将向后移动。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" />。</param>
        <summary>移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置，直到在文档中找到指定字符之一。</summary>
        <returns>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置被移动的字符数。 如果 <paramref name="Count" /> 大于 0（零），则此方法返回被移动的字符数加 1。 如果 <paramref name="Count" /> 小于 0（零），则此方法返回被移动的字符数减 1。 如果未找到 <paramref name="Cset" /> 字符，则不会更改 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，并且该方法返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果是整个文档中，向后移动<xref:Microsoft.Office.Tools.Word.Bookmark>控件已展开。  
  
 如果起始位置向前移动到的结束位置，超出的某个点<xref:Microsoft.Office.Tools.Word.Bookmark>控件处于折叠状态并开始和结束位置一起移动。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>与第一个段落，然后移动到文本控制的书签的范围，直到它找到一个空格。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#70](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#70)]
 [!code-vb[Trin_WordBookmark#70](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#70)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStartWhile">
      <MemberSignature Language="C#" Value="public int MoveStartWhile (ref object cset, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStartWhile(object cset, object count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveStartWhile(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cset">一个或多个字符。 此参数区分大小写。</param>
        <param name="count">要将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移动的最大字符数。 可以是一个数字，也可以是 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdBackward" /> 常数。 如果 <c>Count</c> 是正数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将在文档中向前移动。 如果是负数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将向后移动。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" />。</param>
        <summary>只要在文档中找到任意指定字符，就移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置。</summary>
        <returns>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置被移动的字符数。 如果未找到 <paramref name="Cset" /> 字符，则不会更改 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，并且该方法返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的任意字符`Cset`找到的开始位置<xref:Microsoft.Office.Tools.Word.Bookmark>移动控件。  
  
 如果的开始位置向前移动到原来的结束位置超出某个位置，则会将的结束位置设置为新的起始位置。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>与第一个段落，然后移动到的文本控件的书签范围，而它可以查找字符 T、 h、 i 或 s。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#71](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#71)]
 [!code-vb[Trin_WordBookmark#71](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#71)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveUntil">
      <MemberSignature Language="C#" Value="public int MoveUntil (ref object cset, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveUntil(object cset, object count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveUntil(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cset">一个或多个字符。 如果在 <c>Count</c> 值过期之前找到 <c>Cset</c> 中的任何字符，则 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将作为插入点定位到紧靠该字符之前。 此参数区分大小写。</param>
        <param name="count">要将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移动的最大字符数。 可以是一个数字，也可以是 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdBackward" /> 常数。 如果 <c>Count</c> 是正数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将在文档中从结束位置开始向前移动。 如果是负数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将从起始位置开始向后移动。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" />。</param>
        <summary>移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，直到在文档中找到指定字符之一。</summary>
        <returns>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件被移动的字符数。 如果 <paramref name="Count" /> 大于 0（零），则此方法返回被移动的字符数加 1。 如果 <paramref name="Count" /> 小于 0（零），则此方法返回被移动的字符数减 1。 如果未找到 <paramref name="Cset" /> 字符，则不会更改 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，并且该方法返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark>折叠为零长度书签。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件带到第一个段落的文本，然后添加另一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到第一个书签中的第三个单词。 然后，该代码将移动第二个的书签的范围时它可以找到的空白区域。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#72](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#72)]
 [!code-vb[Trin_WordBookmark#72](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#72)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveWhile">
      <MemberSignature Language="C#" Value="public int MoveWhile (ref object cset, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveWhile(object cset, object count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveWhile(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cset">一个或多个字符。 此参数区分大小写。</param>
        <param name="count">要将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移动的最大字符数。 可以是一个数字，也可以是 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdBackward" /> 常数。 如果 <c>Count</c> 是正数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将在文档中从结束位置开始向前移动。 如果是负数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将从起始位置开始向后移动。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" />。</param>
        <summary>只要在文档中找到任意指定字符，就移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <returns>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件被移动的字符数。 如果未找到 <paramref name="Cset" /> 字符，则不会更改 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，并且该方法返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的任意字符`Cset`找到，则<xref:Microsoft.Office.Tools.Word.Bookmark>移动控件。 <xref:Microsoft.Office.Tools.Word.Bookmark>折叠为零长度书签。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件带到第一个段落的文本，然后添加另一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到第一个书签中的第三个单词。 然后，代码会将折叠，并移动第二个的书签，而它可以查找字符 b、 o、 o 或 k。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#73](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#73)]
 [!code-vb[Trin_WordBookmark#73](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#73)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的名称。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为文本的第一个段落，然后显示一个消息框中的书签的名称。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#74](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#74)]
 [!code-vb[Trin_WordBookmark#74](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#74)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Next (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range Next(object Unit, object Count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Next(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">计数所依据的单位的类型。 可以是任何 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> 常数。</param>
        <param name="Count">要向前移动的单位数。 默认值为一。</param>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象表示相对于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的指定单位。</summary>
        <returns>一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示相对于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的指定单位。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换的第一个段落之后该书签的地方，然后显示, 插入其他文本的文本的下一个单词后一个消息框中的书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#75](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#75)]
 [!code-vb[Trin_WordBookmark#75](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextStoryRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range NextStoryRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range NextStoryRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.NextStoryRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象引用下一篇文章，如下表所示。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，引用下一篇文章，如下表所示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
|情景类型|所返回项<xref:Microsoft.Office.Tools.Word.Bookmark.NextStoryRange%2A>方法|  
|----------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:Microsoft.Office.Interop.Word.WdStoryType.wdMainTextStory>、<xref:Microsoft.Office.Interop.Word.WdStoryType.wdFootnotesStory>、<xref:Microsoft.Office.Interop.Word.WdStoryType.wdEndnotesStory> 和 <xref:Microsoft.Office.Interop.Word.WdStoryType.wdCommentsStory>|始终返回 `null`。|  
|<xref:Microsoft.Office.Interop.Word.WdStoryType.wdTextFrameStory>|下一组链接的文本框中的文章。|  
|<xref:Microsoft.Office.Interop.Word.WdStoryType.wdEvenPagesHeaderStory>, <xref:Microsoft.Office.Interop.Word.WdStoryType.wdPrimaryHeaderStory>, <xref:Microsoft.Office.Interop.Word.WdStoryType.wdEvenPagesFooterStory>, <xref:Microsoft.Office.Interop.Word.WdStoryType.wdPrimaryFooterStory>, <xref:Microsoft.Office.Interop.Word.WdStoryType.wdFirstPageHeaderStory>, <xref:Microsoft.Office.Interop.Word.WdStoryType.wdFirstPageFooterStory>|下一节中的相同类型的文章。|  
  
   
  
## Examples  
 下面的代码示例将添加**下一页**部分中断添加到文档，然后添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有部分 1 的偶数页标题的文本控件。 该代码将使用<xref:Microsoft.Office.Tools.Word.Bookmark.NextStoryRange%2A>将文本添加到第 2 节的标头。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#76](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#76)]
 [!code-vb[Trin_WordBookmark#76](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#76)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoProofing">
      <MemberSignature Language="C#" Value="public int NoProofing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NoProofing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.NoProofing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示拼写和语法检查器是否忽略 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本。</summary>
        <value>如果拼写和语法检查器不忽略 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本，则为 0；如果拼写和语法检查器忽略 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本，则为 1；如果拼写和语法检查器仅忽略 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdUndefined" /> 控件中的某些文本，则为 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有拼写错误文本的第一个段落和集到控件<xref:Microsoft.Office.Tools.Word.Bookmark.NoProofing%2A>到书签属性`true`。 当检查文档存在拼写错误时，将忽略该书签中拼写错误的文本。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#77](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#77)]
 [!code-vb[Trin_WordBookmark#77](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#77)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OMaths">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.OMaths OMaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.OMaths OMaths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.OMaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.OMaths</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中包含的公式。</summary>
        <value>一个包含 <see cref="T:Microsoft.Office.Interop.Word.OMaths" /> 中的公式的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdTextOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdTextOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdTextOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在启用“文本方向”功能时，获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本方向。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.WdTextOrientation" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 上面列出的常量的一些可能不可用，这取决于的语言支持 （美国美式英语）。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有的第一个段落的文本控件，并将设置到的书签文本的方向<xref:Microsoft.Office.Interop.Word.WdTextOrientation.wdTextOrientationVerticalFarEast>。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#78](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#78)]
 [!code-vb[Trin_WordBookmark#78](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#78)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.PageSetup PageSetup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.PageSetup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与该 <see cref="T:Microsoft.Office.Interop.Word.PageSetup" /> 控件范围关联的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <value>与该 <see cref="T:Microsoft.Office.Interop.Word.PageSetup" /> 控件范围关联的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到第一个段落，然后设置三英寸的上边距书签出现的位置的部分中的文本控件。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#79](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#79)]
 [!code-vb[Trin_WordBookmark#79](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#79)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ParagraphFormat ParagraphFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ParagraphFormat ParagraphFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ParagraphFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ParagraphFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:Microsoft.Office.Interop.Word.ParagraphFormat" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的段落设置。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ParagraphFormat" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的段落设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到第一个段落的文本控件和设置书签，使其具有一英寸的段落格式<xref:Microsoft.Office.Interop.Word._ParagraphFormat.SpaceBefore%2A>。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#80](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#80)]
 [!code-vb[Trin_WordBookmark#80](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#80)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraphs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Paragraphs Paragraphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Paragraphs Paragraphs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Paragraphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Paragraphs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Paragraphs" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有段落。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Paragraphs" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有段落。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到第一个段落的文本控件，并为双倍行距的文本更改段落。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#81](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#81)]
 [!code-vb[Trin_WordBookmark#81](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#81)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphStyle">
      <MemberSignature Language="C#" Value="public object ParagraphStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ParagraphStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ParagraphStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的段落格式的样式。</summary>
        <value>一个对象，表示用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中段落格式的样式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的父对象。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的父对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到第一个段落的文本控件，并在消息框中显示的父级的书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#82](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#82)]
 [!code-vb[Trin_WordBookmark#82](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#82)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ContentControl ParentContentControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ContentControl ParentContentControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ParentContentControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ContentControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 的父内容控件。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ContentControl" />，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 的父内容控件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Paste" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将剪贴板的内容插入 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAndFormat">
      <MemberSignature Language="C#" Value="public void PasteAndFormat (Microsoft.Office.Interop.Word.WdRecoveryType Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAndFormat(valuetype Microsoft.Office.Interop.Word.WdRecoveryType Type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.PasteAndFormat(Microsoft.Office.Interop.Word.WdRecoveryType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Word.WdRecoveryType" />
      </Parameters>
      <Docs>
        <param name="Type">
          <see cref="T:Microsoft.Office.Interop.Word.WdRecoveryType" />。 在粘贴选择的表单元格时要使用的格式设置类型。</param>
        <summary>将选择的表单元格粘贴到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中，并按指定要求设置这些表单元格的格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
   
  
## Examples  
 下面的代码示例粘贴到 Microsoft Excel 图表<xref:Microsoft.Office.Tools.Word.Bookmark>控件。 此示例需要剪贴板包含 Excel 图表。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#83](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#83)]
 [!code-vb[Trin_WordBookmark#83](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#83)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAppendTable">
      <MemberSignature Language="C#" Value="public void PasteAppendTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAppendTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.PasteAppendTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>通过将粘贴的行插入选择的行之间来将粘贴的单元格合并到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的现有表中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 没有单元格将被覆盖。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAsNestedTable">
      <MemberSignature Language="C#" Value="public void PasteAsNestedTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAsNestedTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.PasteAsNestedTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将一个或一组单元格作为嵌套表粘贴到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用<xref:Microsoft.Office.Tools.Word.Bookmark.PasteAsNestedTable%2A>剪贴板包含的单元格或组的单元格时才与<xref:Microsoft.Office.Tools.Word.Bookmark>控件包含的单元格或组的当前文档中的单元格。  
  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件到文档中的表，然后将该表粘贴到第三个单元格为嵌套表。 然后，该代码在书签中选择下一个表。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#112](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#112)]
 [!code-vb[Trin_WordBookmark#112](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#112)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteExcelTable">
      <MemberSignature Language="C#" Value="public void PasteExcelTable (bool LinkedToExcel, bool WordFormatting, bool RTF);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteExcelTable(bool LinkedToExcel, bool WordFormatting, bool RTF) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.PasteExcelTable(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LinkedToExcel" Type="System.Boolean" />
        <Parameter Name="WordFormatting" Type="System.Boolean" />
        <Parameter Name="RTF" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="LinkedToExcel">
          为 <see langword="true" />，则将粘贴的表链接到原始 Excel 文件，以便在 Microsoft Office Word 中反映对 Excel 文件所做的更改。</param>
        <param name="WordFormatting">
          如果为 <see langword="true" />，则使用 Word 文档中的格式设置来设置表的格式。 如果为 <see langword="false" />，则根据原始 Excel 文件设置表的格式。</param>
        <param name="RTF">
          如果为 <see langword="true" />，则以 RTF 格式粘贴 Excel 表。 如果为 <see langword="false" />，则以 HTML 格式粘贴 Excel 表。</param>
        <summary>将一个 Microsoft Office Excel 表粘贴到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中，并对其进行格式设置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例粘贴到的 Excel 表<xref:Microsoft.Office.Tools.Word.Bookmark>控件。 参数指定粘贴的表链接到 Excel 文件，将保留原始 Excel 格式、 上，并粘贴为 rtf 格式。 此示例需要剪贴板包含的 Excel 表。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#84](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#84)]
 [!code-vb[Trin_WordBookmark#84](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#84)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public void PasteSpecial (ref object IconIndex, ref object Link, ref object Placement, ref object DisplayAsIcon, ref object DataType, ref object IconFileName, ref object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteSpecial(object IconIndex, object Link, object Placement, object DisplayAsIcon, object DataType, object IconFileName, object IconLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.PasteSpecial(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="IconIndex" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Link" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Placement" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DisplayAsIcon" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DataType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IconFileName" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IconLabel" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="IconIndex">如果 <c>DisplayAsIcon</c> 为 <see langword="true" />，则此参数为一个数字，该数字对应于你希望在程序文件中使用的由 <c>IconFilename</c> 指定的图标。 图标显示在“更改图标”对话框中：0（零）对应于第一个图标，1 对应于第二个图标，依此类推。 如果省略此参数，则使用第一个（默认）图标。</param>
        <param name="Link">
          为 <see langword="true" />，则创建一个到剪贴板内容的源文件的链接。 默认值为 <see langword="false" />。</param>
        <param name="Placement">可以为以下 <see cref="T:Microsoft.Office.Interop.Word.WdOLEPlacement" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdOLEPlacement.wdFloatOverText" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdOLEPlacement.wdInLine" />。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdOLEPlacement.wdInLine" />。</param>
        <param name="DisplayAsIcon">
          为 <see langword="true" />，则以图标形式显示链接。 默认值为 <see langword="false" />。</param>
        <param name="DataType">在将剪贴板内容插入文档时，剪贴板内容的格式。 <see cref="T:Microsoft.Office.Interop.Word.WdPasteDataType" />。</param>
        <param name="IconFileName">如果 <c>DisplayAsIcon</c> 为 <see langword="true" />，则此参数为在其中存储要显示的图标的文件的路径和文件名。</param>
        <param name="IconLabel">如果 <c>DisplayAsIcon</c> 为 <see langword="true" />，则此参数为显示在图标下面的文本。</param>
        <summary>将剪贴板的内容插入 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 与不同与<xref:Microsoft.Office.Tools.Word.Bookmark.Paste%2A>方法，与<xref:Microsoft.Office.Tools.Word.Bookmark.PasteSpecial%2A>可以控制所粘贴信息的格式并 （可选） 建立到源代码文件 （例如，为 Microsoft Office Excel 工作表） 的链接。  
  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将中的剪贴板内容<xref:Microsoft.Office.Tools.Word.Bookmark>为无格式文本控件。 此示例假定剪贴板包含一些文本。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#85](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#85)]
 [!code-vb[Trin_WordBookmark#85](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#85)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhoneticGuide">
      <MemberSignature Language="C#" Value="public void PhoneticGuide (string Text, Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType Alignment, int Raise = 0, int FontSize = 0, string FontName = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PhoneticGuide(string Text, valuetype Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType Alignment, int32 Raise, int32 FontSize, string FontName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.PhoneticGuide(System.String,Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType,System.Int32,System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Alignment" Type="Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType" />
        <Parameter Name="Raise" Type="System.Int32" />
        <Parameter Name="FontSize" Type="System.Int32" />
        <Parameter Name="FontName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">要添加的拼音文本。</param>
        <param name="Alignment">
          <see cref="T:Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType" />。 添加的拼音文本的对齐方式。</param>
        <param name="Raise">从指定 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的顶部到拼音文本的顶部的距离（以磅为单位）。 如果未指定任何值，则 Microsoft Office Word 将拼音文本自动设置为位于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件之上的最佳距离上。</param>
        <param name="FontSize">要用于拼音文本的字体大小。 如果未指定任何值，则 Word 使用比 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本小 50% 的字体大小。</param>
        <param name="FontName">要用于拼音文本的字体的名称。 如果未指定任何值，则 Word 使用与 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本相同的字体。</param>
        <summary>将拼音指南添加到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加书签文本"tres 别致。"的拼音指南  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#86](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#86)]
 [!code-vb[Trin_WordBookmark#86](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#86)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Previous (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range Previous(object Unit, object Count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Previous(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">
          <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />。</param>
        <param name="Count">要向后移动的单位数。 默认值为 1。</param>
        <summary>获取一个相对于 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 控件的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</summary>
        <returns>一个相对于 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 控件的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将文本添加到第一个段落，然后添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到第二个字。 然后，该代码选择书签之前的单词。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#87](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#87)]
 [!code-vb[Trin_WordBookmark#87](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#87)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousBookmarkID">
      <MemberSignature Language="C#" Value="public int PreviousBookmarkID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreviousBookmarkID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.PreviousBookmarkID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值表示从与 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件相同的位置或之前的位置开始的最后一个书签的编号。</summary>
        <value>从与 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件相同的位置或之前的位置开始的最后一个书签的编号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark.PreviousBookmarkID%2A>属性将返回 0 （零），如果没有相应的书签。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有给该文档并显示一条消息中的书签的名称框中使用的文本控件<xref:Microsoft.Office.Tools.Word.Bookmark.PreviousBookmarkID%2A>属性。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#88](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#88)]
 [!code-vb[Trin_WordBookmark#88](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#88)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Range { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range Range" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Range" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象表示包含在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文档部分。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示包含在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文档部分。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为文本的第一个段落，然后设置中为加粗的书签的文本。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#89](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#89)]
 [!code-vb[Trin_WordBookmark#89](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#89)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadabilityStatistics">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ReadabilityStatistics ReadabilityStatistics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ReadabilityStatistics ReadabilityStatistics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ReadabilityStatistics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ReadabilityStatistics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.ReadabilityStatistics" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的可读性统计信息。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ReadabilityStatistics" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的可读性统计信息。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有为第一个段落，然后使用的文本控件<xref:Microsoft.Office.Tools.Word.Bookmark.ReadabilityStatistics%2A>显示单词数的书签的属性在消息框中包含的书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#90](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#90)]
 [!code-vb[Trin_WordBookmark#90](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#90)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Relocate">
      <MemberSignature Language="C#" Value="public void Relocate (int Direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Relocate(int32 Direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Relocate(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Direction">
          <see cref="T:Microsoft.Office.Interop.Word.WdRelocate" />。 移动的方向。</param>
        <summary>在大纲视图中，将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的段落移动到下一个可见段落之后或上一个可见段落之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅当在大纲视图中折叠的正文文本或如果它是的一部分，则正文包含标题将移动<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
   
  
## Examples  
 下面的代码示例将文本添加到第一个段落，然后<xref:Microsoft.Office.Tools.Word.Bookmark>具有到第二个段落的文本控件。 代码到第一个段落然后将第二个的书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#91](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#91)]
 [!code-vb[Trin_WordBookmark#91](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#91)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Revisions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Revisions Revisions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Revisions Revisions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Revisions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Revisions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Revisions" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的修订。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Revisions" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的修订。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件带到第一个段落的文本，打开修订跟踪，然后修订该文本。 然后在消息框中显示修订的号。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#92](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#92)]
 [!code-vb[Trin_WordBookmark#92](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#92)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Rows Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Rows Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Rows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Rows" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有表行。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Rows" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有表行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例向文档添加一个三列三行的表，添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件到表中，然后将更改在书签内第一个行的高度。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#93](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#93)]
 [!code-vb[Trin_WordBookmark#93](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#93)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Scripts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Core.Scripts" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中 HTML 脚本的集合。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Core.Scripts" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中 HTML 脚本的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例的第一个段落，添加一个脚本，然后添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到第一个段落。 然后，代码将显示的该书签在消息框中所包含的脚本的数量。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#94](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#94)]
 [!code-vb[Trin_WordBookmark#94](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#94)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sections">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Sections Sections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Sections Sections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Sections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Sections</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Sections" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的节。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Sections" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的节。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到文档，然后插入的文本控件**下一页**第四个单词在书签中之前的部分中断。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#50](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#50)]
 [!code-vb[Trin_WordBookmark#50](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#50)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Select" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>选择 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法后，使用<xref:Microsoft.Office.Interop.Word._Application.Selection%2A>属性才能正常使用所选<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>到文档的文本与控件，然后创建<xref:Microsoft.Office.Tools.Word.Bookmark.BeforeDoubleClick>事件处理程序。 选择书签中的文本时<xref:Microsoft.Office.Tools.Word.Bookmark>双击控件时。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#2)]
 [!code-vb[Trin_WordBookmark#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Tools.Word.SelectionEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Word.SelectionEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Word.Bookmark.Selected" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.SelectionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当选择 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所选内容更改为时会引发此事件<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件带到文档的文本，然后创建<xref:Microsoft.Office.Tools.Word.Bookmark.Selected>事件处理程序。 当光标移入该书签时，显示一个消息框。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#95](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#95)]
 [!code-vb[Trin_WordBookmark#95](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#95)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChange">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Tools.Word.SelectionEventHandler SelectionChange;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Word.SelectionEventHandler SelectionChange" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Word.Bookmark.SelectionChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.SelectionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件内部的所选内容更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所选内容更改到或在内时引发此事件<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件带到文档的文本，然后创建<xref:Microsoft.Office.Tools.Word.Bookmark.SelectionChange>事件处理程序。 在书签中移动光标时，显示一个消息框。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#96](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#96)]
 [!code-vb[Trin_WordBookmark#96](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#96)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sentences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Sentences Sentences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Sentences Sentences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Sentences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Sentences</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Sentences" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有句子。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Sentences" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有句子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件替换为文本与文档，然后选择在书签中的第一个句子。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#97](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#97)]
 [!code-vb[Trin_WordBookmark#97](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#97)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetListLevel">
      <MemberSignature Language="C#" Value="public void SetListLevel (short Level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetListLevel(int16 Level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.SetListLevel(System.Int16)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Level" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Level">一个指示新列表级别的数字。</param>
        <summary>设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的编号列表中的一个或多个项的列表级别。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public void SetRange (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange(int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.SetRange(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始字符位置。</param>
        <param name="end">
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束字符位置。</param>
        <summary>设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始字符位置和结束字符位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字符位置值从该情景，开头起始值为 0 （零）。 计算所有字符，包括非打印字符。 隐藏的字符也计算在内，即使它们不会显示。  
  
 <xref:Microsoft.Office.Tools.Word.Bookmark.SetRange%2A>方法重新定义的起始和结束位置的现有<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制与文档，然后设置文本的文档中的第一个字符的书签的范围。  
  
 [!code-csharp[Trin_WordBookmark#98](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#98)]
 [!code-vb[Trin_WordBookmark#98](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#98)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shading">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shading Shading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Shading Shading" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Shading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shading</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Shading" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的底纹格式设置。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Shading" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的底纹格式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到文档，然后设置的文本控件<xref:Microsoft.Office.Interop.Word.Shading.BackgroundPatternColor%2A>为浅绿色的书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#99](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#99)]
 [!code-vb[Trin_WordBookmark#99](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ShapeRange ShapeRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ShapeRange ShapeRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ShapeRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ShapeRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.ShapeRange" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 控件中的所有 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ShapeRange" /> 集合，表示 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 控件中的所有 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 形状范围只能包含绘图、 形状、 图片，OLE 对象、 ActiveX 控件、 文本对象和标注。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>与文本的文档，然后使用垂直和水平位置的书签在创建时控制文本框。 然后，它显示的名称<xref:Microsoft.Office.Tools.Word.Bookmark.ShapeRange%2A>内一个消息框中的书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#100](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#100)]
 [!code-vb[Trin_WordBookmark#100](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAll">
      <MemberSignature Language="C#" Value="public bool ShowAll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAll" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ShowAll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否显示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有非打印字符（如隐藏文本、制表符标记、空格标记和段落标记）。</summary>
        <value>
          如果显示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的非打印字符，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.SmartTags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (ref object ExcludeHeader, ref object FieldNumber, ref object SortFieldType, ref object SortOrder, ref object FieldNumber2, ref object SortFieldType2, ref object SortOrder2, ref object FieldNumber3, ref object SortFieldType3, ref object SortOrder3, ref object SortColumn, ref object Separator, ref object CaseSensitive, ref object BidiSort, ref object IgnoreThe, ref object IgnoreKashida, ref object IgnoreDiacritics, ref object IgnoreHe, ref object LanguageID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(object ExcludeHeader, object FieldNumber, object SortFieldType, object SortOrder, object FieldNumber2, object SortFieldType2, object SortOrder2, object FieldNumber3, object SortFieldType3, object SortOrder3, object SortColumn, object Separator, object CaseSensitive, object BidiSort, object IgnoreThe, object IgnoreKashida, object IgnoreDiacritics, object IgnoreHe, object LanguageID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Sort(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ExcludeHeader" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Separator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CaseSensitive" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="BidiSort" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreThe" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreKashida" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreDiacritics" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreHe" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="LanguageID" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ExcludeHeader">
          若要从排序操作中排除第一行或段落标头，请使用 <see langword="true" />。 默认值为 <see langword="false" />。</param>
        <param name="FieldNumber">要作为排序依据的字段。 Microsoft Office Word 的排序方式为 <c>FieldNumber</c>，然后为 <c>FieldNumber2</c>，最后为 <c>FieldNumber3</c>。</param>
        <param name="SortFieldType">
          <c>FieldNumber</c>、<c>FieldNumber2</c> 和 <c>FieldNumber3</c> 各自的排序类型。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> 常量之一。</param>
        <param name="SortOrder">对 <c>FieldNumber</c>、<c>FieldNumber2</c> 和 <c>FieldNumber3</c> 进行排序时使用的排序顺序。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> 常量之一。</param>
        <param name="FieldNumber2">要作为排序依据的字段。 Microsoft Office Word 的排序方式为 <c>FieldNumber</c>，然后为 <c>FieldNumber2</c>，最后为 <c>FieldNumber3</c>。</param>
        <param name="SortFieldType2">
          <c>FieldNumber</c>、<c>FieldNumber2</c> 和 <c>FieldNumber3</c> 各自的排序类型。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> 常量之一</param>
        <param name="SortOrder2">对 <c>FieldNumber</c>、<c>FieldNumber2</c> 和 <c>FieldNumber3</c> 进行排序时使用的排序顺序。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> 常量之一。</param>
        <param name="FieldNumber3">要作为排序依据的字段。 Microsoft Office Word 的排序方式为 <c>FieldNumber</c>，然后为 <c>FieldNumber2</c>，最后为 <c>FieldNumber3</c>。</param>
        <param name="SortFieldType3">
          <c>FieldNumber</c>、<c>FieldNumber2</c> 和 <c>FieldNumber3</c> 各自的排序类型。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> 常量之一</param>
        <param name="SortOrder3">对 <c>FieldNumber</c>、<c>FieldNumber2</c> 和 <c>FieldNumber3</c> 进行排序时使用的排序顺序。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> 常量之一。</param>
        <param name="SortColumn">
          使用 <see langword="true" /> 对仅由 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件指定的列进行排序。</param>
        <param name="Separator">
          <see cref="T:System.Object" />。 字段分隔符的类型。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortSeparator" /> 常量之一。</param>
        <param name="CaseSensitive">
          排序时若要区分大小写，请使用 <see langword="true" />。 默认值为 <see langword="false" />。</param>
        <param name="BidiSort">
          若要根据从右到左的语言规则进行排序，请使用 <see langword="true" />。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <param name="IgnoreThe">
          为 <see langword="true" />，则在对从右向左的语言文本进行排序时忽略阿拉伯字符 <c>alef</c><c>lam</c>。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <param name="IgnoreKashida">
          如果对从右到左的语言的文本进行排序时，需要忽略 kashidas，请使用 <see langword="true" />。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <param name="IgnoreDiacritics">
          如果对从右到左的语言的文本进行排序时，需要忽略双向控制字符，请使用 <see langword="true" />。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <param name="IgnoreHe">
          为 <see langword="true" />，则在对从右向左的语言文本进行排序时忽略希伯来字符 <c>he</c>。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <param name="LanguageID">指定排序语言。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> 常量之一。</param>
        <summary>对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的段落进行排序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制水果，然后排序的列表中升序排序的列表。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#102](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#102)]
 [!code-vb[Trin_WordBookmark#102](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortAscending">
      <MemberSignature Language="C#" Value="public void SortAscending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortAscending() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.SortAscending" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>按照字母数字升序顺序对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的段落或表行进行排序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 第一个段落或表格行被视为标头记录和未包含在排序。 使用<xref:Microsoft.Office.Interop.Word.Range.Sort%2A>方法将标头记录包含在排序中。  
  
 此方法提供了针对邮件合并数据源包含的数据列进行排序一种简化的的形式。 对于大多数排序任务，请使用<xref:Microsoft.Office.Interop.Word.Range.Sort%2A>方法。  
  
 此方法会显示**标头记录分隔符**对话框中，用户必须从中选择字段分隔符。  
  
   
  
## Examples  
 下面的代码示例将添加一个到水果列表<xref:Microsoft.Office.Tools.Word.Bookmark>控制然后列表进行排序以升序。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#117](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#117)]
 [!code-vb[Trin_WordBookmark#117](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#117)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDescending">
      <MemberSignature Language="C#" Value="public void SortDescending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortDescending() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.SortDescending" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>按照字母数字降序顺序对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的段落或表行进行排序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 第一个段落或表格行被视为标头记录和未包含在排序。 使用<xref:Microsoft.Office.Interop.Word.Range.Sort%2A>方法将标头记录包含在排序中。  
  
 此方法提供了针对邮件合并数据源包含的数据列进行排序一种简化的的形式。 对于大多数排序任务，请使用<xref:Microsoft.Office.Interop.Word.Range.Sort%2A>方法。  
  
 此方法会显示**标头记录分隔符**对话框中，用户必须从中选择字段分隔符。  
  
   
  
## Examples  
 下面的代码示例将添加一个到水果列表<xref:Microsoft.Office.Tools.Word.Bookmark>控制然后列表进行排序以降序顺序。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#118](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#118)]
 [!code-vb[Trin_WordBookmark#118](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#118)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortOld">
      <MemberSignature Language="C#" Value="public void SortOld (ref object ExcludeHeader, ref object FieldNumber, ref object SortFieldType, ref object SortOrder, ref object FieldNumber2, ref object SortFieldType2, ref object SortOrder2, ref object FieldNumber3, ref object SortFieldType3, ref object SortOrder3, ref object SortColumn, ref object Separator, ref object CaseSensitive, ref object LanguageID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortOld(object ExcludeHeader, object FieldNumber, object SortFieldType, object SortOrder, object FieldNumber2, object SortFieldType2, object SortOrder2, object FieldNumber3, object SortFieldType3, object SortOrder3, object SortColumn, object Separator, object CaseSensitive, object LanguageID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.SortOld(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ExcludeHeader" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Separator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CaseSensitive" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="LanguageID" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ExcludeHeader">To be added.</param>
        <param name="FieldNumber">To be added.</param>
        <param name="SortFieldType">To be added.</param>
        <param name="SortOrder">To be added.</param>
        <param name="FieldNumber2">To be added.</param>
        <param name="SortFieldType2">To be added.</param>
        <param name="SortOrder2">To be added.</param>
        <param name="FieldNumber3">To be added.</param>
        <param name="SortFieldType3">To be added.</param>
        <param name="SortOrder3">To be added.</param>
        <param name="SortColumn">To be added.</param>
        <param name="Separator">To be added.</param>
        <param name="CaseSensitive">To be added.</param>
        <param name="LanguageID">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingChecked">
      <MemberSignature Language="C#" Value="public bool SpellingChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpellingChecked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.SpellingChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否已对整个 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件进行了拼写检查。</summary>
        <value>
          如果已对整个 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件进行了拼写检查，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以重新检查在拼写<xref:Microsoft.Office.Tools.Word.Bookmark>控制、 设置<xref:Microsoft.Office.Tools.Word.Bookmark.SpellingChecked%2A>属性`false`。  
  
 若要检查是否<xref:Microsoft.Office.Tools.Word.Bookmark>控件包含拼写错误，则使用<xref:Microsoft.Office.Tools.Word.Bookmark.SpellingErrors%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ProofreadingErrors SpellingErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ProofreadingErrors SpellingErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.SpellingErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ProofreadingErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.ProofreadingErrors" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中标识为拼写错误的单词。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ProofreadingErrors" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中标识为拼写错误的单词。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>带到第一个段落，然后运行文本控制拼写检查器，如果在书签中存在拼写错误。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#103](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#103)]
 [!code-vb[Trin_WordBookmark#103](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public int Start { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Start" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Start" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始字符位置。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始字符位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark>控件具有的起始位置和结束位置。 结束的位置是远的开始点<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
 使用此属性来更改的大小<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
 如果此属性设置为一个值大于该值的<xref:Microsoft.Office.Tools.Word.Bookmark.End%2A>属性，<xref:Microsoft.Office.Tools.Word.Bookmark.End%2A>属性设置为相同的值的<xref:Microsoft.Office.Tools.Word.Bookmark.Start%2A>属性。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件带到第一个段落的文本，然后添加第二个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到第一个书签中的第三个单词。 该代码然后移动第一个书签的范围，直到它找到空格，并将该书签的大小重新定义通过更改<xref:Microsoft.Office.Tools.Word.Bookmark.Start%2A>属性。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#70](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#70)]
 [!code-vb[Trin_WordBookmark#70](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#70)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartOf">
      <MemberSignature Language="C#" Value="public int StartOf (ref object unit, ref object extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 StartOf(object unit, object extend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.StartOf(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="extend" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="unit">
          <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />。 要移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置所依据的单位。</param>
        <param name="extend">
          <see cref="T:Microsoft.Office.Interop.Word.WdMovementType" />。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置移动或扩展到最近的指定文本单元的开头。</summary>
        <returns>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件被移动或扩展的字符数。 如果在文档中向后移动，则该方法返回一个负数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果开始<xref:Microsoft.Office.Tools.Word.Bookmark>控件是否已指定的单位开头，则此方法不移动或扩展<xref:Microsoft.Office.Tools.Word.Bookmark>控件。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将文本添加到第一个段落，然后添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到第二个段落的文本控件。 然后，该代码将移动一个字中的书签返回首页。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#104](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#104)]
 [!code-vb[Trin_WordBookmark#104](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoryLength">
      <MemberSignature Language="C#" Value="public int StoryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StoryLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.StoryLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文章中的字符数。</summary>
        <value>包含 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文章中的字符数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>文档，然后显示的文本与控制一个消息框中的书签的文本，如果情景长度大于 0。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#105](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#105)]
 [!code-vb[Trin_WordBookmark#105](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoryType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdStoryType StoryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdStoryType StoryType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.StoryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdStoryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文章类型。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.WdStoryType" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有给该文档并显示一个消息框中的书签的文章类型的文本控件。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#106](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#106)]
 [!code-vb[Trin_WordBookmark#106](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public object Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的样式。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要设置此属性，指定的样式，一个整数的本地名称<xref:Microsoft.Office.Interop.Word.WdBuiltinStyle>常量或表示样式的对象。 有关有效的常量的列表，请参阅 Microsoft Visual Basic 对象浏览器。  
  
 当您返回的样式<xref:Microsoft.Office.Tools.Word.Bookmark>返回包括多个样式，只有第一个字符或段落样式的控件。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件以在文档中的文本将样式更改为`Heading 1`，然后删除该书签。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#107](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#107)]
 [!code-vb[Trin_WordBookmark#107](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeTo">
      <MemberSignature Language="C#" Value="public void SubscribeTo (string Edition, ref object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubscribeTo(string Edition, object Format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.SubscribeTo(System.String,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.String" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Edition">To be added.</param>
        <param name="Format">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynonymInfo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.SynonymInfo SynonymInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.SynonymInfo SynonymInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.SynonymInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.SynonymInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.SynonymInfo" />，它包含来自词库的有关 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中文本的同义词、反义词或相关单词和表达的信息。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.SynonymInfo" />，包含来自词库的有关 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中文本的同义词、反义词或相关单词和表达的信息。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>文档，然后显示的文本与控制一个消息框，如果同义词找到在书签中的第三个单词。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#108](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#108)]
 [!code-vb[Trin_WordBookmark#108](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Tables Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Tables Tables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Tables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Tables" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有表。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Tables" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例到文档中，添加一个三列三行的表，然后添加<xref:Microsoft.Office.Tools.Word.Bookmark>到表的控件。 然后，该代码将更改该书签中的表单元格的宽度。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#9)]
 [!code-vb[Trin_WordBookmark#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyle">
      <MemberSignature Language="C#" Value="public object TableStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.TableStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的表格式的样式。</summary>
        <value>一个对象，表示用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的表格式的样式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TCSCConverter">
      <MemberSignature Language="C#" Value="public void TCSCConverter (Microsoft.Office.Interop.Word.WdTCSCConverterDirection WdTCSCConverterDirection = Microsoft.Office.Interop.Word.WdTCSCConverterDirection.wdTCSCConverterDirectionAuto, bool CommonTerms = false, bool UseVariants = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TCSCConverter(valuetype Microsoft.Office.Interop.Word.WdTCSCConverterDirection WdTCSCConverterDirection, bool CommonTerms, bool UseVariants) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.TCSCConverter(Microsoft.Office.Interop.Word.WdTCSCConverterDirection,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WdTCSCConverterDirection" Type="Microsoft.Office.Interop.Word.WdTCSCConverterDirection" />
        <Parameter Name="CommonTerms" Type="System.Boolean" />
        <Parameter Name="UseVariants" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="WdTCSCConverterDirection">
          <see cref="T:Microsoft.Office.Interop.Word.WdTCSCConverterDirection" />。</param>
        <param name="CommonTerms">
          如果 Microsoft Office Word 是完整地转换常用表达式，而不是逐字符进行转换，则为 <see langword="true" />。</param>
        <param name="UseVariants">
          如果 Word 使用台湾、香港特别行政区和澳门特别行政区字符变量，则为 <see langword="true" />。 仅当从简体中文转换为繁体中文时才可使用。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的指定范围从繁体中文转换为简体中文，或从简体中文转换为繁体中文。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控制文档，然后将第一个段落的文本在书签中从繁体中文为简体中文，反之亦然。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#110](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#110)]
 [!code-vb[Trin_WordBookmark#110](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark.Text%2A>属性返回的书签未格式化文本。 当设置此属性的文本<xref:Microsoft.Office.Tools.Word.Bookmark>控件被替换。  
  
 设置<xref:Microsoft.Office.Tools.Word.Bookmark.Text%2A?displayProperty=fullName>属性不会删除书签。  
  
 设置<xref:Microsoft.Office.Tools.Word.Bookmark.Text%2A?displayProperty=fullName>跨越多个表格单元格的书签的属性将在第一个单元格内设置的文本。 如果该书签所包含的整个表和周围文本，将删除整个表。  
  
 有关设置信息<xref:Microsoft.Office.Tools.Word.Bookmark.Text%2A?displayProperty=fullName>重叠另一个书签的书签属性请参阅[书签控件](/visualstudio/vsto/bookmark-control.md)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有文本控件，然后在书签中使用显示的字符总数<xref:Microsoft.Office.Tools.Word.Bookmark.ComputeStatistics%2A>方法。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#15](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#15)]
 [!code-vb[Trin_WordBookmark#15](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRetrievalMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.TextRetrievalMode TextRetrievalMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.TextRetrievalMode TextRetrievalMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.TextRetrievalMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.TextRetrievalMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:Microsoft.Office.Interop.Word.TextRetrievalMode" /> 对象，该对象控制从 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件检索文本的方式。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.TextRetrievalMode" /> 对象，控制从 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件检索文本的方式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到文档中，第三个单词中的书签的地方和集的隐藏的文本控件<xref:Microsoft.Office.Tools.Word.Bookmark.TextRetrievalMode%2A>以便不包括隐藏的文本。 它然后会显示在消息框中的书签的文本。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#111](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#111)]
 [!code-vb[Trin_WordBookmark#111](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#111)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Tables TopLevelTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Tables TopLevelTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.TopLevelTables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Tables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Tables" /> 集合，该集合表示位于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件范围中最外层嵌套级别的表。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Tables" /> 集合，表示位于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件范围中最外层嵌套级别的表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回的集合包含仅最外层的上下文的范围内嵌套这些表格<xref:Microsoft.Office.Tools.Word.Bookmark>控件。 这些表不能在整个外面的嵌套级别设置的嵌套表。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件到文档中的表，然后将该表粘贴，为嵌套表，到第三个单元格。 然后，该代码在书签中选择下一个表。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#112](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#112)]
 [!code-vb[Trin_WordBookmark#112](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#112)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwoLinesInOne">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdTwoLinesInOneType TwoLinesInOne { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdTwoLinesInOneType TwoLinesInOne" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.TwoLinesInOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdTwoLinesInOneType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 Microsoft Office Word 是否将两行文本设置为一行，并指定包围 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的字符（如果有）。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.WdTwoLinesInOneType" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:Microsoft.Office.Interop.Word.Range.TwoLinesInOne%2A>属性<xref:Microsoft.Office.Interop.Word.WdTwoLinesInOneType.wdTwoLinesInOneNoBrackets>设置两个行文本中另一个未括在文本中的任何字符。 设置<xref:Microsoft.Office.Tools.Word.Bookmark.TwoLinesInOne%2A>属性<xref:Microsoft.Office.Interop.Word.WdTwoLinesInOneType.wdTwoLinesInOneNone>还原到两个单独的行组合文本行。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>具有到文档，然后设置的文本控件<xref:Microsoft.Office.Tools.Word.Bookmark.TwoLinesInOne%2A>属性<xref:Microsoft.Office.Interop.Word.WdTwoLinesInOneType.wdTwoLinesInOneCurlyBrackets>。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#113](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#113)]
 [!code-vb[Trin_WordBookmark#113](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#113)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Underline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdUnderline Underline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdUnderline Underline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Underline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdUnderline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置应用于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文本的下划线类型。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.WdUnderline" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>使用文档，然后下划线的文本中控制书签中的第三个单词。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#114](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#114)]
 [!code-vb[Trin_WordBookmark#114](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#114)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updates">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.CoAuthUpdates Updates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.CoAuthUpdates Updates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Updates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.CoAuthUpdates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的所有可用共同创作更新。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的可用共同创作更新。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以仅在共同创作启用的文档中使用此属性。 如果你尝试访问此属性的文档中未启用共同创作，你将收到<xref:System.Runtime.InteropServices.COMException>。  
  
> [!NOTE]
>  此方法将显示在 IntelliSense Word 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。 但是，无法在 Word 2007 项目中使用此属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">包含书签的文档中未启用共同创作。</exception>
        <exception cref="T:System.MissingMemberException">在 Word 2007 项目中使用此属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="WholeStory">
      <MemberSignature Language="C#" Value="public void WholeStory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WholeStory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.WholeStory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>扩展 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件以包含整个文章。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将文本添加到文档并将<xref:Microsoft.Office.Tools.Word.Bookmark>与文本。 使用<xref:Microsoft.Office.Tools.Word.Bookmark.WholeStory%2A>方法，它会扩展书签，使其包括整个文档。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#115](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#115)]
 [!code-vb[Trin_WordBookmark#115](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WordOpenXML">
      <MemberSignature Language="C#" Value="public string WordOpenXML { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WordOpenXML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.WordOpenXML" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中具有 Word Open XML 格式的内容。</summary>
        <value>一个字符串，其中包含 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中具有 Word Open XML 格式的内容。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Words">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Words Words { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Words Words" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Words" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Words</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Words" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有单词。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Words" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有单词。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的标点和段落标记<xref:Microsoft.Office.Tools.Word.Bookmark>控件包括在<xref:Microsoft.Office.Interop.Word.Words>集合。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件与文本发送到第一个段落，然后将更改为蓝色的书签的字体颜色。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#33](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#33)]
 [!code-vb[Trin_WordBookmark#33](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.Bookmark_XMLType XML { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Word.Bookmark_XMLType XML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.XML" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.Bookmark_XMLType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的 XML 文本。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的 XML 文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark.XML%2A>属性应与以下参数一起使用。  
  
|参数|描述|  
|---------------|-----------------|  
|`DataOnly`|`true` 若要返回的而不使用 Word XML 标记中; XML 文本否则为`false`。|  
  
 如果你使用<xref:Microsoft.Office.Tools.Word.Bookmark.XML%2A>未指定参数的属性，它返回<xref:Microsoft.Office.Tools.Word.Bookmark_XMLType>不应在代码中直接使用的对象。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档，然后将 XML 文本插入书签。 一个消息框，然后显示总数<xref:Microsoft.Office.Interop.Word.XMLNodes>和书签的 XML 内容。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#58](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#58)]
 [!code-vb[Trin_WordBookmark#58](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#58)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XMLNodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.XMLNodes XMLNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.XMLNodes XMLNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.XMLNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.XMLNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.XMLNodes" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有 XML 元素的集合，其中包括那些仅部分位于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的元素。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Word.XMLNodes" /> 集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档，然后将 XML 文本插入书签。 一个消息框，然后显示总数<xref:Microsoft.Office.Interop.Word.XMLNodes>和书签的 XML 内容。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#58](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#58)]
 [!code-vb[Trin_WordBookmark#58](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#58)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XMLParentNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.XMLNode XMLParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.XMLNode XMLParentNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.XMLParentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.XMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.XMLNode" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的父节点。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.XMLNode" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的父节点。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例插入到文档中的 XML，并创建<xref:Microsoft.Office.Tools.Word.Bookmark>上第二个字的控件。 然后将其他 XML 插入到书签，并显示的文本<xref:Microsoft.Office.Tools.Word.Bookmark.XMLParentNode%2A>消息框中。  
  
 此示例适用于文档级自定义。  
  
 [!code-csharp[Trin_WordBookmark#116](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#116)]
 [!code-vb[Trin_WordBookmark#116](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#116)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Copy">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在与现有 <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 控件相同的位置创建一个新的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新书签将变为<xref:Microsoft.Office.Interop.Word.Bookmark?displayProperty=fullName>对象而不是<xref:Microsoft.Office.Tools.Word.Bookmark?displayProperty=fullName>控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>