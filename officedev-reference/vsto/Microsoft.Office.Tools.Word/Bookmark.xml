<Type Name="Bookmark" FullName="Microsoft.Office.Tools.Word.Bookmark">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e39e38bcd4847fad5e0a17a38f379d0469b40990" /><Meta Name="ms.sourcegitcommit" Value="7439021cdeee6a9ef5d4640250701344f6cbba15" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/13/2019" /><Meta Name="ms.locfileid" Value="69001168" /></Metadata><TypeSignature Language="C#" Value="public interface Bookmark : IDisposable, System.ComponentModel.IComponent, System.ComponentModel.ISupportInitialize, System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Bookmark implements class System.ComponentModel.IComponent, class System.ComponentModel.ISupportInitialize, class System.IDisposable, class System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Tools.Word.Bookmark" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IBindableComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("716bd356-0f64-430b-9ea0-bde2921a0227")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件是一个具有唯一名称且用于公开事件的书签，可以绑定到数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.ControlCollection.AddBookmark%2A>使用方法可向文档范围添加书签。  
  
 [!INCLUDE[vsto_interface](~/includes/vsto-interface-md.md)]  
  
## <a name="usage"></a>用法  
 [!INCLUDE[vsto_net35mref](~/includes/vsto-net35mref-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个表示该 <see cref="T:Microsoft.Office.Interop.Word.Application" /> 控件的创建者的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Application" />，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的创建者。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例获取, 然后在消息框中显示书签显示的应用程序的名称和版本。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#1](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#1)]
 [!code-vb[Trin_WordBookmark#1](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public void AutoFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AutoFormat() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.AutoFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>自动设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的格式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeDoubleClick">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Tools.Word.ClickEventHandler BeforeDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Word.ClickEventHandler BeforeDoubleClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Word.Bookmark.BeforeDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.ClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当在默认的双击操作之前双击 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 双击重叠<xref:Microsoft.Office.Tools.Word.Bookmark>控件将在重叠的每个书签上引发事件。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后创建一个<xref:Microsoft.Office.Tools.Word.Bookmark.BeforeDoubleClick>事件处理程序。 双击<xref:Microsoft.Office.Tools.Word.Bookmark>控件时, 将选择书签中的文本。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#2)]
 [!code-vb[Trin_WordBookmark#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeRightClick">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Tools.Word.ClickEventHandler BeforeRightClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Word.ClickEventHandler BeforeRightClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Word.Bookmark.BeforeRightClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.ClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当在默认的右击操作之前右击 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 右键单击重叠<xref:Microsoft.Office.Tools.Word.Bookmark>控件将在重叠的每个书签上引发事件。  
  
   
  
## Examples  
 下面的代码示例将一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档中, 然后创建<xref:Microsoft.Office.Tools.Word.Bookmark.BeforeRightClick>一个事件处理程序。 右键单击<xref:Microsoft.Office.Tools.Word.Bookmark>该控件时, 将书签中的文本复制到剪贴板。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#3](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#3)]
 [!code-vb[Trin_WordBookmark#3](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Word.Bookmark.BindingContextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="P:System.Windows.Forms.IBindableComponent.BindingContext" /> 的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 属性的值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果更改了<xref:System.Windows.Forms.IBindableComponent.BindingContext%2A>属性, 则会引发此事件, 方法是编程修改或用户交互。 有关<xref:System.Windows.Forms.IBindableComponent.BindingContext%2A>属性用途的详细信息, <xref:System.Windows.Forms.BindingContext>请参阅类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bold">
      <MemberSignature Language="C#" Value="public int Bold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Bold" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Bold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的格式是否设置为粗体。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的任何文本都不是粗体，则为 0；如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有文本都是粗体，则为 -1；如果 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdUndefined" /> 控件中的部分文本是粗体，则为 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> (999999)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的值可以设置为0、-1 和<xref:Microsoft.Office.Interop.Word.WdConstants.wdToggle>。  
  
   
  
## Examples  
 下面的代码示例将一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档, 然后基于<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>书签中的文本的设置将格式设置为书签。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#4)]
 [!code-vb[Trin_WordBookmark#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoldBi">
      <MemberSignature Language="C#" Value="public int BoldBi { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BoldBi" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.BoldBi" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的格式是否设置为粗体。</summary>
        <value>如果<see cref="T:Microsoft.Office.Tools.Word.Bookmark" />控件中的任何文本都为粗体, 则为 0; 如果<see cref="T:Microsoft.Office.Tools.Word.Bookmark" />控件中的所有文本都为粗体, 则为 1;(999999) 如果<see cref="T:Microsoft.Office.Tools.Word.Bookmark" />控件中的部分文本以粗体显示。 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdUndefined" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的值可以设置为0、1和<xref:Microsoft.Office.Interop.Word.WdConstants.wdToggle>。  
  
 此<xref:Microsoft.Office.Tools.Word.Bookmark.BoldBi%2A>属性应用于从右到左的语言的文本。  
  
   
  
## Examples  
 下面的代码示例将一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档, 然后基于<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>书签中的文本的设置将格式设置为书签。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#4)]
 [!code-vb[Trin_WordBookmark#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BookmarkID">
      <MemberSignature Language="C#" Value="public int BookmarkID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BookmarkID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.BookmarkID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件在文档中的位置。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件在文档中的位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该数字对应于文档中的<xref:Microsoft.Office.Tools.Word.Bookmark>控件顺序:1表示第一个书签, 2 表示第二个书签, 依此类推。 如果删除其中一个书签, 则其他书签的<xref:Microsoft.Office.Tools.Word.Bookmark.BookmarkID%2A>将相应地进行重新编号。  
  
   
  
## Examples  
 下面的代码示例将<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档, 然后通过<xref:Microsoft.Office.Tools.Word.Bookmark.BookmarkID%2A>在消息框中显示书签, 在文档中显示书签的位置。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#5](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#5)]
 [!code-vb[Trin_WordBookmark#5](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bookmarks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Bookmarks Bookmarks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Bookmarks Bookmarks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Bookmarks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Bookmarks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Bookmarks" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件内的所有书签。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Bookmarks" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件内的所有书签。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不能<xref:Microsoft.Office.Tools.Word.Bookmark> <xref:Microsoft.Office.Interop.Word.Bookmarks?displayProperty=fullName>使用集合枚举文档中的每个控件。 使用, 然后查找类型<xref:Microsoft.Office.Tools.Word.Bookmark>的项。 <xref:Microsoft.Office.Tools.Word.ControlCollection>  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后将另一个书签添加到书签的第六个字符。 然后在一个消息框中显示书签中的书签总数。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#6](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#6)]
 [!code-vb[Trin_WordBookmark#6](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Borders Borders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Borders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Borders" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的所有边框。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Borders" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的所有边框。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>一个包含文本的控件, 然后向该书签添加边框。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#7](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#7)]
 [!code-vb[Trin_WordBookmark#7](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public float Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 Calculate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Calculate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>计算 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的数学表达式。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的数学表达式的计算结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果控件包含错误, 则此方法将显示**拼写和语法**对话框, 并选中 "**检查语法**" 复选框。 <xref:Microsoft.Office.Tools.Word.Bookmark>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanEdit">
      <MemberSignature Language="C#" Value="public int CanEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CanEdit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.CanEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public int CanPaste { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CanPaste" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.CanPaste" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Case">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdCharacterCase Case { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdCharacterCase Case" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Case" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdCharacterCase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:Microsoft.Office.Interop.Word.WdCharacterCase" /> 常数，该常数表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的大小写。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.WdCharacterCase" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用文本<xref:Microsoft.Office.Tools.Word.Bookmark>添加一个控件, 然后将文本更改为大写。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#8](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#8)]
 [!code-vb[Trin_WordBookmark#8](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Cells Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Cells Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Cells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Cells</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Cells" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的表单元格。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Cells" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的表单元格。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例向文档中添加一个三列三行的表, 然后向该表添加一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件。 最后, 代码更改书签内的表单元格的宽度。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#9)]
 [!code-vb[Trin_WordBookmark#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Characters Characters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Characters Characters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Characters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Characters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Characters" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的字符。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Characters" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的字符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后将<xref:Microsoft.Office.Tools.Word.Bookmark>另一个控件添加到第一个书签的第六个字符。 然后, 将在一个消息框中显示书签中的书签总数。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#6](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#6)]
 [!code-vb[Trin_WordBookmark#6](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterStyle">
      <MemberSignature Language="C#" Value="public object CharacterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CharacterStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.CharacterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的一个或多个字符的格式的样式。</summary>
        <value>一个对象，表示用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的一个或多个字符的格式的样式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterWidth">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdCharacterWidth CharacterWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdCharacterWidth CharacterWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.CharacterWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdCharacterWidth</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的字符宽度。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.WdCharacterWidth" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>一个包含文本的控件, 然后将该文本的字符宽度更改为半角字符。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#10](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#10)]
 [!code-vb[Trin_WordBookmark#10](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckGrammar">
      <MemberSignature Language="C#" Value="public void CheckGrammar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckGrammar() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.CheckGrammar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>开始对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件进行拼写和语法检查。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (ref object CustomDictionary, ref object IgnoreUppercase, ref object AlwaysSuggest, ref object CustomDictionary2, ref object CustomDictionary3, ref object CustomDictionary4, ref object CustomDictionary5, ref object CustomDictionary6, ref object CustomDictionary7, ref object CustomDictionary8, ref object CustomDictionary9, ref object CustomDictionary10);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling(object&amp; CustomDictionary, object&amp; IgnoreUppercase, object&amp; AlwaysSuggest, object&amp; CustomDictionary2, object&amp; CustomDictionary3, object&amp; CustomDictionary4, object&amp; CustomDictionary5, object&amp; CustomDictionary6, object&amp; CustomDictionary7, object&amp; CustomDictionary8, object&amp; CustomDictionary9, object&amp; CustomDictionary10) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.CheckSpelling(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" RefType="ref" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary2" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary3" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary4" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary5" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary6" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary7" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary8" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary9" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary10" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是自定义字典的文件名。</param>
        <param name="IgnoreUppercase">如果忽略大小写，则为 <see langword="true" />。 如果省略此参数，则使用 <see cref="P:Microsoft.Office.Interop.Word.Options.IgnoreUppercase" /> 属性的当前值。</param>
        <param name="AlwaysSuggest">如果要让 Microsoft Office Word 始终建议替代拼写，则为 <see langword="true" />。 如果省略此参数，则使用 <see cref="P:Microsoft.Office.Interop.Word.Options.SuggestSpellingCorrections" /> 属性的当前值。</param>
        <param name="CustomDictionary2">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary3">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary4">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary5">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary6">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary7">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary8">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary9">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary10">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <summary>从 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的开始处到文档末尾开始对文档进行拼写检查。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果控件包含错误, 则此方法将显示**拼写和语法**对话框, 并清除 "**检查语法**" 复选框。 <xref:Microsoft.Office.Tools.Word.Bookmark>  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后在文档中从书签开头到文档末尾检查文档中文本的拼写。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#11](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#11)]
 [!code-vb[Trin_WordBookmark#11](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSynonyms">
      <MemberSignature Language="C#" Value="public void CheckSynonyms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSynonyms() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.CheckSynonyms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>显示“同义词库”对话框，其中列出了 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中文本的替代词语选择或同义词。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse (ref object direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Collapse(object&amp; direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Collapse(System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="direction">折叠 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 的方向。 可以为以下 <see cref="T:Microsoft.Office.Interop.Word.WdCollapseDirection" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdCollapseDirection.wdCollapseEnd" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdCollapseDirection.wdCollapseStart" />。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdCollapseDirection.wdCollapseStart" />。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件折叠到起始或结束位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark>控件折叠后, 开始点和结束点相等。  
  
 如果使用<xref:Microsoft.Office.Interop.Word.WdCollapseDirection.wdCollapseEnd> <xref:Microsoft.Office.Tools.Word.Bookmark>折叠引用整个段落的控件, 则该范围位于结束段落标记 (下一段落的开头) 之后。 不过, 您可以在<xref:Microsoft.Office.Interop.Word.Range.MoveEnd%2A> <xref:Microsoft.Office.Tools.Word.Bookmark>控件范围折叠后使用方法将范围移回一个字符。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用文本<xref:Microsoft.Office.Tools.Word.Bookmark>添加一个控件, 然后在折叠书签之前和之后显示书签的起始位置和结束位置。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#12](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#12)]
 [!code-vb[Trin_WordBookmark#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public bool Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Column" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件是否为表列。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件为表列，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Columns Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Columns Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Columns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Columns" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有表列。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Columns" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有表列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例向文档中添加一个三列三行的表, 向该表添加一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件, 然后更改该书签中第一列的宽度。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#13](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#13)]
 [!code-vb[Trin_WordBookmark#13](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineCharacters">
      <MemberSignature Language="C#" Value="public bool CombineCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CombineCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.CombineCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件是否包含组合字符。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件包含组合字符，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Comments Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Comments Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Comments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Comments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Comments" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有注释。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Comments" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有注释。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后将注释插入书签中。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#14](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#14)]
 [!code-vb[Trin_WordBookmark#14](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeStatistics">
      <MemberSignature Language="C#" Value="public int ComputeStatistics (Microsoft.Office.Interop.Word.WdStatistic Statistic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ComputeStatistics(valuetype Microsoft.Office.Interop.Word.WdStatistic Statistic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ComputeStatistics(Microsoft.Office.Interop.Word.WdStatistic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Statistic" Type="Microsoft.Office.Interop.Word.WdStatistic" />
      </Parameters>
      <Docs>
        <param name="Statistic"><see cref="T:Microsoft.Office.Interop.Word.WdStatistic" />。</param>
        <summary>获取基于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的内容的统计信息。</summary>
        <returns>基于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的内容的统计信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>一个包含文本的控件, 然后<xref:Microsoft.Office.Tools.Word.Bookmark.ComputeStatistics%2A>使用方法显示书签中的总字符数。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#15](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#15)]
 [!code-vb[Trin_WordBookmark#15](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Conflicts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Conflicts Conflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Conflicts Conflicts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Conflicts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Conflicts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的所有共同创作冲突。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的共同创作冲突。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性仅可用于启用共同创作的文档。 如果你尝试在未启用共同创作的文档上访问此属性, 你将收到<xref:System.Runtime.InteropServices.COMException>。  
  
> [!NOTE]
>  此方法显示在面向的[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]Word 2007 项目的 IntelliSense 中。 但是, 不能在 Word 2007 项目中使用此属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">包含书签的文档中未启用共同创作。</exception>
        <exception cref="T:System.MissingMemberException">在 Word 2007 项目中使用此属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentControls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ContentControls ContentControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ContentControls ContentControls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ContentControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ContentControls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中包含的内容控件。</summary>
        <value>包含 <see cref="T:Microsoft.Office.Interop.Word.ContentControls" /> 中的内容控件的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertHangulAndHanja">
      <MemberSignature Language="C#" Value="public void ConvertHangulAndHanja (ref object ConversionsMode, ref object FastConversion, ref object CheckHangulEnding, ref object EnableRecentOrdering, ref object CustomDictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConvertHangulAndHanja(object&amp; ConversionsMode, object&amp; FastConversion, object&amp; CheckHangulEnding, object&amp; EnableRecentOrdering, object&amp; CustomDictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ConvertHangulAndHanja(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConversionsMode" Type="System.Object" RefType="ref" />
        <Parameter Name="FastConversion" Type="System.Object" RefType="ref" />
        <Parameter Name="CheckHangulEnding" Type="System.Object" RefType="ref" />
        <Parameter Name="EnableRecentOrdering" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ConversionsMode">设置朝鲜文字与朝鲜文汉字之间的转换方向。 可以为以下 <see cref="T:Microsoft.Office.Interop.Word.WdMultipleWordConversionsMode" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdMultipleWordConversionsMode.wdHangulToHanja" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdMultipleWordConversionsMode.wdHanjaToHangul" />。 默认值为 <see cref="P:Microsoft.Office.Interop.Word.Options.MultipleWordConversionsMode" /> 属性的当前值。</param>
        <param name="FastConversion">如果 Microsoft Office Word 仅用一种转换建议来进行自动转换，则为 <see langword="true" />。 默认值为 <see cref="P:Microsoft.Office.Interop.Word.Options.HangulHanjaFastConversion" /> 属性的当前值。</param>
        <param name="CheckHangulEnding">如果 Word 自动检测朝鲜文字结尾并忽略它们，则为 <see langword="true" />。 默认值为 <see cref="P:Microsoft.Office.Interop.Word.Options.CheckHangulEndings" /> 属性的当前值。 如果 <c>ConversionsMode</c> 参数设置为 <see cref="F:Microsoft.Office.Interop.Word.WdMultipleWordConversionsMode.wdHanjaToHangul" />，则忽略此参数。</param>
        <param name="EnableRecentOrdering">如果 Word 在建议列表顶部显示最近使用过的单词，则为 <see langword="true" />。 默认值为 <see cref="P:Microsoft.Office.Interop.Word.Options.EnableHangulHanjaRecentOrdering" /> 属性的当前值。</param>
        <param name="CustomDictionary">自定义朝鲜文字-朝鲜文汉字转换字典的名称。 使用此参数以便对主字典中所不包含的朝鲜文字-朝鲜文汉字转换使用自定义字典。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件文本从朝鲜文字转换为朝鲜文汉字，或从朝鲜文汉字转换为朝鲜文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档中的第一个段落, 然后检查<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>该书签的是否为<xref:Microsoft.Office.Interop.Word.WdLanguageID.wdKorean>。 如果是这样, 则将书签从朝鲜语转换为朝鲜文汉字, 反之亦然。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#16](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#16)]
 [!code-vb[Trin_WordBookmark#16](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Table ConvertToTable (ref object Separator, ref object NumRows, ref object NumColumns, ref object InitialColumnWidth, ref object Format, ref object ApplyBorders, ref object ApplyShading, ref object ApplyFont, ref object ApplyColor, ref object ApplyHeadingRows, ref object ApplyLastRow, ref object ApplyFirstColumn, ref object ApplyLastColumn, ref object AutoFit, ref object AutoFitBehavior, ref object DefaultTableBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Table ConvertToTable(object&amp; Separator, object&amp; NumRows, object&amp; NumColumns, object&amp; InitialColumnWidth, object&amp; Format, object&amp; ApplyBorders, object&amp; ApplyShading, object&amp; ApplyFont, object&amp; ApplyColor, object&amp; ApplyHeadingRows, object&amp; ApplyLastRow, object&amp; ApplyFirstColumn, object&amp; ApplyLastColumn, object&amp; AutoFit, object&amp; AutoFitBehavior, object&amp; DefaultTableBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ConvertToTable(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Table</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Separator" Type="System.Object" RefType="ref" />
        <Parameter Name="NumRows" Type="System.Object" RefType="ref" />
        <Parameter Name="NumColumns" Type="System.Object" RefType="ref" />
        <Parameter Name="InitialColumnWidth" Type="System.Object" RefType="ref" />
        <Parameter Name="Format" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyBorders" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyShading" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyFont" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyColor" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyHeadingRows" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyLastRow" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyFirstColumn" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyLastColumn" Type="System.Object" RefType="ref" />
        <Parameter Name="AutoFit" Type="System.Object" RefType="ref" />
        <Parameter Name="AutoFitBehavior" Type="System.Object" RefType="ref" />
        <Parameter Name="DefaultTableBehavior" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Separator">指定用于将文本分隔成单元格的字符。 可以是一个字符或以下 <see cref="T:Microsoft.Office.Interop.Word.WdTableFieldSeparator" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdTableFieldSeparator.wdSeparateByCommas" />、<see cref="F:Microsoft.Office.Interop.Word.WdTableFieldSeparator.wdSeparateByDefaultListSeparator" />、<see cref="F:Microsoft.Office.Interop.Word.WdTableFieldSeparator.wdSeparateByParagraphs" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdTableFieldSeparator.wdSeparateByTabs" />。  
  
如果省略此参数，则使用 <see cref="P:Microsoft.Office.Interop.Word._Application.DefaultTableSeparator" /> 属性的值。</param>
        <param name="NumRows">表中的行数。 如果省略此参数，则 Microsoft Office Word 根据 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的内容设置行数。</param>
        <param name="NumColumns">表中的列数。 如果省略此参数，则 Word 根据 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的内容设置列数。</param>
        <param name="InitialColumnWidth">每一列的初始宽度（以磅为单位）。 如果省略此参数，则 Word 计算并调整列宽度，以便表在边距间拉伸。</param>
        <param name="Format">指定“表格自动套用格式”对话框中列出的预定义格式之一。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdTableFormat" /> 常量之一。</param>
        <param name="ApplyBorders">为 <see langword="true" />，则应用指定格式的边框属性。</param>
        <param name="ApplyShading">为 <see langword="true" />，则应用指定格式的底纹属性。</param>
        <param name="ApplyFont">为 <see langword="true" />，则应用指定格式的字体属性。</param>
        <param name="ApplyColor">为 <see langword="true" />，则应用指定格式的颜色属性。</param>
        <param name="ApplyHeadingRows">为 <see langword="true" />，则应用指定格式的标题行属性。</param>
        <param name="ApplyLastRow">为 <see langword="true" />，则应用指定格式的最后一行属性。</param>
        <param name="ApplyFirstColumn">为 <see langword="true" />，则应用指定格式的第一列属性。</param>
        <param name="ApplyLastColumn">为 <see langword="true" />，则应用指定格式的最后一列属性。</param>
        <param name="AutoFit">为 <see langword="true" />，则在不更改单元格中的文本换行方式的情况下尽可能地缩小表列的宽度。</param>
        <param name="AutoFitBehavior">设置规定 Word 如何调整表大小的自动调整规则。 可以是下列 <see cref="T:Microsoft.Office.Interop.Word.WdAutoFitBehavior" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdAutoFitBehavior.wdAutoFitContent" />、<see cref="F:Microsoft.Office.Interop.Word.WdAutoFitBehavior.wdAutoFitFixed" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdAutoFitBehavior.wdAutoFitWindow" />。 如果 <c>DefaultTableBehavior</c> 为 <see cref="F:Microsoft.Office.Interop.Word.WdDefaultTableBehavior.wdWord8TableBehavior" />，则忽略此参数。</param>
        <param name="DefaultTableBehavior">设置一个值，该值指定 Word 是否自动调整表中单元格的大小以适合内容（自动调整）。 可以是下列 <see cref="T:Microsoft.Office.Interop.Word.WdDefaultTableBehavior" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdDefaultTableBehavior.wdWord8TableBehavior" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdDefaultTableBehavior.wdWord9TableBehavior" />。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本转换为表。</summary>
        <returns><see cref="T:Microsoft.Office.Interop.Word.Table" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后将书签中的文本转换为表。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#40](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#40)]
 [!code-vb[Trin_WordBookmark#40](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#40)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToTableOld">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Table ConvertToTableOld (ref object Separator, ref object NumRows, ref object NumColumns, ref object InitialColumnWidth, ref object Format, ref object ApplyBorders, ref object ApplyShading, ref object ApplyFont, ref object ApplyColor, ref object ApplyHeadingRows, ref object ApplyLastRow, ref object ApplyFirstColumn, ref object ApplyLastColumn, ref object AutoFit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Table ConvertToTableOld(object&amp; Separator, object&amp; NumRows, object&amp; NumColumns, object&amp; InitialColumnWidth, object&amp; Format, object&amp; ApplyBorders, object&amp; ApplyShading, object&amp; ApplyFont, object&amp; ApplyColor, object&amp; ApplyHeadingRows, object&amp; ApplyLastRow, object&amp; ApplyFirstColumn, object&amp; ApplyLastColumn, object&amp; AutoFit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ConvertToTableOld(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Table</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Separator" Type="System.Object" RefType="ref" />
        <Parameter Name="NumRows" Type="System.Object" RefType="ref" />
        <Parameter Name="NumColumns" Type="System.Object" RefType="ref" />
        <Parameter Name="InitialColumnWidth" Type="System.Object" RefType="ref" />
        <Parameter Name="Format" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyBorders" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyShading" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyFont" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyColor" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyHeadingRows" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyLastRow" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyFirstColumn" Type="System.Object" RefType="ref" />
        <Parameter Name="ApplyLastColumn" Type="System.Object" RefType="ref" />
        <Parameter Name="AutoFit" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Separator">To be added.</param>
        <param name="NumRows">To be added.</param>
        <param name="NumColumns">To be added.</param>
        <param name="InitialColumnWidth">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="ApplyBorders">To be added.</param>
        <param name="ApplyShading">To be added.</param>
        <param name="ApplyFont">To be added.</param>
        <param name="ApplyColor">To be added.</param>
        <param name="ApplyHeadingRows">To be added.</param>
        <param name="ApplyLastRow">To be added.</param>
        <param name="ApplyFirstColumn">To be added.</param>
        <param name="ApplyLastColumn">To be added.</param>
        <param name="AutoFit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Copy">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在与现有 <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 控件相同的位置创建一个新的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新书签是一个<xref:Microsoft.Office.Interop.Word.Bookmark?displayProperty=fullName>对象, 而不是一个<xref:Microsoft.Office.Tools.Word.Bookmark?displayProperty=fullName>控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Copy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在与现有 <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 控件相同的位置上创建一个新的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新书签是一个<xref:Microsoft.Office.Interop.Word.Bookmark?displayProperty=fullName>对象, 而不是一个<xref:Microsoft.Office.Tools.Word.Bookmark?displayProperty=fullName>控件。  
  
   
  
## Examples  
 下面的代码示例将一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档中, 然后创建<xref:Microsoft.Office.Tools.Word.Bookmark.BeforeRightClick>一个事件处理程序。 右键单击<xref:Microsoft.Office.Tools.Word.Bookmark>该控件时, 将书签中的文本复制到剪贴板。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#3](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#3)]
 [!code-vb[Trin_WordBookmark#3](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Bookmark Copy (string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Bookmark Copy(string Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Copy(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name">新书签的名称。</param>
        <summary>使用指定的 <paramref name="Name" /> 参数，在与现有 <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 控件相同的位置创建一个新的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <returns>一个 <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新书签是一个<xref:Microsoft.Office.Interop.Word.Bookmark?displayProperty=fullName>对象, 而不是一个<xref:Microsoft.Office.Tools.Word.Bookmark?displayProperty=fullName>控件。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将该书签复制到与原始书签相同的位置。 消息框显示每个书签的类型和位置。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#17](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#17)]
 [!code-vb[Trin_WordBookmark#17](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyAsPicture">
      <MemberSignature Language="C#" Value="public void CopyAsPicture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyAsPicture() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.CopyAsPicture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:Microsoft.Office.Tools.Word.Bookmark.CopyAsPicture" /> 方法将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的内容复制到剪贴板。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public void CreatePublisher (ref object Edition, ref object ContainsPICT, ref object ContainsRTF, ref object ContainsText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreatePublisher(object&amp; Edition, object&amp; ContainsPICT, object&amp; ContainsRTF, object&amp; ContainsText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.CreatePublisher(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" RefType="ref" />
        <Parameter Name="ContainsPICT" Type="System.Object" RefType="ref" />
        <Parameter Name="ContainsRTF" Type="System.Object" RefType="ref" />
        <Parameter Name="ContainsText" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Edition">To be added.</param>
        <param name="ContainsPICT">To be added.</param>
        <param name="ContainsRTF">To be added.</param>
        <param name="ContainsText">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示在其中创建 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的应用程序。</summary>
        <value>在其中创建 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的应用程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由于控件<xref:Microsoft.Office.Tools.Word.Bookmark>是在 Microsoft Office Word 中创建的, 因此该属性返回十六进制数 4D535744, 它表示字符串 "MSWD"。 此值还可以由常数<xref:Microsoft.Office.Interop.Word.WdConstants.wdCreatorCode>表示。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档的第一个段落, 然后在消息框中显示 creator 应用程序。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#18](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#18)]
 [!code-vb[Trin_WordBookmark#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Cut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从文档中移除 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的内容，并将其放入剪贴板。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark>控件的内容被剪切到剪贴板, 但折叠<xref:Microsoft.Office.Tools.Word.Bookmark>的控件仍保留在文档中。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDataSourceUpdateMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataSourceUpdateMode DefaultDataSourceUpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataSourceUpdateMode DefaultDataSourceUpdateMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.DefaultDataSourceUpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataSourceUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> 的默认 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <value><see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> 值之一。 默认值为 " <c>DataSourceUpdateMode</c>"。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果未<xref:System.Windows.Forms.Binding> 指定值<xref:System.Windows.Forms.Binding.DataSourceUpdateMode%2A>的情况下将添加到集合中,则使用此属性。<xref:System.Windows.Forms.IBindableComponent.DataBindings%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Delete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从该文档中删除动态创建的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 并将其从 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中移除。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法只能与<xref:Microsoft.Office.Tools.Word.Bookmark>在运行时以编程方式创建的控件一起使用。 如果在设计时添加到文档的<xref:Microsoft.Office.Tools.Word.Bookmark>控件上调用此方法, 则会引发异常。  
  
 不会从文档<xref:Microsoft.Office.Tools.Word.Bookmark>中删除的内容。  
  
   
  
## Examples  
 下面的代码示例使用文档<xref:Microsoft.Office.Tools.Word.Bookmark>中的文本添加一个控件, 将该样式更改`Heading 1`为, 然后删除该书签。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#107](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#107)]
 [!code-vb[Trin_WordBookmark#107](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deselected">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Tools.Word.SelectionEventHandler Deselected;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Word.SelectionEventHandler Deselected" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Word.Bookmark.Deselected" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.SelectionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当所选内容从 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件外部的区域时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此事件仅在<xref:Microsoft.Office.Tools.Word.Bookmark>控件具有焦点时引发, 然后将焦点<xref:Microsoft.Office.Tools.Word.Bookmark>从控件传输出去。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档的第一个段落, 并<xref:Microsoft.Office.Tools.Word.Bookmark.Deselected>创建事件处理程序。 当用户将光标从书签内移至书签外的区域时, 将显示一个消息框。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#19](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#19)]
 [!code-vb[Trin_WordBookmark#19](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectLanguage">
      <MemberSignature Language="C#" Value="public void DetectLanguage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetectLanguage() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.DetectLanguage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>分析 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文本，以确定编写该文本所用的语言。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark.DetectLanguage%2A>方法的结果以逐字符的方式存储<xref:Microsoft.Office.Interop.Word.Range.LanguageID%2A>在属性中。  
  
 如果该<xref:Microsoft.Office.Tools.Word.Bookmark.DetectLanguage%2A>方法已应用<xref:Microsoft.Office.Tools.Word.Bookmark>于控件, 则<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageDetected%2A>将属性设置为`true`。 若要重新评估<xref:Microsoft.Office.Tools.Word.Bookmark>控件文本的语言, 必须先将属性设置<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageDetected%2A>为`false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCharacterSpaceGrid">
      <MemberSignature Language="C#" Value="public bool DisableCharacterSpaceGrid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableCharacterSpaceGrid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.DisableCharacterSpaceGrid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 Microsoft Office Word 是否忽略相应的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的每行字符数。</summary>
        <value>如果 Microsoft Office Word 忽略相应 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件每行的字符数，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Document Document" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与该 <see cref="T:Microsoft.Office.Interop.Word.Document" /> 控件关联的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <value>与 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件关联的 <see cref="T:Microsoft.Office.Interop.Word.Document" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档中的第一个段落, 然后显示包含书签的文档的名称。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#20](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#20)]
 [!code-vb[Trin_WordBookmark#20](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Duplicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range Duplicate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Duplicate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个只读 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的所有属性。</summary>
        <value>一个只读 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的所有属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以将<xref:Microsoft.Office.Tools.Word.Bookmark.Duplicate%2A>属性返回的对象分配给另一个<xref:Microsoft.Office.Interop.Word.Range> , 以便一次性应用这些设置。 将重复对象分配给另一个<xref:Microsoft.Office.Interop.Word.Range>对象之前, 可以更改重复对象的任何属性, 而不会影响原始对象。  
  
 通过复制<xref:Microsoft.Office.Interop.Word.Range>对象, 您可以更改重复范围的起始或结束字符位置, 而不会更改原始范围。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 并将文本设置为粗体。 然后, 它从书签的<xref:Microsoft.Office.Tools.Word.Bookmark.Duplicate%2A>属性返回一个范围, 并显示一个消息框, 指示该范围包含与书签相同的属性。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#21](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#21)]
 [!code-vb[Trin_WordBookmark#21](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Editors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Editors Editors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Editors Editors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Editors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Editors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Editors" /> 对象，该对象表示获得修改文档中 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的授权的所有用户。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Editors" /> 对象，表示获得修改文档中 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的授权的所有用户。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中的第一个段落, 并将所有用户添加为书签中第四个单词的编辑器。 然后, 该示例对文档进行保护, 并在消息框中显示书签的可编辑范围。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#22](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#22)]
 [!code-vb[Trin_WordBookmark#22](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmphasisMark">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdEmphasisMark EmphasisMark { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdEmphasisMark EmphasisMark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.EmphasisMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdEmphasisMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的字符或指定字符字符串的强调标记。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.WdEmphasisMark" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将<xref:Microsoft.Office.Tools.Word.Bookmark.EmphasisMark%2A>书签中的设置<xref:Microsoft.Office.Interop.Word.WdEmphasisMark.wdEmphasisMarkOverComma>为。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#23](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#23)]
 [!code-vb[Trin_WordBookmark#23](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public bool Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Empty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件是否为空。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件为空，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 空<xref:Microsoft.Office.Tools.Word.Bookmark>控件标记位置 (折叠选择); 不标记任何文本。  
  
 如果该<xref:Microsoft.Office.Tools.Word.Bookmark>控件不存在, 则会引发异常。 使用方法确定<xref:Microsoft.Office.Tools.Word.Bookmark>控件是否存在。 <xref:Microsoft.Office.Interop.Word.Bookmarks.Exists%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public int End { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 End" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.End" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束字符位置。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束字符位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark>控件具有起始位置和结束位置。 结束位置比<xref:Microsoft.Office.Tools.Word.Bookmark>控件的开头更远。 使用属性可更改<xref:Microsoft.Office.Tools.Word.Bookmark>控件的大小。 <xref:Microsoft.Office.Tools.Word.Bookmark.End%2A>  
  
 如果将此属性<xref:Microsoft.Office.Tools.Word.Bookmark.Start%2A>设置为小于属性的值, 则<xref:Microsoft.Office.Tools.Word.Bookmark.Start%2A>属性将设置为相同的值<xref:Microsoft.Office.Tools.Word.Bookmark.Start%2A> (即, 和<xref:Microsoft.Office.Tools.Word.Bookmark.End%2A>属性等于)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将<xref:Microsoft.Office.Tools.Word.Bookmark>另一个控件添加到第一个书签中的第三个单词。 然后, 代码将移动第二个书签的范围, 直到它找到字符 K。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#67](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#67)]
 [!code-vb[Trin_WordBookmark#67](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#67)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndnoteOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.EndnoteOptions EndnoteOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.EndnoteOptions EndnoteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.EndnoteOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.EndnoteOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.EndnoteOptions" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的尾注。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.EndnoteOptions" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的尾注。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将书签中尾注的起始数设置为 5, 并将数字的样式设置<xref:Microsoft.Office.Interop.Word.WdNoteNumberStyle.wdNoteNumberStyleArabic>为。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#25](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#25)]
 [!code-vb[Trin_WordBookmark#25](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Endnotes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Endnotes Endnotes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Endnotes Endnotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Endnotes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Endnotes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Endnotes" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有尾注。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Endnotes" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有尾注。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将书签中尾注的起始数设置为 5, 并将数字的样式设置<xref:Microsoft.Office.Interop.Word.WdNoteNumberStyle.wdNoteNumberStyleArabic>为。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#25](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#25)]
 [!code-vb[Trin_WordBookmark#25](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOf">
      <MemberSignature Language="C#" Value="public int EndOf (ref object unit, ref object extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndOf(object&amp; unit, object&amp; extend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.EndOf(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Object" RefType="ref" />
        <Parameter Name="extend" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="unit">移动结束字符位置所依据的单位。 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />。</param>
        <param name="extend"><see cref="T:Microsoft.Office.Interop.Word.WdMovementType" />。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束字符位置移动或扩展到最近的文本单元的末尾。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 扩展的字符位置数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:Microsoft.Office.Tools.Word.Bookmark>控件的起始位置和结束位置都已位于单元的末尾, 则此方法不会移动或<xref:Microsoft.Office.Tools.Word.Bookmark>扩展控件。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后在书签后面添加其他文本。 然后, 它将书签扩展一个单词。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#27](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#27)]
 [!code-vb[Trin_WordBookmark#27](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnhMetaFileBits">
      <MemberSignature Language="C#" Value="public object EnhMetaFileBits { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EnhMetaFileBits" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.EnhMetaFileBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件范围的显示方式的图片表示形式。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件范围的显示方式的图片表示形式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark.EnhMetaFileBits%2A>属性返回一个字节数组, 该数组可与 Microsoft Windows api 一起使用。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后在变量中存储书签文本的图片表示形式。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#28](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#28)]
 [!code-vb[Trin_WordBookmark#28](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public int Expand (ref object unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Expand(object&amp; unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Expand(System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="unit">扩展 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件范围所依据的单位。 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />。</param>
        <summary>扩展 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的字符数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后在该书签后面插入一个句子, 并扩展书签以包含新句子。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#29](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#29)]
 [!code-vb[Trin_WordBookmark#29](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (string OutputFileName, Microsoft.Office.Interop.Word.WdExportFormat ExportFormat, bool OpenAfterExport = false, Microsoft.Office.Interop.Word.WdExportOptimizeFor OptimizeFor = Microsoft.Office.Interop.Word.WdExportOptimizeFor.wdExportOptimizeForPrint, bool ExportCurrentPage = false, Microsoft.Office.Interop.Word.WdExportItem Item = Microsoft.Office.Interop.Word.WdExportItem.wdExportDocumentContent, bool IncludeDocProps = false, bool KeepIRM = true, Microsoft.Office.Interop.Word.WdExportCreateBookmarks CreateBookmarks = Microsoft.Office.Interop.Word.WdExportCreateBookmarks.wdExportCreateNoBookmarks, bool DocStructureTags = true, bool BitmapMissingFonts = true, bool UseISO19005_1 = false, ref object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat(string OutputFileName, valuetype Microsoft.Office.Interop.Word.WdExportFormat ExportFormat, bool OpenAfterExport, valuetype Microsoft.Office.Interop.Word.WdExportOptimizeFor OptimizeFor, bool ExportCurrentPage, valuetype Microsoft.Office.Interop.Word.WdExportItem Item, bool IncludeDocProps, bool KeepIRM, valuetype Microsoft.Office.Interop.Word.WdExportCreateBookmarks CreateBookmarks, bool DocStructureTags, bool BitmapMissingFonts, bool UseISO19005_1, object&amp; FixedFormatExtClassPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ExportAsFixedFormat(System.String,Microsoft.Office.Interop.Word.WdExportFormat,System.Boolean,Microsoft.Office.Interop.Word.WdExportOptimizeFor,System.Boolean,Microsoft.Office.Interop.Word.WdExportItem,System.Boolean,System.Boolean,Microsoft.Office.Interop.Word.WdExportCreateBookmarks,System.Boolean,System.Boolean,System.Boolean,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OutputFileName" Type="System.String" />
        <Parameter Name="ExportFormat" Type="Microsoft.Office.Interop.Word.WdExportFormat" />
        <Parameter Name="OpenAfterExport" Type="System.Boolean" />
        <Parameter Name="OptimizeFor" Type="Microsoft.Office.Interop.Word.WdExportOptimizeFor" />
        <Parameter Name="ExportCurrentPage" Type="System.Boolean" />
        <Parameter Name="Item" Type="Microsoft.Office.Interop.Word.WdExportItem" />
        <Parameter Name="IncludeDocProps" Type="System.Boolean" />
        <Parameter Name="KeepIRM" Type="System.Boolean" />
        <Parameter Name="CreateBookmarks" Type="Microsoft.Office.Interop.Word.WdExportCreateBookmarks" />
        <Parameter Name="DocStructureTags" Type="System.Boolean" />
        <Parameter Name="BitmapMissingFonts" Type="System.Boolean" />
        <Parameter Name="UseISO19005_1" Type="System.Boolean" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="OutputFileName">新 PDF 或 XPS 文件的完整路径。</param>
        <param name="ExportFormat"><see cref="T:Microsoft.Office.Interop.Word.WdExportFormat" /> 值之一，指定是以 PDF 还是 XPS 格式保存 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</param>
        <param name="OpenAfterExport">如果要在导出 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 后打开新文件，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="OptimizeFor"><see cref="T:Microsoft.Office.Interop.Word.WdExportOptimizeFor" /> 值之一，指定进行屏幕优化还是打印优化。</param>
        <param name="ExportCurrentPage">如果导出整个页面，则为 <see langword="true" />；如果仅导出当前选定内容，则为 <see langword="false" />。</param>
        <param name="Item"><see cref="T:Microsoft.Office.Interop.Word.WdExportItem" /> 值之一，指定导出过程是仅包括文本，还是同时包括文本和标记。</param>
        <param name="IncludeDocProps">如果要在新导出的文件中包含文档属性，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="KeepIRM">如果要在源文档具有信息权限管理 (IRM) 保护时将 IRM 权限复制到 XPS 文档，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</param>
        <param name="CreateBookmarks"><see cref="T:Microsoft.Office.Interop.Word.WdExportCreateBookmarks" /> 值之一，指定是否导出书签以及要导出的书签类型。</param>
        <param name="DocStructureTags">如果要包含额外数据（如有关内容的流和逻辑组织的信息）来协助使用屏幕读取器，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</param>
        <param name="BitmapMissingFonts">如果要包含文本的位图，则为 <see langword="true" />；如果要引用文本字体，则为 <see langword="false" />。 如果字体许可证不允许在 PDF 文件中嵌入某种字体，则将此参数设置为 <see langword="true" />。 如果将此参数设置为 <see langword="false" />，则当指定字体不可用时，查看者的计算机会替换合适的字体。 默认值为 <see langword="true" />。</param>
        <param name="UseISO19005_1">如果要将 PDF 使用范围限制为按照 ISO 19005-1 进行标准化的 PDF 子集，则为 <see langword="true" />；否则为 <see langword="false" />。 如果将此参数设置为 <see langword="true" />，则生成的文件会是更加可靠的独立文件，但这些文件可能会更大，或者由于格式限制而显示更多的视觉瑕疵。 默认值为 <see langword="false" />。</param>
        <param name="FixedFormatExtClassPtr">一个指针，指向使书签能够以其他固定格式保存的 <see langword="IMsoDocExporter" /> 接口的实现。 有关详细信息，请参阅“扩展 Office (2007) 固定格式导出功能”。</param>
        <summary>以 PDF 或 XPS 格式保存 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只有在安装了外接程序后, 才能从 Word 保存为 PDF 或 XPS 文件。 有关详细信息, 请在 Office Online 上搜索 "为其他文件格式 (如 PDF 和 XPS) 启用支持"。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportFragment">
      <MemberSignature Language="C#" Value="public void ExportFragment (string FileName, Microsoft.Office.Interop.Word.WdSaveFormat Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportFragment(string FileName, valuetype Microsoft.Office.Interop.Word.WdSaveFormat Format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ExportFragment(System.String,Microsoft.Office.Interop.Word.WdSaveFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Word.WdSaveFormat" />
      </Parameters>
      <Docs>
        <param name="FileName">在其中保存文档片段的文件的完整路径。</param>
        <param name="Format"><see cref="T:Microsoft.Office.Interop.Word.WdSaveFormat" /> 值之一，指定文档片段文件的文件格式。 可以采用 Microsoft Office Word 支持的任何格式来保存文档片段。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 导出到文档用作文档片段。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Fields Fields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Fields Fields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Fields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Fields</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个只读 <see cref="T:Microsoft.Office.Interop.Word.Fields" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有字段。</summary>
        <value>一个只读 <see cref="T:Microsoft.Office.Interop.Word.Fields" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有字段。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后在书签末尾添加日期字段。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#30](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#30)]
 [!code-vb[Trin_WordBookmark#30](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Find Find { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Find Find" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Find" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Find</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Find" /> 对象，该对象包含在一个 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中进行查找操作的条件。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Find" /> 对象，包含在一个 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中进行查找操作的条件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将单词`sample`替换为书签`replacement`中的单词。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#31](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#31)]
 [!code-vb[Trin_WordBookmark#31](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FitTextWidth">
      <MemberSignature Language="C#" Value="public float FitTextWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 FitTextWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.FitTextWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 Microsoft Office Word 适合 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的宽度（以当前度量单位表示）。</summary>
        <value>Microsoft Office Word 适合 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的宽度（以当前度量单位表示）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将<xref:Microsoft.Office.Tools.Word.Bookmark.FitTextWidth%2A>该属性更改为1英寸。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#32](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#32)]
 [!code-vb[Trin_WordBookmark#32](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:Microsoft.Office.Interop.Word.Font" /> 对象，该对象表示分配给一个 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文本的字符格式设置。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Font" /> 对象，表示分配给一个 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文本的字符格式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将书签的字体颜色更改为蓝色。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#33](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#33)]
 [!code-vb[Trin_WordBookmark#33](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FootnoteOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.FootnoteOptions FootnoteOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.FootnoteOptions FootnoteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.FootnoteOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.FootnoteOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.FootnoteOptions" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的脚注。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.FootnoteOptions" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的脚注。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将书签中脚注的起始编号设置为 1, 并将数字的样式设置<xref:Microsoft.Office.Interop.Word.WdNoteNumberStyle.wdNoteNumberStyleArabic>为。 然后, 将脚注插入书签文本下方。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#34](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#34)]
 [!code-vb[Trin_WordBookmark#34](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Footnotes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Footnotes Footnotes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Footnotes Footnotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Footnotes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Footnotes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Footnotes" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有脚注。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Footnotes" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有脚注。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将书签中脚注的起始编号设置为 1, 并将数字的样式设置<xref:Microsoft.Office.Interop.Word.WdNoteNumberStyle.wdNoteNumberStyleArabic>为。 然后, 将脚注插入书签文本下方。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#34](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#34)]
 [!code-vb[Trin_WordBookmark#34](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattedText">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range FormattedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range FormattedText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.FormattedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象包括 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的格式化文本。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，包括 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的格式化文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性时, 将用格式化文本替换<xref:Microsoft.Office.Tools.Word.Bookmark>控件中的文本。  
  
   
  
## Examples  
 下面的代码示例向第一个段落中插入文本, 然后将第三个单词的格式设置为粗体。 然后, 它将第三个词 (带有格式) <xref:Microsoft.Office.Tools.Word.Bookmark>复制到控件。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#35](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#35)]
 [!code-vb[Trin_WordBookmark#35](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormFields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.FormFields FormFields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.FormFields FormFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.FormFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.FormFields</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.FormFields" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有窗体域。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.FormFields" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有窗体域。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:Microsoft.Office.Interop.Word.FormFields.Add%2A>的方法<xref:Microsoft.Office.Tools.Word.Bookmark.FormFields%2A>时, 只能传递以下枚举之一:  
  
 <xref:Microsoft.Office.Interop.Word.WdFieldType.wdFieldFormCheckBox>  
  
 <xref:Microsoft.Office.Interop.Word.WdFieldType.wdFieldFormDropDown>  
  
 <xref:Microsoft.Office.Interop.Word.WdFieldType.wdFieldFormTextInput>  
  
   
  
## Examples  
 下面的代码示例将一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到第一个段落, 然后<xref:Microsoft.Office.Interop.Word.WdFieldType.wdFieldFormCheckBox>将添加到书签。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#36](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#36)]
 [!code-vb[Trin_WordBookmark#36](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Frames Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Frames Frames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Frames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Frames</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Frames" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有框架。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Frames" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有框架。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后将框架添加到书签。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#24](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#24)]
 [!code-vb[Trin_WordBookmark#24](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="get_Information">
      <MemberSignature Language="C#" Value="public object get_Information (Microsoft.Office.Interop.Word.WdInformation Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object get_Information(valuetype Microsoft.Office.Interop.Word.WdInformation Type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.get_Information(Microsoft.Office.Interop.Word.WdInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Word.WdInformation" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="get_XML">
      <MemberSignature Language="C#" Value="public string get_XML (bool DataOnly = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string get_XML(bool DataOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.get_XML(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DataOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="DataOnly">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingSuggestions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.SpellingSuggestions GetSpellingSuggestions (ref object CustomDictionary, ref object IgnoreUppercase, ref object MainDictionary, ref object SuggestionMode, ref object CustomDictionary2, ref object CustomDictionary3, ref object CustomDictionary4, ref object CustomDictionary5, ref object CustomDictionary6, ref object CustomDictionary7, ref object CustomDictionary8, ref object CustomDictionary9, ref object CustomDictionary10);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.SpellingSuggestions GetSpellingSuggestions(object&amp; CustomDictionary, object&amp; IgnoreUppercase, object&amp; MainDictionary, object&amp; SuggestionMode, object&amp; CustomDictionary2, object&amp; CustomDictionary3, object&amp; CustomDictionary4, object&amp; CustomDictionary5, object&amp; CustomDictionary6, object&amp; CustomDictionary7, object&amp; CustomDictionary8, object&amp; CustomDictionary9, object&amp; CustomDictionary10) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.GetSpellingSuggestions(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.SpellingSuggestions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" RefType="ref" />
        <Parameter Name="MainDictionary" Type="System.Object" RefType="ref" />
        <Parameter Name="SuggestionMode" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary2" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary3" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary4" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary5" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary6" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary7" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary8" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary9" Type="System.Object" RefType="ref" />
        <Parameter Name="CustomDictionary10" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是自定义字典的文件名。</param>
        <param name="IgnoreUppercase">为 <see langword="true" />，则忽略全部是大写字母的单词。 如果省略此参数，则使用 <see cref="P:Microsoft.Office.Interop.Word.Options.IgnoreUppercase" /> 属性的当前值。</param>
        <param name="MainDictionary">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是主字典的文件名。 如果不指定主字典，则 Microsoft Office Word 使用对应于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的第一个单词的语言格式设置的主字典。</param>
        <param name="SuggestionMode">指定 Word 提供拼写建议的方式。 可以为以下 <see cref="T:Microsoft.Office.Interop.Word.WdSpellingWordType" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdSpellingWordType.wdAnagram" />、<see cref="F:Microsoft.Office.Interop.Word.WdSpellingWordType.wdSpellword" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdSpellingWordType.wdWildcard" />。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdSpellingWordType.wdSpellword" />。</param>
        <param name="CustomDictionary2">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary3">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary4">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary5">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary6">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary7">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary8">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary9">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <param name="CustomDictionary10">或者是一个返回 <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> 的表达式，或者是附加的自定义字典的文件名。 您最多可以指定九个附加字典。</param>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.SpellingSuggestions" /> 集合，该集合表示建议作为 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的第一个单词的拼写替换的单词。</summary>
        <returns>一个 <see cref="T:Microsoft.Office.Interop.Word.SpellingSuggestions" /> 集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例向第<xref:Microsoft.Office.Tools.Word.Bookmark>一个段落中添加了一个带有拼写错误文本的控件, 然后在消息框中显示第一个拼写建议。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#37](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#37)]
 [!code-vb[Trin_WordBookmark#37](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GoTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoTo (ref object What, ref object Which, ref object Count, ref object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoTo(object&amp; What, object&amp; Which, object&amp; Count, object&amp; Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.GoTo(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" RefType="ref" />
        <Parameter Name="Which" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
        <Parameter Name="Name" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="What">在 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 中检索的项的类型。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" /> 常量之一。</param>
        <param name="Which">在 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 中检索的项可以是 <see cref="T:Microsoft.Office.Interop.Word.WdGoToDirection" /> 常数之一。</param>
        <param name="Count">文档中项的编号。 默认值为 1。  
  
只有正数值才有效。 要指定位于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件之前的项，请使用 <see cref="F:Microsoft.Office.Interop.Word.WdGoToDirection.wdGoToPrevious" /> 作为 <c>Which</c> 参数，并指定一个 <c>Count</c> 值。</param>
        <param name="Name">如果 <c>What</c> 参数是 <see cref="F:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToBookmark" />、<see cref="F:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToComment" />、<see cref="F:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToField" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToObject" />，则此参数指定一个名称。</param>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中某个项的起始位置。</summary>
        <returns>一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将<xref:Microsoft.Office.Tools.Word.Bookmark.GoTo%2A>方法<xref:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToGrammaticalError>与、 <xref:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToProofreadingError> <xref:Microsoft.Office.Interop.Word.Range>或<xref:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToSpellingError>常量一起使用, 则返回的将包括任何语法错误文本或拼写错误文本。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例向第<xref:Microsoft.Office.Tools.Word.Bookmark>一个段落插入带有拼写错误的文本的控件, 然后转到书签中的第一个拼写错误, 并在消息框中显示其位置。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#38](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#38)]
 [!code-vb[Trin_WordBookmark#38](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToEditableRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToEditableRange (ref object EditorID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToEditableRange(object&amp; EditorID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.GoToEditableRange(System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EditorID" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="EditorID">可以是一个表示用户的电子邮件别名的字符串（如果在同一域中）、一个电子邮件地址或一个表示一组用户的 <see cref="T:Microsoft.Office.Interop.Word.WdEditorType" /> 常数。 如果省略，则选择所有用户都有权限编辑的所有范围。</param>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象表示可由用户或用户组修改的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的区域。</summary>
        <returns>一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示可由用户或用户组修改的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的区域。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中的第一个段落, 并将所有用户添加为书签中第四个单词的编辑器。 然后, 该示例将保护文档不受修订。 最后, 该代码在一个消息框中显示书签的可编辑范围。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#22](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#22)]
 [!code-vb[Trin_WordBookmark#22](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToNext">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToNext (Microsoft.Office.Interop.Word.WdGoToItem What);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToNext(valuetype Microsoft.Office.Interop.Word.WdGoToItem What) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.GoToNext(Microsoft.Office.Interop.Word.WdGoToItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="Microsoft.Office.Interop.Word.WdGoToItem" />
      </Parameters>
      <Docs>
        <param name="What"><see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" />。</param>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象表示由 <paramref name="What" /> 参数指定的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中下一项或位置的起始位置。</summary>
        <returns>一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示由 <paramref name="What" /> 参数指定的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中下一项或位置的起始位置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将此方法<xref:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToGrammaticalError>与、 <xref:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToProofreadingError>或<xref:Microsoft.Office.Interop.Word.WdGoToItem.wdGoToSpellingError>常量一起使用时, 返回的<xref:Microsoft.Office.Interop.Excel.Range>对象包括任何语法错误文本或拼写错误文本。  
  
   
  
## Examples  
 下面的代码示例向文档中添加<xref:Microsoft.Office.Tools.Word.Bookmark>文本和包含文本的控件, 然后向文本添加注释。 使用<xref:Microsoft.Office.Tools.Word.Bookmark.GoToNext%2A> 和<xref:Microsoft.Office.Tools.Word.Bookmark.GoToPrevious%2A>, 它将注释的位置显示在一个消息框中。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#39](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#39)]
 [!code-vb[Trin_WordBookmark#39](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#39)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToPrevious">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToPrevious (Microsoft.Office.Interop.Word.WdGoToItem What);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToPrevious(valuetype Microsoft.Office.Interop.Word.WdGoToItem What) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.GoToPrevious(Microsoft.Office.Interop.Word.WdGoToItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="Microsoft.Office.Interop.Word.WdGoToItem" />
      </Parameters>
      <Docs>
        <param name="What"><see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" />。 要移动到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的项。</param>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，该对象表示由 <paramref name="What" /> 参数指定的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中上一项或位置的起始位置。</summary>
        <returns>一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，表示由 <paramref name="What" /> 参数指定的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中上一项或位置的起始位置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例向文档中添加<xref:Microsoft.Office.Tools.Word.Bookmark>文本和包含文本的控件, 然后向文本添加注释。 使用<xref:Microsoft.Office.Tools.Word.Bookmark.GoToNext%2A> 和<xref:Microsoft.Office.Tools.Word.Bookmark.GoToPrevious%2A>, 此代码示例将注释的位置显示在消息框中。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#39](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#39)]
 [!code-vb[Trin_WordBookmark#39](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#39)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GrammarChecked">
      <MemberSignature Language="C#" Value="public bool GrammarChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GrammarChecked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.GrammarChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件执行了语法检查。</summary>
        <value>如果对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件运行了语法检查，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要重新检查<xref:Microsoft.Office.Tools.Word.Bookmark>控件中的语法, 请<xref:Microsoft.Office.Tools.Word.Bookmark.GrammarChecked%2A>将属性设置为。 `false`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GrammaticalErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ProofreadingErrors GrammaticalErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ProofreadingErrors GrammaticalErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.GrammaticalErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ProofreadingErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.ProofreadingErrors" /> 集合，该集合表示对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件进行语法检查失败的句子。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ProofreadingErrors" /> 集合，表示对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 进行语法检查失败的句子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每个句子只能有一个错误。  
  
 如果没有语法错误, 则由<xref:Microsoft.Office.Interop.Word.ProofreadingErrors.Count%2A> <xref:Microsoft.Office.Tools.Word.Bookmark.GrammaticalErrors%2A>属性返回的<xref:Microsoft.Office.Interop.Word.ProofreadingErrors>对象的属性将返回 0 (零)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后在书签中存在语法错误时运行语法检查器。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#41](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#41)]
 [!code-vb[Trin_WordBookmark#41](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdColorIndex HighlightColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdColorIndex HighlightColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.HighlightColorIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的突出显示颜色。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.WdColorIndex" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性可<xref:Microsoft.Office.Interop.Word.WdColorIndex.wdNoHighlight> <xref:Microsoft.Office.Tools.Word.Bookmark>从控件中删除突出显示颜色 (如果有)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后<xref:Microsoft.Office.Tools.Word.Bookmark.HighlightColorIndex%2A>将书签中第三个单词的设置为黄色。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#42](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#42)]
 [!code-vb[Trin_WordBookmark#42](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalInVertical">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdHorizontalInVerticalType HorizontalInVertical { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdHorizontalInVerticalType HorizontalInVertical" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.HorizontalInVertical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdHorizontalInVerticalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的垂直文本中设置的水平文本的格式设置。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.WdHorizontalInVerticalType" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将第三个单词更改为在书签中垂直显示。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#43](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#43)]
 [!code-vb[Trin_WordBookmark#43](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HTMLDivisions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.HTMLDivisions HTMLDivisions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.HTMLDivisions HTMLDivisions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.HTMLDivisions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.HTMLDivisions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.HTMLDivisions" /> 对象，该对象表示 Web 文档中的 HTML 分段。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.HTMLDivisions" /> 对象，表示 Web 文档中的 HTML 分段。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后<xref:Microsoft.Office.Tools.Word.Bookmark.HTMLDivisions%2A>将对象添加到书签, 并在消息框中显示书签中 HTML 分段的总数。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#44](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#44)]
 [!code-vb[Trin_WordBookmark#44](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#44)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Hyperlinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Hyperlinks" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有超链接。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Hyperlinks" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有超链接。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后将超链接添加到书签。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#45](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#45)]
 [!code-vb[Trin_WordBookmark#45](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#45)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在将当前文档另存为网页时 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的标识标签。</summary>
        <value>在将当前文档另存为网页时 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的标识标签。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这与<xref:Microsoft.Office.Tools.Word.Bookmark.BookmarkID%2A>属性不同, 并不表示书签在文档中的显示顺序。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后将 ID 属性设置`Sample`为。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#46](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#46)]
 [!code-vb[Trin_WordBookmark#46](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#46)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportFragment">
      <MemberSignature Language="C#" Value="public void ImportFragment (string FileName, bool MatchDestination = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportFragment(string FileName, bool MatchDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ImportFragment(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="MatchDestination" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileName">指定要导入的文档片段的完整路径。</param>
        <param name="MatchDestination">如果要与目标格式设置相匹配，则为 <see langword="true" />；否则为 <see langword="false" />。 如果指定为 <see langword="false" />，则导入的文档片段会保留原始文档中的格式设置。 默认值为 <see langword="false" />。</param>
        <summary>将文档片段导入到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将替换的<xref:Microsoft.Office.Tools.Word.Bookmark>内容。 若要阻止此情况发生, 请<xref:Microsoft.Office.Tools.Word.Bookmark.Collapse%2A>使用方法, 然后再使用此方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Information">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.Bookmark_InformationType Information { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Word.Bookmark_InformationType Information" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Information" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.Bookmark_InformationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取有关 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的信息。</summary>
        <value>提供有关 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的信息的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此<xref:Microsoft.Office.Tools.Word.Bookmark.Information%2A>属性应与以下参数一起使用。  
  
|参数|说明|  
|---------------|-----------------|  
|`Type`|<xref:Microsoft.Office.Interop.Word.WdInformation>值之一, 指定为书签返回的信息的类型。|  
  
 如果在不指定<xref:Microsoft.Office.Tools.Word.Bookmark.Information%2A>参数的情况下使用属性, 它将<xref:Microsoft.Office.Tools.Word.Bookmark_InformationType>返回一个不应在代码中直接使用的对象。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后<xref:Microsoft.Office.Tools.Word.Bookmark.Information%2A>使用属性在消息框中显示页码。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#47](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#47)]
 [!code-vb[Trin_WordBookmark#47](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InlineShapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShapes InlineShapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.InlineShapes InlineShapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.InlineShapes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.InlineShapes" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> 控件中的所有 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.InlineShapes" /> 集合，表示 <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> 控件中的所有 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例向文档<xref:Microsoft.Office.Tools.Word.Bookmark>中添加一个控件, 然后向该书签添加一个横线。 然后, 该代码会在消息框中显示书签包含的内联形状的总数。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#48](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#48)]
 [!code-vb[Trin_WordBookmark#48](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Bookmark InnerObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Bookmark InnerObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.InnerObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Bookmark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 控件的基础 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不能将<xref:Microsoft.Office.Tools.Word.Bookmark?displayProperty=fullName>宿主控件传递给需要基础对象 (a <xref:Microsoft.Office.Interop.Word.Bookmark?displayProperty=fullName>) 的方法或属性。 必须使用<xref:Microsoft.Office.Tools.Word.Bookmark.InnerObject%2A> <xref:Microsoft.Office.Tools.Word.Bookmark?displayProperty=fullName>宿主控件的属性来访问基础<xref:Microsoft.Office.Interop.Word.Bookmark?displayProperty=fullName>。 然后, 将此对象传递到需要的<xref:Microsoft.Office.Interop.Word.Bookmark?displayProperty=fullName>方法或属性。 有关更多信息，请参见 [Programmatic Limitations of Host Items and Host Controls](/visualstudio/vsto/programmatic-limitations-of-host-items-and-host-controls)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InRange">
      <MemberSignature Language="C#" Value="public bool InRange (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InRange(class Microsoft.Office.Interop.Word.Range Range) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InRange(Microsoft.Office.Interop.Word.Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range"><see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象。</param>
        <summary>确定 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 控件中是否包含应用该方法的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <returns>如果应用该方法的 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 控件中包含指定的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法通过比较起始<xref:Microsoft.Office.Interop.Word.Range>字符位置和结束<xref:Microsoft.Office.Tools.Word.Bookmark>字符位置以及情景类型确定是否包含在控件中。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后检查以确定书签是否与段落1位于同一范围内。 然后, 此代码会在一个消息框中显示结果。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#49](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#49)]
 [!code-vb[Trin_WordBookmark#49](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#49)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public void InsertAfter (string Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAfter(string Text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertAfter(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">要插入的文本。</param>
        <summary>在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的末尾插入指定文本。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例向文档中添加<xref:Microsoft.Office.Tools.Word.Bookmark>文本和包含文本的控件, 然后向文本添加注释。 使用<xref:Microsoft.Office.Tools.Word.Bookmark.GoToNext%2A> 和<xref:Microsoft.Office.Tools.Word.Bookmark.GoToPrevious%2A>, 它将注释的位置显示在一个消息框中。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#39](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#39)]
 [!code-vb[Trin_WordBookmark#39](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#39)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAlignmentTab">
      <MemberSignature Language="C#" Value="public void InsertAlignmentTab (int Alignment, int RelativeTo = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAlignmentTab(int32 Alignment, int32 RelativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertAlignmentTab(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Alignment" Type="System.Int32" />
        <Parameter Name="RelativeTo" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Alignment"><see cref="T:Microsoft.Office.Interop.Word.WdAlignmentTabAlignment" /> 值之一，指定制表位的对齐类型（如左对齐、居中或右对齐）。</param>
        <param name="RelativeTo"><see cref="T:Microsoft.Office.Interop.Word.WdAlignmentTabRelative" /> 值之一，指定制表位是相对于边距还是段落缩进。</param>
        <summary>将一个绝对制表符插入到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中，该绝对制表符相对于边距或缩进始终位于相同点上。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAutoText">
      <MemberSignature Language="C#" Value="public void InsertAutoText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAutoText() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertAutoText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>尝试将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本与现有“自动图文集”词条名匹配。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果找到任何此类匹配项<xref:Microsoft.Office.Tools.Word.Bookmark.InsertAutoText%2A> , 则插入 "自动图文集" 词条来替换该文本。 如果找不到匹配项, 则会引发异常。  
  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>该控件。  
  
 可以将<xref:Microsoft.Office.Interop.Word.AutoTextEntry.Insert%2A>方法<xref:Microsoft.Office.Interop.Word.AutoTextEntry>与对象结合使用来插入特定的 "自动图文集" 词条。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public void InsertBefore (string Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBefore(string Text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertBefore(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">要插入的文本。</param>
        <summary>在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件之前插入指定文本。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例向文档中添加<xref:Microsoft.Office.Tools.Word.Bookmark>文本和包含文本的控件, 然后向文本添加注释。 使用<xref:Microsoft.Office.Tools.Word.Bookmark.GoToNext%2A> 和<xref:Microsoft.Office.Tools.Word.Bookmark.GoToPrevious%2A>时, 此代码会将注释的位置显示在消息框中。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#39](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#39)]
 [!code-vb[Trin_WordBookmark#39](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#39)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBreak">
      <MemberSignature Language="C#" Value="public void InsertBreak (ref object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBreak(object&amp; Type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertBreak(System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Type">要插入的分隔符的类型。 <see cref="T:Microsoft.Office.Interop.Word.WdBreakType" />。</param>
        <summary>向 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中插入分页符、分列符或分节符。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>该控件。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后在书签的第四个单词之前插入**下一页分**节符。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#50](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#50)]
 [!code-vb[Trin_WordBookmark#50](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#50)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCaption">
      <MemberSignature Language="C#" Value="public void InsertCaption (ref object Label, ref object Title, ref object TitleAutoText, ref object Position, ref object ExcludeLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCaption(object&amp; Label, object&amp; Title, object&amp; TitleAutoText, object&amp; Position, object&amp; ExcludeLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertCaption(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Label" Type="System.Object" RefType="ref" />
        <Parameter Name="Title" Type="System.Object" RefType="ref" />
        <Parameter Name="TitleAutoText" Type="System.Object" RefType="ref" />
        <Parameter Name="Position" Type="System.Object" RefType="ref" />
        <Parameter Name="ExcludeLabel" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Label">要插入的标题标签。 <see cref="T:Microsoft.Office.Interop.Word.WdCaptionLabelID" />。</param>
        <param name="Title">要在紧靠该标题中的标签之后插入的文本（如果指定了 <c>TitleAutoText</c>，则忽略）。</param>
        <param name="TitleAutoText">要在紧靠该标题中的标签之后插入其内容的“自动图文集”词条（替代由 <c>Title</c> 指定的任何文本）。</param>
        <param name="Position">指定是在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件之上还是之下插入标题。 <see cref="T:Microsoft.Office.Interop.Word.WdCaptionPosition" />。</param>
        <param name="ExcludeLabel"><see langword="true" /> 表示不包含文本标签，如 <c>Label</c> 参数中所定义。 如果为 <see langword="false" />，则包含指定的标签。</param>
        <summary>紧靠 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件之前或之后插入标题。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后将标题插入书签中。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#51](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#51)]
 [!code-vb[Trin_WordBookmark#51](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCaptionXP">
      <MemberSignature Language="C#" Value="public void InsertCaptionXP (ref object Label, ref object Title, ref object TitleAutoText, ref object Position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCaptionXP(object&amp; Label, object&amp; Title, object&amp; TitleAutoText, object&amp; Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertCaptionXP(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Label" Type="System.Object" RefType="ref" />
        <Parameter Name="Title" Type="System.Object" RefType="ref" />
        <Parameter Name="TitleAutoText" Type="System.Object" RefType="ref" />
        <Parameter Name="Position" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Label">To be added.</param>
        <param name="Title">To be added.</param>
        <param name="TitleAutoText">To be added.</param>
        <param name="Position">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCrossReference">
      <MemberSignature Language="C#" Value="public void InsertCrossReference (ref object ReferenceType, Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, ref object ReferenceItem, ref object InsertAsHyperlink, ref object IncludePosition, ref object SeparateNumbers, ref object SeparatorString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCrossReference(object&amp; ReferenceType, valuetype Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, object&amp; ReferenceItem, object&amp; InsertAsHyperlink, object&amp; IncludePosition, object&amp; SeparateNumbers, object&amp; SeparatorString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertCrossReference(System.Object@,Microsoft.Office.Interop.Word.WdReferenceKind,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ReferenceType" Type="System.Object" RefType="ref" />
        <Parameter Name="ReferenceKind" Type="Microsoft.Office.Interop.Word.WdReferenceKind" />
        <Parameter Name="ReferenceItem" Type="System.Object" RefType="ref" />
        <Parameter Name="InsertAsHyperlink" Type="System.Object" RefType="ref" />
        <Parameter Name="IncludePosition" Type="System.Object" RefType="ref" />
        <Parameter Name="SeparateNumbers" Type="System.Object" RefType="ref" />
        <Parameter Name="SeparatorString" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ReferenceType">要插入交叉引用的项的类型。 可以是任何 <see cref="T:Microsoft.Office.Interop.Word.WdReferenceType" /> 或 <see cref="T:Microsoft.Office.Interop.Word.WdCaptionLabelID" /> 常数或一个用户定义的标题标签。</param>
        <param name="ReferenceKind">要包含在交叉引用中的信息。</param>
        <param name="ReferenceItem">如果 <c>ReferenceType</c> 为 <see cref="F:Microsoft.Office.Interop.Word.WdReferenceType.wdRefTypeBookmark" />，则此参数指定一个书签名。 对于所有其他 <c>ReferenceType</c> 值，此参数指定位于“交叉引用”对话框的“引用类型”框中的项数或名称。 使用 <see cref="M:Microsoft.Office.Interop.Word._Document.GetCrossReferenceItems(System.Object@)" /> 方法可返回可与此参数一起使用的项名称列表。</param>
        <param name="InsertAsHyperlink">为 <see langword="true" />，则将交叉引用作为超链接插入被引用项中；否则为 <see langword="false" />。</param>
        <param name="IncludePosition">为 <see langword="true" />，则根据引用项相对于交叉引用的位置，在之上或之下插入。</param>
        <param name="SeparateNumbers">为 <see langword="true" />，则使用分隔符将编号与关联文本分隔开来。 （仅当 <c>ReferenceType</c> 参数设置为 <see cref="F:Microsoft.Office.Interop.Word.WdReferenceType.wdRefTypeNumberedItem" /> 且 <c>ReferenceKind</c> 参数设置为 <see cref="F:Microsoft.Office.Interop.Word.WdReferenceKind.wdNumberFullContext" /> 时使用。）</param>
        <param name="SeparatorString">如果 <c>SeparateNumbers</c> 参数设置为 <see langword="true" />，则指定一个字符串来用作分隔符。</param>
        <summary>将对标题、书签、脚注或尾注、或对定义有标题标签的项（例如，公式、图形或表）的交叉引用插入 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果为指定<xref:Microsoft.Office.Interop.Word.WdReferenceKind.wdPageNumber> `ReferenceKind`值, 则可能需要对文档重新分页以便查看正确的交叉引用信息。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Word.Bookmark>控件将标题和文本添加到文档中, 然后向标题文本插入交叉引用。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#52](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#52)]
 [!code-vb[Trin_WordBookmark#52](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#52)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCrossReference_2002">
      <MemberSignature Language="C#" Value="public void InsertCrossReference_2002 (ref object ReferenceType, Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, ref object ReferenceItem, ref object InsertAsHyperlink, ref object IncludePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCrossReference_2002(object&amp; ReferenceType, valuetype Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, object&amp; ReferenceItem, object&amp; InsertAsHyperlink, object&amp; IncludePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertCrossReference_2002(System.Object@,Microsoft.Office.Interop.Word.WdReferenceKind,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ReferenceType" Type="System.Object" RefType="ref" />
        <Parameter Name="ReferenceKind" Type="Microsoft.Office.Interop.Word.WdReferenceKind" />
        <Parameter Name="ReferenceItem" Type="System.Object" RefType="ref" />
        <Parameter Name="InsertAsHyperlink" Type="System.Object" RefType="ref" />
        <Parameter Name="IncludePosition" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ReferenceType">To be added.</param>
        <param name="ReferenceKind">To be added.</param>
        <param name="ReferenceItem">To be added.</param>
        <param name="InsertAsHyperlink">To be added.</param>
        <param name="IncludePosition">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDatabase">
      <MemberSignature Language="C#" Value="public void InsertDatabase (ref object Format, ref object Style, ref object LinkToSource, ref object Connection, ref object SQLStatement, ref object SQLStatement1, ref object PasswordDocument, ref object PasswordTemplate, ref object WritePasswordDocument, ref object WritePasswordTemplate, ref object DataSource, ref object From, ref object To, ref object IncludeFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertDatabase(object&amp; Format, object&amp; Style, object&amp; LinkToSource, object&amp; Connection, object&amp; SQLStatement, object&amp; SQLStatement1, object&amp; PasswordDocument, object&amp; PasswordTemplate, object&amp; WritePasswordDocument, object&amp; WritePasswordTemplate, object&amp; DataSource, object&amp; From, object&amp; To, object&amp; IncludeFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertDatabase(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" RefType="ref" />
        <Parameter Name="Style" Type="System.Object" RefType="ref" />
        <Parameter Name="LinkToSource" Type="System.Object" RefType="ref" />
        <Parameter Name="Connection" Type="System.Object" RefType="ref" />
        <Parameter Name="SQLStatement" Type="System.Object" RefType="ref" />
        <Parameter Name="SQLStatement1" Type="System.Object" RefType="ref" />
        <Parameter Name="PasswordDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="PasswordTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="WritePasswordDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="WritePasswordTemplate" Type="System.Object" RefType="ref" />
        <Parameter Name="DataSource" Type="System.Object" RefType="ref" />
        <Parameter Name="From" Type="System.Object" RefType="ref" />
        <Parameter Name="To" Type="System.Object" RefType="ref" />
        <Parameter Name="IncludeFields" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Format">在“表格自动套用格式”对话框中的“格式”框中列出的格式。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdTableFormat" /> 常数中的任何一个。 默认情况下，会对表中的单元格应用边框。</param>
        <param name="Style">由应用于表的 <c>Format</c> 指定的“自动套用格式”的属性。 使用以下值的任意组合之和： 
[1|1] 值 
[1|2] 意义 
[2|1] 0 （零） 
[2|2] 无 
[3|1] 1 
[3|2] 边框 
[4|1] 2 
[4|2] 底纹 
[5|1] 4 
[5|2] 字体 
[6|1] 8 
[6|2] 颜色 
[7|1] 16 
[7|2] 自动调整 
[8|1] 32 
[8|2] 标题行 
[9|1] 64 
[9|2] 最后一行 
[10|1] 128 
[10|2] 第一列 
[11|1] 256 
[11|2] 最后一列</param>
        <param name="LinkToSource">如果为 <see langword="true" />，则创建新表与数据源之间的链接。</param>
        <param name="Connection">限制执行由 <c>SQLStatement</c> 指定的查询的范围。 指定范围的方式取决于数据的检索方式。 例如: 
如果通过开放式数据库连接 (ODBC) 检索，则指定一个连接字符串。  
  
如果通过使用动态数据交换 (DDE) 从 Microsoft Office Excel 检索，则指定一个指定范围或“整个电子表格”。  
  
 **注意**<see langword="   " />动态数据交换 (DDE) 是比较老的技术，它不是很安全。 如果可能，请使用更安全的 DDE 的替代技术，如对象链接和嵌入 (OLE)。  
  
如果从 Microsoft Access 检索数据，则指定单词“Table”或“Query”，其后跟表名或查询名称。</param>
        <param name="SQLStatement">一个可选查询字符串，它检索要插入文档中的、主数据源中的数据的子集。</param>
        <param name="SQLStatement1">如果查询字符串的长度超过 255 个字符，则 <c>SQLStatement</c> 表示该字符串的第一部分，而 <c>SQLStatement1</c> 表示第二部分。</param>
        <param name="PasswordDocument">打开数据源所需的密码（如果有）。 （请参见下面的备注。）</param>
        <param name="PasswordTemplate">如果数据源为 Microsoft Office Word 文档，则此参数为打开附加模板所需的密码（如果有）。 （请参见下面的备注。）</param>
        <param name="WritePasswordDocument">保存对文档的更改所需的密码。 （请参见下面的备注。）</param>
        <param name="WritePasswordTemplate">保存对模板的更改所需的密码。 （请参见下面的备注。）</param>
        <param name="DataSource">数据源的路径和文件名。</param>
        <param name="From">要插入的记录的范围中第一个数据记录的编号。</param>
        <param name="To">要插入的记录的范围中最后一个数据记录的编号。</param>
        <param name="IncludeFields">为 <see langword="true" />，则在新表的第一行中包含来自数据源的字段名。</param>
        <summary>从数据源（例如，一个单独的 Microsoft Office Word 文档、一个 Microsoft Office Excel 工作表或一个 Microsoft Access 数据库）检索数据，并以表的形式插入该数据来代替 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 避免在应用程序中使用硬编码的密码。 如果过程中需要密码, 请从用户请求密码, 将其存储在变量中, 然后在代码中使用该变量。  
  
 避免使用内置系统管理员 (sa) 登录帐户。 相反, 使系统管理员成为 sysadmin 固定服务器角色的成员, 并让他们使用自己的帐户进行登录。 仅当没有其他方法登录时才使用 sa。 若要防止通过 sa 登录帐户进行未经授权的访问, 应为该帐户分配一个强的唯一密码。  
  
 如果可能, 请使用 Windows 身份验证 (也称为可信连接), 该身份验证使用 Windows 用户帐户连接到 SQL Server。 当用户通过 Windows 用户帐户连接时, SQL Server 将使用 Windows 操作系统中的信息来验证帐户名和密码。 在您可以使用 Windows 身份验证之前, 服务器管理员必须将 SQL Server 配置为使用此模式的身份验证。 如果 Windows 身份验证不可用, 请避免保存用户的登录信息。 用户在每次登录时都输入其登录信息更安全。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 此示例将<xref:Microsoft.Office.Tools.Word.Bookmark>一个 Microsoft Excel 电子表格插入到控件中。 样式值 (191) 是数字1、2、4、8、16、32和128的组合。 此示例假设有一个名`Data.xlsx`为的工作簿保存到 C 目录的根目录中, 工作表上至少有两行数据。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#54](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#54)]
 [!code-vb[Trin_WordBookmark#54](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#54)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDateTime">
      <MemberSignature Language="C#" Value="public void InsertDateTime (ref object DateTimeFormat, ref object InsertAsField, ref object InsertAsFullWidth, ref object DateLanguage, ref object CalendarType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertDateTime(object&amp; DateTimeFormat, object&amp; InsertAsField, object&amp; InsertAsFullWidth, object&amp; DateLanguage, object&amp; CalendarType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertDateTime(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateTimeFormat" Type="System.Object" RefType="ref" />
        <Parameter Name="InsertAsField" Type="System.Object" RefType="ref" />
        <Parameter Name="InsertAsFullWidth" Type="System.Object" RefType="ref" />
        <Parameter Name="DateLanguage" Type="System.Object" RefType="ref" />
        <Parameter Name="CalendarType" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="DateTimeFormat">要用于显示日期或时间，或同时显示日期和时间的格式。 如果省略此参数，则 Microsoft Office Word 使用来自 Windows 控制面板（“区域设置”图标）的短日期样式。</param>
        <param name="InsertAsField">为 <see langword="true" />，则以 TIME 字段的形式插入指定信息；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</param>
        <param name="InsertAsFullWidth">为 <see langword="true" />，则以双字节数字的形式插入指定信息；否则为 <see langword="false" />。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <param name="DateLanguage">设置显示日期和时间的语言。 可以为以下 <see cref="T:Microsoft.Office.Interop.Word.WdDateLanguage" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdDateLanguage.wdDateLanguageBidi" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdDateLanguage.wdDateLanguageLatin" />。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <param name="CalendarType">设置显示日期或时间时要使用的日历类型。 可以为以下 <see cref="T:Microsoft.Office.Interop.Word.WdCalendarTypeBi" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdCalendarTypeBi.wdCalendarTypeBidi" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdCalendarTypeBi.wdCalendarTypeGregorian" />。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <summary>以文本或以 TIME 字段的形式将当前日期或时间，或同时将日期和时间插入 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>该控件。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例在文档<xref:Microsoft.Office.Tools.Word.Bookmark>中插入带有文本的控件, 然后将日期和时间字段插入书签中。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#55](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#55)]
 [!code-vb[Trin_WordBookmark#55](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#55)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDateTimeOld">
      <MemberSignature Language="C#" Value="public void InsertDateTimeOld (ref object DateTimeFormat, ref object InsertAsField, ref object InsertAsFullWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertDateTimeOld(object&amp; DateTimeFormat, object&amp; InsertAsField, object&amp; InsertAsFullWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertDateTimeOld(System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateTimeFormat" Type="System.Object" RefType="ref" />
        <Parameter Name="InsertAsField" Type="System.Object" RefType="ref" />
        <Parameter Name="InsertAsFullWidth" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="DateTimeFormat">To be added.</param>
        <param name="InsertAsField">To be added.</param>
        <param name="InsertAsFullWidth">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertFile">
      <MemberSignature Language="C#" Value="public void InsertFile (string FileName, ref object Range, ref object ConfirmConversions, ref object Link, ref object Attachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertFile(string FileName, object&amp; Range, object&amp; ConfirmConversions, object&amp; Link, object&amp; Attachment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertFile(System.String,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Range" Type="System.Object" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object" RefType="ref" />
        <Parameter Name="Link" Type="System.Object" RefType="ref" />
        <Parameter Name="Attachment" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">要插入的文件的路径和文件名。 如果不指定路径，则 Microsoft Office Word 假定该文件在当前文件夹中。</param>
        <param name="Range">如果指定的文件是一个 Word 文档，则此参数表示一个书签。 如果该文件是另一种类型（例如，一个 Microsoft Office Excel 工作簿），则此参数表示指定范围或单元格范围（例如，R1C1:R3C4）。</param>
        <param name="ConfirmConversions">为 <see langword="true" />，则插入非 Word 文档格式的文件时，让 Word 提示确认转换。</param>
        <param name="Link">为 <see langword="true" />，则通过使用 <see cref="F:Microsoft.Office.Interop.Word.WdFieldType.wdFieldIncludeText" /> 字段插入文件。</param>
        <param name="Attachment">为 <see langword="true" />，则以附件的形式将该文件插入电子邮件。</param>
        <summary>将所有或部分指定文件插入 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>该控件。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将一个书签控件添加到文档中, 然后将文件插入书签中。 此示例要求在 C 目录的根目录中`Sales.docx`有一个名为的文档。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#56](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#56)]
 [!code-vb[Trin_WordBookmark#56](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#56)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraph">
      <MemberSignature Language="C#" Value="public void InsertParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertParagraph" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用新段落替换 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果不想替换<xref:Microsoft.Office.Tools.Word.Bookmark>控件, 请<xref:Microsoft.Office.Tools.Word.Bookmark.Collapse%2A>使用方法, 然后再使用此方法。 方法<xref:Microsoft.Office.Tools.Word.Bookmark.InsertParagraphAfter%2A>在<xref:Microsoft.Office.Tools.Word.Bookmark>控件后插入一个新段落。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphAfter">
      <MemberSignature Language="C#" Value="public void InsertParagraphAfter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraphAfter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertParagraphAfter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件之后插入一个段落标记。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBefore">
      <MemberSignature Language="C#" Value="public void InsertParagraphBefore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraphBefore() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertParagraphBefore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件之前插入一个新段落。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用此方法后, 控件将<xref:Microsoft.Office.Tools.Word.Bookmark>展开以包括新段落。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertSymbol">
      <MemberSignature Language="C#" Value="public void InsertSymbol (int CharacterNumber, ref object Font, ref object Unicode, ref object Bias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertSymbol(int32 CharacterNumber, object&amp; Font, object&amp; Unicode, object&amp; Bias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertSymbol(System.Int32,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharacterNumber" Type="System.Int32" />
        <Parameter Name="Font" Type="System.Object" RefType="ref" />
        <Parameter Name="Unicode" Type="System.Object" RefType="ref" />
        <Parameter Name="Bias" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="CharacterNumber">指定符号的字符数。 此值始终为 31 与对应于该符号在符号表中的位置的数字（从左向右数）之和。 例如，要指定在 Symbol 字体中位于符号表中位置 37 处的增量字符，请将 <c>CharacterNumber</c> 设置为 68。</param>
        <param name="Font">包含符号的字体的名称。</param>
        <param name="Unicode">为 <see langword="true" />，则插入由 <c>CharacterNumber</c> 指定的 Unicode 字符；为 <see langword="false" />，则插入由 <c>CharacterNumber</c> 指定的 ANSI 字符。 默认值为 <see langword="false" />。</param>
        <param name="Bias">设置符号的字体偏量。 此参数在设置东亚字符的正确字体偏量时很有用。 可以为以下 <see cref="T:Microsoft.Office.Interop.Word.WdFontBias" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdFontBias.wdFontBiasDefault" />、<see cref="F:Microsoft.Office.Interop.Word.WdFontBias.wdFontBiasDontCare" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdFontBias.wdFontBiasFareast" />。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <summary>插入一个符号来代替 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>该控件。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例向文档<xref:Microsoft.Office.Tools.Word.Bookmark>中添加一个控件, 然后向该书签插入一个双向箭头。 使用<xref:Microsoft.Office.Tools.Word.Bookmark.InsertSymbol%2A>方法时, 书签将从文档中删除。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#57](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#57)]
 [!code-vb[Trin_WordBookmark#57](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#57)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertXML">
      <MemberSignature Language="C#" Value="public void InsertXML (string XML, ref object Transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertXML(string XML, object&amp; Transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InsertXML(System.String,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XML" Type="System.String" />
        <Parameter Name="Transform" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="XML">要插入的 XML 文本。</param>
        <param name="Transform">要应用于插入的 XML 文本的转换。</param>
        <summary>向 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件插入指定的 XML 文本。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果控件包含文本, 则该<xref:Microsoft.Office.Tools.Word.Bookmark.InsertXML%2A>方法将替换现有文本。 <xref:Microsoft.Office.Tools.Word.Bookmark>  
  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>该控件。  
  
 <xref:Microsoft.Office.Tools.Word.Bookmark.InsertXML%2A>使用方法插入使用任意 XML 或 Word xml 标记的文本。 XML 必须格式正确。 如果使用 Word XML, 则它还必须根据 Word XML 架构有效。  
  
 如果无法将指定的 XML 文本插入<xref:Microsoft.Office.Tools.Word.Bookmark>控件, 则显示一条错误消息。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档, 然后将 XML 文本插入书签中。 随后将显示一个消息框, 以显示书签的 XML <xref:Microsoft.Office.Interop.Word.XMLNodes>内容总数。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#58](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#58)]
 [!code-vb[Trin_WordBookmark#58](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#58)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InStory">
      <MemberSignature Language="C#" Value="public bool InStory (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InStory(class Microsoft.Office.Interop.Word.Range Range) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.InStory(Microsoft.Office.Interop.Word.Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range"><see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，其文章与包含 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文章进行比较。</param>
        <summary>确定应用此方法的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件与 <paramref name="Range" /> 参数指定的范围是否位于同一文章中。</summary>
        <returns>如果应用此方法的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件与 <paramref name="Range" /> 参数指定的范围位于同一文章中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后检查以确定它是否与第一个段落在同一文章中。 然后, 结果将显示在消息框中。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#59](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#59)]
 [!code-vb[Trin_WordBookmark#59](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#59)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEndOfRowMark">
      <MemberSignature Language="C#" Value="public bool IsEndOfRowMark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEndOfRowMark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.IsEndOfRowMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件是否已折叠且位于表中的行末标记处。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件已折叠且位于表中的行末标记处，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="C#" Value="public bool IsEqual (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEqual(class Microsoft.Office.Interop.Word.Range Range) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.IsEqual(Microsoft.Office.Interop.Word.Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range">与 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 控件进行比较的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</param>
        <summary>确定应用此方法的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件是否与 <paramref name="Range" /> 参数指定的范围相等。</summary>
        <returns>如果应用此方法的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件与 <paramref name="Range" /> 参数指定的范围相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法比较起始和结束字符位置以及情景类型。 如果这两个对象的所有三项都是相同的, 则对象相等。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中并进行检查, 以确定书签的范围是否等于第一段的范围。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#60](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#60)]
 [!code-vb[Trin_WordBookmark#60](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#60)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Italic">
      <MemberSignature Language="C#" Value="public int Italic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Italic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Italic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的格式是否设置为斜体。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的任何文本都不是斜体，则为 0；如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有文本都是斜体，则为 -1；如果 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdUndefined" /> 控件中的部分文本是斜体，则为 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> (999999)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的值可以设置为0、-1 或<xref:Microsoft.Office.Interop.Word.WdConstants.wdToggle>。  
  
   
  
## Examples  
 下面的代码示例将一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档, 然后基于<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>书签中的文本的设置将格式设置为书签。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#4)]
 [!code-vb[Trin_WordBookmark#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItalicBi">
      <MemberSignature Language="C#" Value="public int ItalicBi { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItalicBi" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ItalicBi" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的格式是否设置为斜体。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件文本中的任何文本都不是斜体，则为 0；如果 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有文本都是斜体，则为 1；如果 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdUndefined" /> 控件中的部分文本是斜体，则为 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> (999999)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的值可以设置为0、1或<xref:Microsoft.Office.Interop.Word.WdConstants.wdToggle>。  
  
 此<xref:Microsoft.Office.Tools.Word.Bookmark.ItalicBi%2A>属性应用于从右到左语言的文本。  
  
   
  
## Examples  
 下面的代码示例将一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档, 然后基于<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>书签中的文本的设置将格式设置为书签。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#4)]
 [!code-vb[Trin_WordBookmark#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Kana">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdKana Kana { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdKana Kana" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Kana" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdKana</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中指定范围的日语文本是平假名还是片假名。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.WdKana" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果该<xref:Microsoft.Office.Tools.Word.Bookmark>控件<xref:Microsoft.Office.Interop.Word.WdConstants.wdUndefined>的范围包含平假名和片假名的组合或者如果该范围包含一些非日语文本, 此属性将返回。 如果将<xref:Microsoft.Office.Tools.Word.Bookmark.Kana%2A>属性设置为<xref:Microsoft.Office.Interop.Word.WdConstants.wdUndefined>, 则会引发异常。  
  
   
  
## Examples  
 下面的代码示例向第<xref:Microsoft.Office.Tools.Word.Bookmark>一个段落添加一个控件, 并在文本包含平假名字符时显示一条消息。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#61](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#61)]
 [!code-vb[Trin_WordBookmark#61](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#61)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageDetected">
      <MemberSignature Language="C#" Value="public bool LanguageDetected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LanguageDetected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.LanguageDetected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 Microsoft Office Word 是否已检测到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的语言。</summary>
        <value>如果 Microsoft Office Word 已检测到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的语言，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>检查属性是否有以前的语言检测的结果。  
  
 调用<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageDetected%2A> 方法<xref:Microsoft.Office.Interop.Word.Range.DetectLanguage%2A>时, 属性`true`设置为。 若要重新计算文本的语言, 必须先将<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageDetected%2A>属性设置为。 `false`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageID">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.LanguageID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的语言。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于自定义字典, 必须先将<xref:Microsoft.Office.Interop.Word.Dictionary.LanguageSpecific%2A>属性设置为`true` , 然后再指定<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>属性。 特定于语言的自定义字典仅查看为该语言设置格式的文本。  
  
   
  
## Examples  
 下面的代码示例将一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档, 然后基于<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageID%2A>书签中的文本的设置将格式设置为书签。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#4)]
 [!code-vb[Trin_WordBookmark#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageIDFarEast">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageIDFarEast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageIDFarEast" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.LanguageIDFarEast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的东亚语言。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这是在中文版 Microsoft Office Word 中创建的文档中返回或设置东亚文本语言的建议方法。  
  
   
  
## Examples  
 下面的代码示例向第<xref:Microsoft.Office.Tools.Word.Bookmark>一个段落添加一个控件, 并将<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageIDFarEast%2A>属性设置为朝鲜语。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#62](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#62)]
 [!code-vb[Trin_WordBookmark#62](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#62)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageIDOther">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageIDOther { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageIDOther" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.LanguageIDOther" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的语言。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这是在 Microsoft Office Word 的从右到左语言版本中创建的文档中, 返回或设置拉丁文本语言的建议方法。  
  
   
  
## Examples  
 下面的代码示例向第<xref:Microsoft.Office.Tools.Word.Bookmark>一个段落添加一个控件, 并将<xref:Microsoft.Office.Tools.Word.Bookmark.LanguageIDOther%2A>属性设置为法语。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#63](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#63)]
 [!code-vb[Trin_WordBookmark#63](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#63)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ListFormat ListFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ListFormat ListFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ListFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ListFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.ListFormat" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的所有列表格式设置特征。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ListFormat" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的所有列表格式设置特征。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例向第<xref:Microsoft.Office.Tools.Word.Bookmark>一个段落添加一个控件, 并将默认的项目符号列表格式应用于该书签。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#64](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#64)]
 [!code-vb[Trin_WordBookmark#64](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#64)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListParagraphs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ListParagraphs ListParagraphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ListParagraphs ListParagraphs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ListParagraphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ListParagraphs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.ListParagraphs" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有编号段落。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ListParagraphs" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有编号段落。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例向第<xref:Microsoft.Office.Tools.Word.Bookmark>一个段落添加一个控件, 并将默认的项目符号列表格式应用于该书签。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#64](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#64)]
 [!code-vb[Trin_WordBookmark#64](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#64)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListStyle">
      <MemberSignature Language="C#" Value="public object ListStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ListStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ListStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的项目符号列表或编号列表的格式的样式。</summary>
        <value>一个对象，表示用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的项目符号列表或编号列表的格式的样式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.CoAuthLocks Locks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.CoAuthLocks Locks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Locks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.CoAuthLocks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的共同创作锁。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的共同创作锁。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性仅可用于启用共同创作的文档。 如果你尝试在未启用共同创作的文档上访问此属性, 你将收到<xref:System.Runtime.InteropServices.COMException>。  
  
> [!NOTE]
>  此方法显示在面向的[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]Word 2007 项目的 IntelliSense 中。 但是, 不能在 Word 2007 项目中使用此属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">包含书签的文档中未启用共同创作。</exception>
        <exception cref="T:System.MissingMemberException">在 Word 2007 项目中使用此属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="LookupNameProperties">
      <MemberSignature Language="C#" Value="public void LookupNameProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LookupNameProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.LookupNameProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在全局通讯簿列表中查找一个姓名并显示“属性”对话框，其中包含 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的指定姓名的有关信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果此方法找到多个匹配项, 则会显示 "**检查名称**" 对话框。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyEnclosure">
      <MemberSignature Language="C#" Value="public void ModifyEnclosure (ref object Style, ref object Symbol, ref object EnclosedText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyEnclosure(object&amp; Style, object&amp; Symbol, object&amp; EnclosedText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.ModifyEnclosure(System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Style" Type="System.Object" RefType="ref" />
        <Parameter Name="Symbol" Type="System.Object" RefType="ref" />
        <Parameter Name="EnclosedText" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Style">包围符号的样式。 可以是任何 <see cref="T:Microsoft.Office.Interop.Word.WdEncloseStyle" /> 常数。</param>
        <param name="Symbol">包围 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的符号。 可以是任何 <see cref="T:Microsoft.Office.Interop.Word.WdEnclosureType" /> 常数。</param>
        <param name="EnclosedText">要包围的字符。 如果包含此参数，则 Microsoft Office Word 用包围的字符替换 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。 如果不指定要包围的文本，则 Microsoft Office Word 包围 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有文本。</param>
        <summary>在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中添加、修改或移除指定字符周围的包围符号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例向第<xref:Microsoft.Office.Tools.Word.Bookmark>一个段落添加一个控件, 并将第三个字符括在一个圆中。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#65](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#65)]
 [!code-vb[Trin_WordBookmark#65](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#65)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public int Move (ref object unit, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Move(object&amp; unit, object&amp; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Move(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Object" RefType="ref" />
        <Parameter Name="count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="unit">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEnd">
      <MemberSignature Language="C#" Value="public int MoveEnd (ref object unit, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEnd(object&amp; unit, object&amp; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveEnd(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Object" RefType="ref" />
        <Parameter Name="count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="unit">移动结束字符位置所依据的单位。</param>
        <param name="count">要移动的单元的数量。 如果此数字为正数，则结束字符位置将在文档中向前移动。 如果此数字为负数，则结束字符位置将向后移动。 如果结束位置超过起始位置，则范围将折叠，并且两个字符位置将一起移动。 默认值为 1。</param>
        <summary>移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束字符位置。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件实际被移动的单位数，或者，如果移动不成功，则该控件返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 并在消息框中显示书签的最后一个单词。 然后, 该代码调用<xref:Microsoft.Office.Tools.Word.Bookmark.MoveEnd%2A>方法, 并在新的消息框中显示书签的最后一个单词。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#66](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#66)]
 [!code-vb[Trin_WordBookmark#66](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#66)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndUntil">
      <MemberSignature Language="C#" Value="public int MoveEndUntil (ref object cset, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndUntil(object&amp; cset, object&amp; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveEndUntil(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cset" Type="System.Object" RefType="ref" />
        <Parameter Name="count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cset">一个或多个字符。 此参数区分大小写。</param>
        <param name="count">要将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移动的最大字符数。 可以是一个数字，也可以是 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdBackward" /> 常数。 如果 <c>Count</c> 是正数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将在文档中向前移动。 如果是负数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将向后移动。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" />。</param>
        <summary>移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束位置，直到在文档中找到任意指定字符。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束位置被移动的字符数。 如果 <paramref name="Count" /> 大于 0（零），则此方法返回被移动的字符数加 1。 如果 <paramref name="Count" /> 小于 0（零），则此方法返回被移动的字符数减 1。 如果未找到 <paramref name="Cset" /> 字符，则不会更改 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，并且该方法返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在文档中向前移动, <xref:Microsoft.Office.Tools.Word.Bookmark>则展开控件。  
  
 如果结束位置将向后移动到原始起始位置之前的某个点, 则启动位置将设置为新的结束位置。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将<xref:Microsoft.Office.Tools.Word.Bookmark>另一个控件添加到第一个书签中的第三个单词。 然后, 代码将移动第二个书签的范围, 直到它找到字符 k。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#67](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#67)]
 [!code-vb[Trin_WordBookmark#67](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#67)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndWhile">
      <MemberSignature Language="C#" Value="public int MoveEndWhile (ref object cset, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndWhile(object&amp; cset, object&amp; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveEndWhile(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cset" Type="System.Object" RefType="ref" />
        <Parameter Name="count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cset">一个或多个字符。 此参数区分大小写。</param>
        <param name="count">要将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移动的最大字符数。 可以是一个数字，也可以是 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdBackward" /> 常数。 如果 <c>Count</c> 是正数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将在文档中向前移动。 如果是负数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将向后移动。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" />。</param>
        <summary>只要在文档中找到任意指定字符，就移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束字符位置。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束位置被移动的字符数。 如果未找到 <paramref name="Cset" /> 字符，则不会更改 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，并且该方法返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果找到中`Cset`的任意字符, 则移动<xref:Microsoft.Office.Tools.Word.Bookmark>控件的结束位置。  
  
 如果结束位置将向后移动到原始起始位置之前的某个点, 则启动位置将设置为新的结束位置。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将<xref:Microsoft.Office.Tools.Word.Bookmark>另一个控件添加到第一个书签中的第三个单词。 然后, 代码将移动第二个书签的范围, 同时它可以找到字符 b、o、o、k、m、a、r 或 k。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#68](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#68)]
 [!code-vb[Trin_WordBookmark#68](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#68)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStart">
      <MemberSignature Language="C#" Value="public int MoveStart (ref object unit, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStart(object&amp; unit, object&amp; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveStart(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Object" RefType="ref" />
        <Parameter Name="count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="unit"><see cref="T:Microsoft.Office.Interop.Word.WdUnits" />。 要移动指定范围或所选内容的起始位置所依据的单位。</param>
        <param name="count">要将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移动的最大单位数。 如果 <c>Count</c> 是正数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置将在文档中向前移动。 如果是负数，起始位置将向后移动。 如果将起始位置向前移动到超出结束位置的某个位置，将折叠 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，并将一起移动起始位置和结束位置。 默认值为 1。</param>
        <summary>移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置实际被移动的单位数，或者，如果移动不成功，则该控件返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后移动书签的起始位置。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#69](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#69)]
 [!code-vb[Trin_WordBookmark#69](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#69)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStartUntil">
      <MemberSignature Language="C#" Value="public int MoveStartUntil (ref object cset, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStartUntil(object&amp; cset, object&amp; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveStartUntil(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cset" Type="System.Object" RefType="ref" />
        <Parameter Name="count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cset">一个或多个字符。 此参数区分大小写。</param>
        <param name="count">要将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移动的最大字符数。 可以是一个数字，也可以是 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdBackward" /> 常数。 如果 <c>Count</c> 是正数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将在文档中向前移动。 如果是负数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将向后移动。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" />。</param>
        <summary>移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置，直到在文档中找到指定字符之一。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置被移动的字符数。 如果 <paramref name="Count" /> 大于 0（零），则此方法返回被移动的字符数加 1。 如果 <paramref name="Count" /> 小于 0（零），则此方法返回被移动的字符数减 1。 如果未找到 <paramref name="Cset" /> 字符，则不会更改 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，并且该方法返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在文档中向后移动, <xref:Microsoft.Office.Tools.Word.Bookmark>将展开控件。  
  
 如果开始位置向前移动到超出结束位置的某个点, 则将<xref:Microsoft.Office.Tools.Word.Bookmark>折叠控件, 并将开始位置和结束位置一起移动。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后移动书签的范围, 直到找到空格。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#70](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#70)]
 [!code-vb[Trin_WordBookmark#70](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#70)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStartWhile">
      <MemberSignature Language="C#" Value="public int MoveStartWhile (ref object cset, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStartWhile(object&amp; cset, object&amp; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveStartWhile(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cset" Type="System.Object" RefType="ref" />
        <Parameter Name="count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cset">一个或多个字符。 此参数区分大小写。</param>
        <param name="count">要将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移动的最大字符数。 可以是一个数字，也可以是 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdBackward" /> 常数。 如果 <c>Count</c> 是正数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将在文档中向前移动。 如果是负数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将向后移动。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" />。</param>
        <summary>只要在文档中找到任意指定字符，就移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置被移动的字符数。 如果未找到 <paramref name="Cset" /> 字符，则不会更改 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，并且该方法返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果找到中`Cset`的任意字符, 则移动<xref:Microsoft.Office.Tools.Word.Bookmark>控件的起始位置。  
  
 如果开始位置向前移动到超出原始结束位置的位置, 则结束位置将设置为新的起始位置。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后在可以查找字符 T、h、i 或 s 时移动书签的范围。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#71](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#71)]
 [!code-vb[Trin_WordBookmark#71](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#71)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveUntil">
      <MemberSignature Language="C#" Value="public int MoveUntil (ref object cset, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveUntil(object&amp; cset, object&amp; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveUntil(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cset" Type="System.Object" RefType="ref" />
        <Parameter Name="count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cset">一个或多个字符。 如果在 <c>Count</c> 值过期之前找到 <c>Cset</c> 中的任何字符，则 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将作为插入点定位到紧靠该字符之前。 此参数区分大小写。</param>
        <param name="count">要将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移动的最大字符数。 可以是一个数字，也可以是 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdBackward" /> 常数。 如果 <c>Count</c> 是正数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将在文档中从结束位置开始向前移动。 如果是负数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将从起始位置开始向后移动。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" />。</param>
        <summary>移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，直到在文档中找到指定字符之一。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件被移动的字符数。 如果 <paramref name="Count" /> 大于 0（零），则此方法返回被移动的字符数加 1。 如果 <paramref name="Count" /> 小于 0（零），则此方法返回被移动的字符数减 1。 如果未找到 <paramref name="Cset" /> 字符，则不会更改 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，并且该方法返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark>折叠为长度为零的书签。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将<xref:Microsoft.Office.Tools.Word.Bookmark>另一个控件添加到第一个书签中的第三个单词。 然后, 代码将移动第二个书签的范围, 同时找到空格。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#72](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#72)]
 [!code-vb[Trin_WordBookmark#72](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#72)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveWhile">
      <MemberSignature Language="C#" Value="public int MoveWhile (ref object cset, ref object count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveWhile(object&amp; cset, object&amp; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.MoveWhile(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cset" Type="System.Object" RefType="ref" />
        <Parameter Name="count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="cset">一个或多个字符。 此参数区分大小写。</param>
        <param name="count">要将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件移动的最大字符数。 可以是一个数字，也可以是 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdBackward" /> 常数。 如果 <c>Count</c> 是正数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将在文档中从结束位置开始向前移动。 如果是负数，<see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件将从起始位置开始向后移动。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdForward" />。</param>
        <summary>只要在文档中找到任意指定字符，就移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件被移动的字符数。 如果未找到 <paramref name="Cset" /> 字符，则不会更改 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件，并且该方法返回 0（零）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当找到中`Cset`的任意字符时<xref:Microsoft.Office.Tools.Word.Bookmark> , 控件将被移动。 <xref:Microsoft.Office.Tools.Word.Bookmark>折叠为长度为零的书签。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将<xref:Microsoft.Office.Tools.Word.Bookmark>另一个控件添加到第一个书签中的第三个单词。 然后, 该代码折叠并移动第二个书签, 同时查找字符 b、o、o 或 k。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#73](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#73)]
 [!code-vb[Trin_WordBookmark#73](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#73)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的名称。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后在消息框中显示书签的名称。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#74](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#74)]
 [!code-vb[Trin_WordBookmark#74](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#74)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Next (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range Next(object&amp; Unit, object&amp; Count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Next(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">计数所依据的单位的类型。 可以是任何 <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> 常数。</param>
        <param name="Count">要向前移动的单位数。 默认值为一。</param>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象表示相对于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的指定单位。</summary>
        <returns>一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示相对于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的指定单位。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 将其他文本插入书签后面, 然后在消息框中显示书签后面的下一个单词。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#75](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#75)]
 [!code-vb[Trin_WordBookmark#75](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextStoryRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range NextStoryRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range NextStoryRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.NextStoryRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象引用下一篇文章，如下表所示。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，引用下一篇文章，如下表所示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
|故事类型|<xref:Microsoft.Office.Tools.Word.Bookmark.NextStoryRange%2A>方法返回的项|  
|----------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:Microsoft.Office.Interop.Word.WdStoryType.wdMainTextStory>、<xref:Microsoft.Office.Interop.Word.WdStoryType.wdFootnotesStory>、<xref:Microsoft.Office.Interop.Word.WdStoryType.wdEndnotesStory> 和 <xref:Microsoft.Office.Interop.Word.WdStoryType.wdCommentsStory>|始终返回 `null`。|  
|<xref:Microsoft.Office.Interop.Word.WdStoryType.wdTextFrameStory>|下一组链接文本框的故事。|  
|<xref:Microsoft.Office.Interop.Word.WdStoryType.wdEvenPagesHeaderStory>, <xref:Microsoft.Office.Interop.Word.WdStoryType.wdPrimaryHeaderStory>, <xref:Microsoft.Office.Interop.Word.WdStoryType.wdEvenPagesFooterStory>, <xref:Microsoft.Office.Interop.Word.WdStoryType.wdPrimaryFooterStory>, <xref:Microsoft.Office.Interop.Word.WdStoryType.wdFirstPageHeaderStory>, <xref:Microsoft.Office.Interop.Word.WdStoryType.wdFirstPageFooterStory>|下一节中的相同类型的文章。|  
  
   
  
## Examples  
 下面的代码示例向文档中添加了**一个下一页**节分隔符, 然后将一个<xref:Microsoft.Office.Tools.Word.Bookmark>带有文本的控件添加到第1部分的偶数页标头。 然后, 该代码<xref:Microsoft.Office.Tools.Word.Bookmark.NextStoryRange%2A>使用将文本添加到第2部分的标头。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#76](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#76)]
 [!code-vb[Trin_WordBookmark#76](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#76)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoProofing">
      <MemberSignature Language="C#" Value="public int NoProofing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NoProofing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.NoProofing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示拼写和语法检查器是否忽略 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本。</summary>
        <value>如果拼写和语法检查器不忽略 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本，则为 0；如果拼写和语法检查器忽略 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本，则为 1；如果拼写和语法检查器仅忽略 <see cref="F:Microsoft.Office.Interop.Word.WdConstants.wdUndefined" /> 控件中的某些文本，则为 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例向第<xref:Microsoft.Office.Tools.Word.Bookmark>一个段落中添加了一个具有拼写错误文本的控件<xref:Microsoft.Office.Tools.Word.Bookmark.NoProofing%2A> , 并将该书签`true`的属性设置为。 如果对文档进行拼写错误检查, 则忽略书签中拼写错误的文本。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#77](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#77)]
 [!code-vb[Trin_WordBookmark#77](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#77)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OMaths">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.OMaths OMaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.OMaths OMaths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.OMaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.OMaths</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中包含的公式。</summary>
        <value>一个包含 <see cref="T:Microsoft.Office.Interop.Word.OMaths" /> 中的公式的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdTextOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdTextOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdTextOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在启用“文本方向”功能时，获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本方向。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.WdTextOrientation" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 上面列出的某些常量可能不可用, 具体取决于语言支持 (美国美式英语）。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 并将书签文本的方向设置为<xref:Microsoft.Office.Interop.Word.WdTextOrientation.wdTextOrientationVerticalFarEast>。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#78](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#78)]
 [!code-vb[Trin_WordBookmark#78](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#78)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.PageSetup PageSetup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.PageSetup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与该 <see cref="T:Microsoft.Office.Interop.Word.PageSetup" /> 控件范围关联的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</summary>
        <value>与该 <see cref="T:Microsoft.Office.Interop.Word.PageSetup" /> 控件范围关联的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 并在出现书签的部分设置一个三英寸的上边距。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#79](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#79)]
 [!code-vb[Trin_WordBookmark#79](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#79)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ParagraphFormat ParagraphFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ParagraphFormat ParagraphFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ParagraphFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ParagraphFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:Microsoft.Office.Interop.Word.ParagraphFormat" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的段落设置。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ParagraphFormat" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的段落设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 并将该书签的段落格式设置为1英寸<xref:Microsoft.Office.Interop.Word._ParagraphFormat.SpaceBefore%2A>。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#80](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#80)]
 [!code-vb[Trin_WordBookmark#80](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#80)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraphs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Paragraphs Paragraphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Paragraphs Paragraphs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Paragraphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Paragraphs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Paragraphs" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有段落。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Paragraphs" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有段落。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 并将段落更改为文本的两行间距。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#81](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#81)]
 [!code-vb[Trin_WordBookmark#81](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#81)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphStyle">
      <MemberSignature Language="C#" Value="public object ParagraphStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ParagraphStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ParagraphStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的段落格式的样式。</summary>
        <value>一个对象，表示用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中段落格式的样式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的父对象。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的父对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 并在消息框中显示书签的父级。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#82](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#82)]
 [!code-vb[Trin_WordBookmark#82](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#82)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ContentControl ParentContentControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ContentControl ParentContentControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ParentContentControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ContentControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 的父内容控件。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ContentControl" />，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 的父内容控件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Paste" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将剪贴板的内容插入 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>该控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAndFormat">
      <MemberSignature Language="C#" Value="public void PasteAndFormat (Microsoft.Office.Interop.Word.WdRecoveryType Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAndFormat(valuetype Microsoft.Office.Interop.Word.WdRecoveryType Type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.PasteAndFormat(Microsoft.Office.Interop.Word.WdRecoveryType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Word.WdRecoveryType" />
      </Parameters>
      <Docs>
        <param name="Type"><see cref="T:Microsoft.Office.Interop.Word.WdRecoveryType" />。 在粘贴选择的表单元格时要使用的格式设置类型。</param>
        <summary>将选择的表单元格粘贴到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中，并按指定要求设置这些表单元格的格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>该控件。  
  
   
  
## Examples  
 下面的代码示例将一个 Microsoft Excel 图表粘贴到<xref:Microsoft.Office.Tools.Word.Bookmark>控件中。 此示例要求剪贴板包含 Excel 图表。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#83](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#83)]
 [!code-vb[Trin_WordBookmark#83](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#83)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAppendTable">
      <MemberSignature Language="C#" Value="public void PasteAppendTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAppendTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.PasteAppendTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>通过将粘贴的行插入选择的行之间来将粘贴的单元格合并到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的现有表中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不覆盖任何单元。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAsNestedTable">
      <MemberSignature Language="C#" Value="public void PasteAsNestedTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAsNestedTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.PasteAsNestedTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将一个或一组单元格作为嵌套表粘贴到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅当剪贴板<xref:Microsoft.Office.Tools.Word.Bookmark.PasteAsNestedTable%2A>包含单元或单元组<xref:Microsoft.Office.Tools.Word.Bookmark> , 且控件包含当前文档中的一个或一组单元时, 才可以使用。  
  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>该控件。  
  
   
  
## Examples  
 下面的代码示例将一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档中的表, 然后将该表作为嵌套表粘贴到第三个单元格。 然后, 该代码将选择书签中的下一个表。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#112](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#112)]
 [!code-vb[Trin_WordBookmark#112](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#112)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteExcelTable">
      <MemberSignature Language="C#" Value="public void PasteExcelTable (bool LinkedToExcel, bool WordFormatting, bool RTF);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteExcelTable(bool LinkedToExcel, bool WordFormatting, bool RTF) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.PasteExcelTable(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LinkedToExcel" Type="System.Boolean" />
        <Parameter Name="WordFormatting" Type="System.Boolean" />
        <Parameter Name="RTF" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="LinkedToExcel">为 <see langword="true" />，则将粘贴的表链接到原始 Excel 文件，以便在 Microsoft Office Word 中反映对 Excel 文件所做的更改。</param>
        <param name="WordFormatting">如果为 <see langword="true" />，则使用 Word 文档中的格式设置来设置表的格式。 如果为 <see langword="false" />，则根据原始 Excel 文件设置表的格式。</param>
        <param name="RTF">如果为 <see langword="true" />，则以 RTF 格式粘贴 Excel 表。 如果为 <see langword="false" />，则以 HTML 格式粘贴 Excel 表。</param>
        <summary>将一个 Microsoft Office Excel 表粘贴到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中，并对其进行格式设置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>该控件。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将 Excel 表粘贴到<xref:Microsoft.Office.Tools.Word.Bookmark>控件中。 参数指定粘贴的表链接到 Excel 文件, 保留原始 Excel 格式, 并粘贴为 RTF。 此示例要求剪贴板包含一个 Excel 表。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#84](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#84)]
 [!code-vb[Trin_WordBookmark#84](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#84)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public void PasteSpecial (ref object IconIndex, ref object Link, ref object Placement, ref object DisplayAsIcon, ref object DataType, ref object IconFileName, ref object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteSpecial(object&amp; IconIndex, object&amp; Link, object&amp; Placement, object&amp; DisplayAsIcon, object&amp; DataType, object&amp; IconFileName, object&amp; IconLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.PasteSpecial(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="IconIndex" Type="System.Object" RefType="ref" />
        <Parameter Name="Link" Type="System.Object" RefType="ref" />
        <Parameter Name="Placement" Type="System.Object" RefType="ref" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" RefType="ref" />
        <Parameter Name="DataType" Type="System.Object" RefType="ref" />
        <Parameter Name="IconFileName" Type="System.Object" RefType="ref" />
        <Parameter Name="IconLabel" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="IconIndex">如果 <c>DisplayAsIcon</c> 为 <see langword="true" />，则此参数为一个数字，该数字对应于你希望在程序文件中使用的由 <c>IconFilename</c> 指定的图标。 图标显示在“更改图标”对话框中：0（零）对应于第一个图标，1 对应于第二个图标，依此类推。 如果省略此参数，则使用第一个（默认）图标。</param>
        <param name="Link">为 <see langword="true" />，则创建一个到剪贴板内容的源文件的链接。 默认值为 <see langword="false" />。</param>
        <param name="Placement">可以为以下 <see cref="T:Microsoft.Office.Interop.Word.WdOLEPlacement" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Word.WdOLEPlacement.wdFloatOverText" /> 或 <see cref="F:Microsoft.Office.Interop.Word.WdOLEPlacement.wdInLine" />。 默认值为 <see cref="F:Microsoft.Office.Interop.Word.WdOLEPlacement.wdInLine" />。</param>
        <param name="DisplayAsIcon">为 <see langword="true" />，则以图标形式显示链接。 默认值为 <see langword="false" />。</param>
        <param name="DataType">在将剪贴板内容插入文档时，剪贴板内容的格式。 <see cref="T:Microsoft.Office.Interop.Word.WdPasteDataType" />。</param>
        <param name="IconFileName">如果 <c>DisplayAsIcon</c> 为 <see langword="true" />，则此参数为在其中存储要显示的图标的文件的路径和文件名。</param>
        <param name="IconLabel">如果 <c>DisplayAsIcon</c> 为 <see langword="true" />，则此参数为显示在图标下面的文本。</param>
        <summary>将剪贴板的内容插入 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 与方法不同, 您可以<xref:Microsoft.Office.Tools.Word.Bookmark.PasteSpecial%2A>使用来控制粘贴信息的格式, 并 (可选) 建立指向源文件的链接 (例如, Microsoft Office Excel 工作表)。 <xref:Microsoft.Office.Tools.Word.Bookmark.Paste%2A>  
  
 调用此方法可能会删除<xref:Microsoft.Office.Tools.Word.Bookmark>该控件。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将剪贴板内容作为无格式<xref:Microsoft.Office.Tools.Word.Bookmark>文本插入到控件中。 此示例假设剪贴板包含某些文本。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#85](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#85)]
 [!code-vb[Trin_WordBookmark#85](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#85)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhoneticGuide">
      <MemberSignature Language="C#" Value="public void PhoneticGuide (string Text, Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType Alignment, int Raise = 0, int FontSize = 0, string FontName = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PhoneticGuide(string Text, valuetype Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType Alignment, int32 Raise, int32 FontSize, string FontName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.PhoneticGuide(System.String,Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType,System.Int32,System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Alignment" Type="Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType" />
        <Parameter Name="Raise" Type="System.Int32" />
        <Parameter Name="FontSize" Type="System.Int32" />
        <Parameter Name="FontName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">要添加的拼音文本。</param>
        <param name="Alignment"><see cref="T:Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType" />。 添加的拼音文本的对齐方式。</param>
        <param name="Raise">从指定 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的顶部到拼音文本的顶部的距离（以磅为单位）。 如果未指定任何值，则 Microsoft Office Word 将拼音文本自动设置为位于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件之上的最佳距离上。</param>
        <param name="FontSize">要用于拼音文本的字体大小。 如果未指定任何值，则 Word 使用比 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本小 50% 的字体大小。</param>
        <param name="FontName">要用于拼音文本的字体的名称。 如果未指定任何值，则 Word 使用与 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本相同的字体。</param>
        <summary>将拼音指南添加到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将拼音指南添加到书签文本 "tres 别致"。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#86](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#86)]
 [!code-vb[Trin_WordBookmark#86](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#86)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Previous (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range Previous(object&amp; Unit, object&amp; Count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Previous(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object" RefType="ref" />
        <Parameter Name="Count" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit"><see cref="T:Microsoft.Office.Interop.Word.WdUnits" />。</param>
        <param name="Count">要向后移动的单位数。 默认值为 1。</param>
        <summary>获取一个相对于 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 控件的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</summary>
        <returns>一个相对于 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 控件的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例向第一个段落添加文本, 然后将一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到第二个单词。 然后, 该代码选择书签前面的单词。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#87](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#87)]
 [!code-vb[Trin_WordBookmark#87](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#87)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousBookmarkID">
      <MemberSignature Language="C#" Value="public int PreviousBookmarkID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreviousBookmarkID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.PreviousBookmarkID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值表示从与 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件相同的位置或之前的位置开始的最后一个书签的编号。</summary>
        <value>从与 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件相同的位置或之前的位置开始的最后一个书签的编号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:Microsoft.Office.Tools.Word.Bookmark.PreviousBookmarkID%2A>没有相应的书签, 属性将返回 0 (零)。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档, 并<xref:Microsoft.Office.Tools.Word.Bookmark.PreviousBookmarkID%2A>使用属性在消息框中显示书签的名称。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#88](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#88)]
 [!code-vb[Trin_WordBookmark#88](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#88)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Range { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range Range" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Range" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，该对象表示包含在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文档部分。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Range" /> 对象，表示包含在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文档部分。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将书签中的文本设置为粗体。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#89](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#89)]
 [!code-vb[Trin_WordBookmark#89](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#89)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadabilityStatistics">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ReadabilityStatistics ReadabilityStatistics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ReadabilityStatistics ReadabilityStatistics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ReadabilityStatistics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ReadabilityStatistics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.ReadabilityStatistics" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的可读性统计信息。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ReadabilityStatistics" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的可读性统计信息。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后使用<xref:Microsoft.Office.Tools.Word.Bookmark.ReadabilityStatistics%2A>书签的属性在消息框中显示书签包含的单词数。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#90](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#90)]
 [!code-vb[Trin_WordBookmark#90](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#90)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Relocate">
      <MemberSignature Language="C#" Value="public void Relocate (int Direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Relocate(int32 Direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Relocate(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Direction"><see cref="T:Microsoft.Office.Interop.Word.WdRelocate" />。 移动的方向。</param>
        <summary>在大纲视图中，将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的段落移动到下一个可见段落之后或上一个可见段落之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅当正文文本在大纲视图中折叠或作为<xref:Microsoft.Office.Tools.Word.Bookmark>控件的一部分时, 正文文本才能带有标题。  
  
   
  
## Examples  
 下面的代码示例向第一个段落中添加文本, 然后<xref:Microsoft.Office.Tools.Word.Bookmark>将一个具有文本的控件添加到第二个段落。 然后, 该代码将第二个书签重定位到第一个段落。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#91](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#91)]
 [!code-vb[Trin_WordBookmark#91](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#91)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Revisions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Revisions Revisions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Revisions Revisions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Revisions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Revisions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Revisions" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的修订。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Revisions" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的修订。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 打开修订跟踪, 然后修改文本。 然后, 它将在一个消息框中显示修订的数目。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#92](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#92)]
 [!code-vb[Trin_WordBookmark#92](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#92)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Rows Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Rows Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Rows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Rows" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有表行。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Rows" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有表行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例向文档中添加一个三列三行的表, 向该表添加一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件, 然后更改该书签中第一行的高度。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#93](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#93)]
 [!code-vb[Trin_WordBookmark#93](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#93)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Scripts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Core.Scripts" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中 HTML 脚本的集合。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Core.Scripts" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中 HTML 脚本的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例向第一个段落添加一个脚本, 然后将一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到第一个段落。 然后, 该代码将在消息框中显示书签所包含脚本的数量。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#94](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#94)]
 [!code-vb[Trin_WordBookmark#94](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#94)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sections">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Sections Sections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Sections Sections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Sections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Sections</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Sections" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的节。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Sections" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的节。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后在书签的第四个单词之前插入**下一页分**节符。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#50](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#50)]
 [!code-vb[Trin_WordBookmark#50](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#50)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Select" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>选择 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法后, 可以使用<xref:Microsoft.Office.Interop.Word._Application.Selection%2A>属性来处理选定<xref:Microsoft.Office.Tools.Word.Bookmark>的控件。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后创建一个<xref:Microsoft.Office.Tools.Word.Bookmark.BeforeDoubleClick>事件处理程序。 双击<xref:Microsoft.Office.Tools.Word.Bookmark>控件时, 将选择书签中的文本。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#2)]
 [!code-vb[Trin_WordBookmark#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Tools.Word.SelectionEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Word.SelectionEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Word.Bookmark.Selected" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.SelectionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当选择 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当选择更改<xref:Microsoft.Office.Tools.Word.Bookmark>控件时, 将引发此事件。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后创建<xref:Microsoft.Office.Tools.Word.Bookmark.Selected>一个事件处理程序。 当光标移入书签时, 将显示一个消息框。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#95](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#95)]
 [!code-vb[Trin_WordBookmark#95](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#95)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChange">
      <MemberSignature Language="C#" Value="event Microsoft.Office.Tools.Word.SelectionEventHandler SelectionChange;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Word.SelectionEventHandler SelectionChange" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Word.Bookmark.SelectionChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.SelectionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件内部的所选内容更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在<xref:Microsoft.Office.Tools.Word.Bookmark>控件中的所选内容更改时, 将引发此事件。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后创建<xref:Microsoft.Office.Tools.Word.Bookmark.SelectionChange>一个事件处理程序。 当光标移动到书签中时, 将显示一个消息框。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#96](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#96)]
 [!code-vb[Trin_WordBookmark#96](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#96)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sentences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Sentences Sentences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Sentences Sentences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Sentences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Sentences</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Sentences" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有句子。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Sentences" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有句子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后选择书签中的第一句。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#97](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#97)]
 [!code-vb[Trin_WordBookmark#97](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#97)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetListLevel">
      <MemberSignature Language="C#" Value="public void SetListLevel (short Level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetListLevel(int16 Level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.SetListLevel(System.Int16)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Level" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Level">一个指示新列表级别的数字。</param>
        <summary>设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的编号列表中的一个或多个项的列表级别。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public void SetRange (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange(int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.SetRange(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始字符位置。</param>
        <param name="end"><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的结束字符位置。</param>
        <summary>设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始字符位置和结束字符位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字符位置值从情景开头开始, 第一个值为 0 (零)。 对所有字符进行计数, 包括非打印字符。 即使未显示隐藏字符, 也会对其进行计数。  
  
 方法重新定义现有<xref:Microsoft.Office.Tools.Word.Bookmark>控件的起始位置和结束位置。 <xref:Microsoft.Office.Tools.Word.Bookmark.SetRange%2A>  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后将书签的范围设置为文档中的第一个字符。  
  
 [!code-csharp[Trin_WordBookmark#98](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#98)]
 [!code-vb[Trin_WordBookmark#98](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#98)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shading">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shading Shading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Shading Shading" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Shading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shading</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Shading" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的底纹格式设置。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Shading" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的底纹格式设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后<xref:Microsoft.Office.Interop.Word.Shading.BackgroundPatternColor%2A>将书签的设置为鲜绿色。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#99](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#99)]
 [!code-vb[Trin_WordBookmark#99](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ShapeRange ShapeRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ShapeRange ShapeRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ShapeRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ShapeRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.ShapeRange" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 控件中的所有 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ShapeRange" /> 集合，表示 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 控件中的所有 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 形状范围可以包含图形、形状、图片、OLE 对象、ActiveX 控件、文本对象和标注。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档, 然后在创建文本框时使用书签的垂直和水平位置。 然后, 它将在一个消息<xref:Microsoft.Office.Tools.Word.Bookmark.ShapeRange%2A>框中显示书签内的名称。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#100](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#100)]
 [!code-vb[Trin_WordBookmark#100](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAll">
      <MemberSignature Language="C#" Value="public bool ShowAll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAll" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.ShowAll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否显示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有非打印字符（如隐藏文本、制表符标记、空格标记和段落标记）。</summary>
        <value>如果显示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的非打印字符，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.SmartTags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (ref object ExcludeHeader, ref object FieldNumber, ref object SortFieldType, ref object SortOrder, ref object FieldNumber2, ref object SortFieldType2, ref object SortOrder2, ref object FieldNumber3, ref object SortFieldType3, ref object SortOrder3, ref object SortColumn, ref object Separator, ref object CaseSensitive, ref object BidiSort, ref object IgnoreThe, ref object IgnoreKashida, ref object IgnoreDiacritics, ref object IgnoreHe, ref object LanguageID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(object&amp; ExcludeHeader, object&amp; FieldNumber, object&amp; SortFieldType, object&amp; SortOrder, object&amp; FieldNumber2, object&amp; SortFieldType2, object&amp; SortOrder2, object&amp; FieldNumber3, object&amp; SortFieldType3, object&amp; SortOrder3, object&amp; SortColumn, object&amp; Separator, object&amp; CaseSensitive, object&amp; BidiSort, object&amp; IgnoreThe, object&amp; IgnoreKashida, object&amp; IgnoreDiacritics, object&amp; IgnoreHe, object&amp; LanguageID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.Sort(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ExcludeHeader" Type="System.Object" RefType="ref" />
        <Parameter Name="FieldNumber" Type="System.Object" RefType="ref" />
        <Parameter Name="SortFieldType" Type="System.Object" RefType="ref" />
        <Parameter Name="SortOrder" Type="System.Object" RefType="ref" />
        <Parameter Name="FieldNumber2" Type="System.Object" RefType="ref" />
        <Parameter Name="SortFieldType2" Type="System.Object" RefType="ref" />
        <Parameter Name="SortOrder2" Type="System.Object" RefType="ref" />
        <Parameter Name="FieldNumber3" Type="System.Object" RefType="ref" />
        <Parameter Name="SortFieldType3" Type="System.Object" RefType="ref" />
        <Parameter Name="SortOrder3" Type="System.Object" RefType="ref" />
        <Parameter Name="SortColumn" Type="System.Object" RefType="ref" />
        <Parameter Name="Separator" Type="System.Object" RefType="ref" />
        <Parameter Name="CaseSensitive" Type="System.Object" RefType="ref" />
        <Parameter Name="BidiSort" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreThe" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreKashida" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreDiacritics" Type="System.Object" RefType="ref" />
        <Parameter Name="IgnoreHe" Type="System.Object" RefType="ref" />
        <Parameter Name="LanguageID" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ExcludeHeader">若要从排序操作中排除第一行或段落标头，请使用 <see langword="true" />。 默认值为 <see langword="false" />。</param>
        <param name="FieldNumber">要作为排序依据的字段。 Microsoft Office Word 的排序方式为 <c>FieldNumber</c>，然后为 <c>FieldNumber2</c>，最后为 <c>FieldNumber3</c>。</param>
        <param name="SortFieldType"><c>FieldNumber</c>、<c>FieldNumber2</c> 和 <c>FieldNumber3</c> 各自的排序类型。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> 常量之一。</param>
        <param name="SortOrder">对 <c>FieldNumber</c>、<c>FieldNumber2</c> 和 <c>FieldNumber3</c> 进行排序时使用的排序顺序。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> 常量之一。</param>
        <param name="FieldNumber2">要作为排序依据的字段。 Microsoft Office Word 的排序方式为 <c>FieldNumber</c>，然后为 <c>FieldNumber2</c>，最后为 <c>FieldNumber3</c>。</param>
        <param name="SortFieldType2"><c>FieldNumber</c>、<c>FieldNumber2</c> 和 <c>FieldNumber3</c> 各自的排序类型。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> 常量之一</param>
        <param name="SortOrder2">对 <c>FieldNumber</c>、<c>FieldNumber2</c> 和 <c>FieldNumber3</c> 进行排序时使用的排序顺序。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> 常量之一。</param>
        <param name="FieldNumber3">要作为排序依据的字段。 Microsoft Office Word 的排序方式为 <c>FieldNumber</c>，然后为 <c>FieldNumber2</c>，最后为 <c>FieldNumber3</c>。</param>
        <param name="SortFieldType3"><c>FieldNumber</c>、<c>FieldNumber2</c> 和 <c>FieldNumber3</c> 各自的排序类型。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> 常量之一</param>
        <param name="SortOrder3">对 <c>FieldNumber</c>、<c>FieldNumber2</c> 和 <c>FieldNumber3</c> 进行排序时使用的排序顺序。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> 常量之一。</param>
        <param name="SortColumn">使用 <see langword="true" /> 对仅由 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件指定的列进行排序。</param>
        <param name="Separator"><see cref="T:System.Object" />。 字段分隔符的类型。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdSortSeparator" /> 常量之一。</param>
        <param name="CaseSensitive">排序时若要区分大小写，请使用 <see langword="true" />。 默认值为 <see langword="false" />。</param>
        <param name="BidiSort">若要根据从右到左的语言规则进行排序，请使用 <see langword="true" />。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <param name="IgnoreThe">为 <see langword="true" />，则在对从右向左的语言文本进行排序时忽略阿拉伯字符 <c>alef</c><c>lam</c>。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <param name="IgnoreKashida">如果对从右到左的语言的文本进行排序时，需要忽略 kashidas，请使用 <see langword="true" />。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <param name="IgnoreDiacritics">如果对从右到左的语言的文本进行排序时，需要忽略双向控制字符，请使用 <see langword="true" />。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <param name="IgnoreHe">为 <see langword="true" />，则在对从右向左的语言文本进行排序时忽略希伯来字符 <c>he</c>。 此参数可能不能用，这取决于所选或安装的语言支持（例如，美式英语）。</param>
        <param name="LanguageID">指定排序语言。 可以是 <see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> 常量之一。</param>
        <summary>对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的段落进行排序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例添加一个<xref:Microsoft.Office.Tools.Word.Bookmark>具有水果列表的控件, 然后按升序对列表进行排序。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#102](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#102)]
 [!code-vb[Trin_WordBookmark#102](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortAscending">
      <MemberSignature Language="C#" Value="public void SortAscending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortAscending() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.SortAscending" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>按照字母数字升序顺序对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的段落或表行进行排序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 第一个段落或表格行被视为标题记录, 并且不包含在排序中。 <xref:Microsoft.Office.Interop.Word.Range.Sort%2A>使用方法在排序中包含标头记录。  
  
 此方法提供了一种简化的排序形式, 适用于包含数据列的邮件合并数据源。 对于大多数排序任务, 请使用<xref:Microsoft.Office.Interop.Word.Range.Sort%2A>方法。  
  
 此方法显示 "**标头记录分隔符**" 对话框, 用户必须在该对话框中选择字段分隔符。  
  
   
  
## Examples  
 下面的代码示例将水果的列表添加到<xref:Microsoft.Office.Tools.Word.Bookmark>控件, 然后按升序对列表进行排序。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#117](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#117)]
 [!code-vb[Trin_WordBookmark#117](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#117)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDescending">
      <MemberSignature Language="C#" Value="public void SortDescending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortDescending() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.SortDescending" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>按照字母数字降序顺序对 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的段落或表行进行排序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 第一个段落或表格行被视为标题记录, 并且不包含在排序中。 <xref:Microsoft.Office.Interop.Word.Range.Sort%2A>使用方法在排序中包含标头记录。  
  
 此方法提供了一种简化的排序形式, 适用于包含数据列的邮件合并数据源。 对于大多数排序任务, 请使用<xref:Microsoft.Office.Interop.Word.Range.Sort%2A>方法。  
  
 此方法显示 "**标头记录分隔符**" 对话框, 用户必须在该对话框中选择字段分隔符。  
  
   
  
## Examples  
 下面的代码示例将水果的列表添加到<xref:Microsoft.Office.Tools.Word.Bookmark>控件, 然后按降序对该列表进行排序。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#118](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#118)]
 [!code-vb[Trin_WordBookmark#118](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#118)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortOld">
      <MemberSignature Language="C#" Value="public void SortOld (ref object ExcludeHeader, ref object FieldNumber, ref object SortFieldType, ref object SortOrder, ref object FieldNumber2, ref object SortFieldType2, ref object SortOrder2, ref object FieldNumber3, ref object SortFieldType3, ref object SortOrder3, ref object SortColumn, ref object Separator, ref object CaseSensitive, ref object LanguageID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortOld(object&amp; ExcludeHeader, object&amp; FieldNumber, object&amp; SortFieldType, object&amp; SortOrder, object&amp; FieldNumber2, object&amp; SortFieldType2, object&amp; SortOrder2, object&amp; FieldNumber3, object&amp; SortFieldType3, object&amp; SortOrder3, object&amp; SortColumn, object&amp; Separator, object&amp; CaseSensitive, object&amp; LanguageID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.SortOld(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ExcludeHeader" Type="System.Object" RefType="ref" />
        <Parameter Name="FieldNumber" Type="System.Object" RefType="ref" />
        <Parameter Name="SortFieldType" Type="System.Object" RefType="ref" />
        <Parameter Name="SortOrder" Type="System.Object" RefType="ref" />
        <Parameter Name="FieldNumber2" Type="System.Object" RefType="ref" />
        <Parameter Name="SortFieldType2" Type="System.Object" RefType="ref" />
        <Parameter Name="SortOrder2" Type="System.Object" RefType="ref" />
        <Parameter Name="FieldNumber3" Type="System.Object" RefType="ref" />
        <Parameter Name="SortFieldType3" Type="System.Object" RefType="ref" />
        <Parameter Name="SortOrder3" Type="System.Object" RefType="ref" />
        <Parameter Name="SortColumn" Type="System.Object" RefType="ref" />
        <Parameter Name="Separator" Type="System.Object" RefType="ref" />
        <Parameter Name="CaseSensitive" Type="System.Object" RefType="ref" />
        <Parameter Name="LanguageID" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ExcludeHeader">To be added.</param>
        <param name="FieldNumber">To be added.</param>
        <param name="SortFieldType">To be added.</param>
        <param name="SortOrder">To be added.</param>
        <param name="FieldNumber2">To be added.</param>
        <param name="SortFieldType2">To be added.</param>
        <param name="SortOrder2">To be added.</param>
        <param name="FieldNumber3">To be added.</param>
        <param name="SortFieldType3">To be added.</param>
        <param name="SortOrder3">To be added.</param>
        <param name="SortColumn">To be added.</param>
        <param name="Separator">To be added.</param>
        <param name="CaseSensitive">To be added.</param>
        <param name="LanguageID">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingChecked">
      <MemberSignature Language="C#" Value="public bool SpellingChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpellingChecked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.SpellingChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否已对整个 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件进行了拼写检查。</summary>
        <value>如果已对整个 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件进行了拼写检查，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要重新检查<xref:Microsoft.Office.Tools.Word.Bookmark>控件中的拼写, 请<xref:Microsoft.Office.Tools.Word.Bookmark.SpellingChecked%2A>将属性设置为。 `false`  
  
 若要检查<xref:Microsoft.Office.Tools.Word.Bookmark>控件是否包含拼写错误, 请<xref:Microsoft.Office.Tools.Word.Bookmark.SpellingErrors%2A>使用属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ProofreadingErrors SpellingErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ProofreadingErrors SpellingErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.SpellingErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ProofreadingErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.ProofreadingErrors" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中标识为拼写错误的单词。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.ProofreadingErrors" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中标识为拼写错误的单词。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后在书签中存在拼写错误时运行拼写检查器。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#103](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#103)]
 [!code-vb[Trin_WordBookmark#103](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public int Start { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Start" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Start" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始字符位置。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始字符位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark>控件具有起始位置和结束位置。 结束位置比<xref:Microsoft.Office.Tools.Word.Bookmark>控件的开头更远。  
  
 使用此属性可更改<xref:Microsoft.Office.Tools.Word.Bookmark>控件的大小。  
  
 如果将此属性设置为大于<xref:Microsoft.Office.Tools.Word.Bookmark.End%2A>属性的值, 则<xref:Microsoft.Office.Tools.Word.Bookmark.End%2A>属性将设置为与<xref:Microsoft.Office.Tools.Word.Bookmark.Start%2A>属性相同的值。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将第<xref:Microsoft.Office.Tools.Word.Bookmark>二个控件添加到第一个书签中的第三个单词。 然后, 该代码将移动第一个书签的范围, 直到它找到空格并通过更改<xref:Microsoft.Office.Tools.Word.Bookmark.Start%2A>属性来重新定义书签大小。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#70](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#70)]
 [!code-vb[Trin_WordBookmark#70](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#70)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartOf">
      <MemberSignature Language="C#" Value="public int StartOf (ref object unit, ref object extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 StartOf(object&amp; unit, object&amp; extend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.StartOf(System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Object" RefType="ref" />
        <Parameter Name="extend" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="unit"><see cref="T:Microsoft.Office.Interop.Word.WdUnits" />。 要移动 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置所依据的单位。</param>
        <param name="extend"><see cref="T:Microsoft.Office.Interop.Word.WdMovementType" />。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的起始位置移动或扩展到最近的指定文本单元的开头。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件被移动或扩展的字符数。 如果在文档中向后移动，则该方法返回一个负数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:Microsoft.Office.Tools.Word.Bookmark>控件的开头已经位于指定单元的开头, 则此方法不会移动或<xref:Microsoft.Office.Tools.Word.Bookmark>扩展控件。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例向第一个段落添加文本, 然后向第<xref:Microsoft.Office.Tools.Word.Bookmark>二个段落中添加一个包含文本的控件。 然后, 代码将书签的开头移动一个单词。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#104](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#104)]
 [!code-vb[Trin_WordBookmark#104](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoryLength">
      <MemberSignature Language="C#" Value="public int StoryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StoryLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.StoryLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文章中的字符数。</summary>
        <value>包含 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文章中的字符数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档, 然后在消息框中显示书签的文本 (如果文章长度大于 0)。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#105](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#105)]
 [!code-vb[Trin_WordBookmark#105](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoryType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdStoryType StoryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdStoryType StoryType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.StoryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdStoryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文章类型。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.WdStoryType" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 并在消息框中显示书签的 "故事类型"。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#106](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#106)]
 [!code-vb[Trin_WordBookmark#106](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public object Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的样式。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要设置此属性, 请指定样式的本地名称、整数、 <xref:Microsoft.Office.Interop.Word.WdBuiltinStyle>常量或表示样式的对象。 有关有效常量的列表, 请参阅 Microsoft Visual Basic 对象浏览器。  
  
 如果为包含多个样式的<xref:Microsoft.Office.Tools.Word.Bookmark>控件返回样式, 则仅返回第一个字符或段落样式。  
  
   
  
## Examples  
 下面的代码示例使用文档<xref:Microsoft.Office.Tools.Word.Bookmark>中的文本添加一个控件, 将该样式更改`Heading 1`为, 然后删除该书签。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#107](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#107)]
 [!code-vb[Trin_WordBookmark#107](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeTo">
      <MemberSignature Language="C#" Value="public void SubscribeTo (string Edition, ref object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubscribeTo(string Edition, object&amp; Format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.SubscribeTo(System.String,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.String" />
        <Parameter Name="Format" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Edition">To be added.</param>
        <param name="Format">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynonymInfo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.SynonymInfo SynonymInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.SynonymInfo SynonymInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.SynonymInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.SynonymInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.SynonymInfo" />，它包含来自词库的有关 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中文本的同义词、反义词或相关单词和表达的信息。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.SynonymInfo" />，包含来自词库的有关 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中文本的同义词、反义词或相关单词和表达的信息。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档, 然后在为书签中的第三个单词找到同义词时显示一个消息框。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#108](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#108)]
 [!code-vb[Trin_WordBookmark#108](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Tables Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Tables Tables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Tables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Tables" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有表。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Tables" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例向文档中添加了一个三列三行的表, 然后向该表中添加<xref:Microsoft.Office.Tools.Word.Bookmark>了一个控件。 然后, 代码更改书签内的表单元格的宽度。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#9)]
 [!code-vb[Trin_WordBookmark#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyle">
      <MemberSignature Language="C#" Value="public object TableStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.TableStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的表格式的样式。</summary>
        <value>一个对象，表示用于设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的表格式的样式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TCSCConverter">
      <MemberSignature Language="C#" Value="public void TCSCConverter (Microsoft.Office.Interop.Word.WdTCSCConverterDirection WdTCSCConverterDirection = Microsoft.Office.Interop.Word.WdTCSCConverterDirection.wdTCSCConverterDirectionAuto, bool CommonTerms = false, bool UseVariants = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TCSCConverter(valuetype Microsoft.Office.Interop.Word.WdTCSCConverterDirection WdTCSCConverterDirection, bool CommonTerms, bool UseVariants) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.TCSCConverter(Microsoft.Office.Interop.Word.WdTCSCConverterDirection,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WdTCSCConverterDirection" Type="Microsoft.Office.Interop.Word.WdTCSCConverterDirection" />
        <Parameter Name="CommonTerms" Type="System.Boolean" />
        <Parameter Name="UseVariants" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="WdTCSCConverterDirection"><see cref="T:Microsoft.Office.Interop.Word.WdTCSCConverterDirection" />。</param>
        <param name="CommonTerms">如果 Microsoft Office Word 是完整地转换常用表达式，而不是逐字符进行转换，则为 <see langword="true" />。</param>
        <param name="UseVariants">如果 Word 使用台湾、香港特别行政区和澳门特别行政区字符变量，则为 <see langword="true" />。 仅当从简体中文转换为繁体中文时才可使用。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的指定范围从繁体中文转换为简体中文，或从简体中文转换为繁体中文。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息, 请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档中的第一个段落, 然后将书签中的文本从繁体中文转换为简体中文, 反之亦然。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#110](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#110)]
 [!code-vb[Trin_WordBookmark#110](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark.Text%2A>属性返回书签的无格式纯文本。 设置此属性时, 将替换<xref:Microsoft.Office.Tools.Word.Bookmark>控件的文本。  
  
 <xref:Microsoft.Office.Tools.Word.Bookmark.Text%2A?displayProperty=fullName>设置属性不会删除书签。  
  
 设置跨多个表单元格的书签的属性将仅设置第一个单元格内的文本。<xref:Microsoft.Office.Tools.Word.Bookmark.Text%2A?displayProperty=fullName> 如果书签包含整个表和环绕文本, 则整个表都将被删除。  
  
 有关设置<xref:Microsoft.Office.Tools.Word.Bookmark.Text%2A?displayProperty=fullName>与另一个书签重叠的书签的属性的信息, 请参阅[bookmark Control](/visualstudio/vsto/bookmark-control)。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Bookmark>一个包含文本的控件, 然后<xref:Microsoft.Office.Tools.Word.Bookmark.ComputeStatistics%2A>使用方法显示书签中的总字符数。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#15](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#15)]
 [!code-vb[Trin_WordBookmark#15](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRetrievalMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.TextRetrievalMode TextRetrievalMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.TextRetrievalMode TextRetrievalMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.TextRetrievalMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.TextRetrievalMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:Microsoft.Office.Interop.Word.TextRetrievalMode" /> 对象，该对象控制从 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件检索文本的方式。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.TextRetrievalMode" /> 对象，控制从 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件检索文本的方式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 隐藏书签中的第三个单词, 并<xref:Microsoft.Office.Tools.Word.Bookmark.TextRetrievalMode%2A>将设置为不包含隐藏的文本。 然后, 它将在一个消息框中显示书签的文本。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#111](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#111)]
 [!code-vb[Trin_WordBookmark#111](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#111)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Tables TopLevelTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Tables TopLevelTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.TopLevelTables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Tables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Tables" /> 集合，该集合表示位于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件范围中最外层嵌套级别的表。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Tables" /> 集合，表示位于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件范围中最外层嵌套级别的表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回一个集合, 该集合仅包含<xref:Microsoft.Office.Tools.Word.Bookmark>控件范围内上下文内最外层嵌套级别的表。 这些表可能不在整个嵌套表集内的最外面的嵌套级别。  
  
   
  
## Examples  
 下面的代码示例将一个<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档中的表, 然后将该表作为嵌套表粘贴到第三个单元格。 然后, 该代码将选择书签中的下一个表。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#112](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#112)]
 [!code-vb[Trin_WordBookmark#112](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#112)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwoLinesInOne">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdTwoLinesInOneType TwoLinesInOne { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdTwoLinesInOneType TwoLinesInOne" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.TwoLinesInOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdTwoLinesInOneType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 Microsoft Office Word 是否将两行文本设置为一行，并指定包围 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的文本的字符（如果有）。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.WdTwoLinesInOneType" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将<xref:Microsoft.Office.Interop.Word.Range.TwoLinesInOne%2A>属性设置<xref:Microsoft.Office.Interop.Word.WdTwoLinesInOneType.wdTwoLinesInOneNoBrackets>为, 则在其中设置两行文本, 而不将文本括在任何字符中。 将属性设置为<xref:Microsoft.Office.Interop.Word.WdTwoLinesInOneType.wdTwoLinesInOneNone>可以将一行合并文本还原为两个单独的行。 <xref:Microsoft.Office.Tools.Word.Bookmark.TwoLinesInOne%2A>  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后将<xref:Microsoft.Office.Tools.Word.Bookmark.TwoLinesInOne%2A>属性设置<xref:Microsoft.Office.Interop.Word.WdTwoLinesInOneType.wdTwoLinesInOneCurlyBrackets>为。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#113](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#113)]
 [!code-vb[Trin_WordBookmark#113](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#113)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Underline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdUnderline Underline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdUnderline Underline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Underline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdUnderline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置应用于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的文本的下划线类型。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.WdUnderline" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到文档中, 然后将书签中的第三个单词加下划线。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#114](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#114)]
 [!code-vb[Trin_WordBookmark#114](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#114)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updates">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.CoAuthUpdates Updates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.CoAuthUpdates Updates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Updates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.CoAuthUpdates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的所有可用共同创作更新。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中的可用共同创作更新。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性仅可用于启用共同创作的文档。 如果你尝试在未启用共同创作的文档上访问此属性, 你将收到<xref:System.Runtime.InteropServices.COMException>。  
  
> [!NOTE]
>  此方法显示在面向的[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]Word 2007 项目的 IntelliSense 中。 但是, 不能在 Word 2007 项目中使用此属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">包含书签的文档中未启用共同创作。</exception>
        <exception cref="T:System.MissingMemberException">在 Word 2007 项目中使用此属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="WholeStory">
      <MemberSignature Language="C#" Value="public void WholeStory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WholeStory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.Bookmark.WholeStory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>扩展 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件以包含整个文章。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将文本添加到文档, 然后添加一个<xref:Microsoft.Office.Tools.Word.Bookmark>带有文本的。 <xref:Microsoft.Office.Tools.Word.Bookmark.WholeStory%2A>使用方法, 它将书签展开为包含整个文档。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#115](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#115)]
 [!code-vb[Trin_WordBookmark#115](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WordOpenXML">
      <MemberSignature Language="C#" Value="public string WordOpenXML { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WordOpenXML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.WordOpenXML" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中具有 Word Open XML 格式的内容。</summary>
        <value>一个字符串，其中包含 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 中具有 Word Open XML 格式的内容。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Words">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Words Words { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Words Words" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.Words" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Words</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.Words" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有单词。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.Words" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有单词。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.Bookmark>控件中的标点符号和段落标记包含<xref:Microsoft.Office.Interop.Word.Words>在集合中。  
  
   
  
## Examples  
 下面的代码示例将包含<xref:Microsoft.Office.Tools.Word.Bookmark>文本的控件添加到第一个段落, 然后将书签的字体颜色更改为蓝色。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#33](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#33)]
 [!code-vb[Trin_WordBookmark#33](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.Bookmark_XMLType XML { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Word.Bookmark_XMLType XML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.XML" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.Bookmark_XMLType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的 XML 文本。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的 XML 文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此<xref:Microsoft.Office.Tools.Word.Bookmark.XML%2A>属性应与以下参数一起使用。  
  
|参数|说明|  
|---------------|-----------------|  
|`DataOnly`|`true`若要返回 XML 的文本而不包含 Word XML 标记, 则为;否则为`false`。|  
  
 如果在不指定<xref:Microsoft.Office.Tools.Word.Bookmark.XML%2A>参数的情况下使用属性, 它将<xref:Microsoft.Office.Tools.Word.Bookmark_XMLType>返回一个不应在代码中直接使用的对象。  
  
   
  
## Examples  
 下面的代码示例将<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档, 然后将 XML 文本插入书签中。 随后, 将显示一个消息框, 其中<xref:Microsoft.Office.Interop.Word.XMLNodes>显示书签的 XML 内容。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#58](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#58)]
 [!code-vb[Trin_WordBookmark#58](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#58)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XMLNodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.XMLNodes XMLNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.XMLNodes XMLNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.XMLNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.XMLNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.XMLNodes" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的所有 XML 元素的集合，其中包括那些仅部分位于 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件中的元素。</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.XMLNodes" /> 集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档, 然后将 XML 文本插入书签中。 随后, 将显示一个消息框, 其中<xref:Microsoft.Office.Interop.Word.XMLNodes>显示书签的 XML 内容。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#58](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#58)]
 [!code-vb[Trin_WordBookmark#58](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#58)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XMLParentNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.XMLNode XMLParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.XMLNode XMLParentNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.Bookmark.XMLParentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.XMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Word.XMLNode" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的父节点。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Word.XMLNode" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件的父节点。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将 XML 插入文档中, 并在<xref:Microsoft.Office.Tools.Word.Bookmark>第二个单词上创建一个控件。 然后, 它将其他 XML 插入书签, 并<xref:Microsoft.Office.Tools.Word.Bookmark.XMLParentNode%2A>在消息框中显示的文本。  
  
 此示例适用于文档级自定义项。  
  
 [!code-csharp[Trin_WordBookmark#116](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordBookMark/CS/Trin_WordBookMark.cs#116)]
 [!code-vb[Trin_WordBookmark#116](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordBookMark/VB/ThisDocument.vb#116)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
