<Type Name="ControlCollection" FullName="Microsoft.Office.Tools.Word.ControlCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e34c175007e37b1074086850d306ebbcd3048bc" /><Meta Name="ms.sourcegitcommit" Value="7439021cdeee6a9ef5d4640250701344f6cbba15" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/13/2019" /><Meta Name="ms.locfileid" Value="69000468" /></Metadata><TypeSignature Language="C#" Value="public interface ControlCollection : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ControlCollection implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Tools.Word.ControlCollection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Word.v4.0.Utilities</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("E1180F09-B903-4D03-8D30-2845219AEE2C")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示一个 Word 文档中的托管控件集合，该文档已通过使用 Visual Studio 中的 Office 开发工具进行自定义。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Word.ControlCollection>使用方法和属性来管理 Word 文档中的控件。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
 若要在<xref:Microsoft.Office.Tools.Word.ControlCollection>文档级项目中获取对象, 请在项目<xref:Microsoft.Office.Tools.Word.Document.Controls%2A>中使用`ThisDocument`类的属性。 若要获取<xref:Microsoft.Office.Tools.Word.ControlCollection>应用程序级项目中的对象, 请<xref:Microsoft.Office.Tools.Word.Document.Controls%2A>使用在运行时<xref:Microsoft.Office.Tools.Word.Document>以编程方式创建的主机项的属性。 有关更多信息，请参见 [Extending Word Documents and Excel Workbooks in VSTO Add-ins at Run Time](/visualstudio/vsto/extending-word-documents-and-excel-workbooks-in-vsto-add-ins-at-run-time)。  
  
 下表显示了如何使用<xref:Microsoft.Office.Tools.Word.ControlCollection>成员执行一些与文档上的控件相关的常见任务。  
  
|任务|操作|  
|----------|------------|  
|向文档添加控件。|使用 Add*ControlName*方法之一。 例如, 若要添加内容控件, 请使用<xref:Microsoft.Office.Tools.Word.ControlCollection.AddContentControl%2A>方法。|  
|从文档中删除控件。|使用 <xref:Microsoft.Office.Tools.Word.ControlCollection.Remove%2A> 方法。|  
|确定控件是否在集合中。|将控件或其名称传递给<xref:Microsoft.Office.Tools.Word.ControlCollection.Contains%2A>方法。|  
|获取集合中的控件的索引。|将控件或其名称传递给<xref:Microsoft.Office.Tools.Word.ControlCollection.IndexOf%2A>方法。|  
|从集合中获取一个控件。|向<xref:Microsoft.Office.Tools.Word.ControlCollection.Item%2A>属性传递控件的索引或名称。|  
  
 [!INCLUDE[vsto_interface](~/includes/vsto-interface-md.md)]  
  
## <a name="usage"></a>用法  
 [!INCLUDE[vsto_net35mref](~/includes/vsto-net35mref-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBookmark">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.Bookmark AddBookmark (Microsoft.Office.Interop.Word.Bookmark bookmark, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.Bookmark AddBookmark(class Microsoft.Office.Interop.Word.Bookmark bookmark, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddBookmark(Microsoft.Office.Interop.Word.Bookmark,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="Microsoft.Office.Interop.Word.Bookmark" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bookmark">希望更换为新 <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 控件的现有 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中控件的名称。</param>
        <summary>向文档中指定的现有 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 的位置添加一个新的 <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 实例的 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 控件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBookmark">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.Bookmark AddBookmark (Microsoft.Office.Interop.Word.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.Bookmark AddBookmark(class Microsoft.Office.Interop.Word.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddBookmark(Microsoft.Office.Interop.Word.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Microsoft.Office.Interop.Word.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Word.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中控件的名称。</param>
        <summary>在指定的范围内向文档添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Word.Bookmark" /> 实例的 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使你能够将<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到的末尾。 <xref:Microsoft.Office.Tools.Word.ControlCollection>  
  
 若要移除<xref:Microsoft.Office.Tools.Word.Bookmark>以编程方式添加的控件, 请<xref:Microsoft.Office.Tools.Word.ControlCollection.Remove%2A>使用方法。  
  
   
  
## Examples  
 下面的代码示例将<xref:Microsoft.Office.Tools.Word.Bookmark>控件添加到文档中, 然后将文本添加到书签。  
  
 [!code-csharp[Trin_WordControlCollection#1](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordControlCollection/CS/ThisDocument.cs#1)]
 [!code-vb[Trin_WordControlCollection#1](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordControlCollection/VB/ThisDocument.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 或 <paramref name="range" /> 参数为 <see langword="null" />，或者 <paramref name="name" /> 参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddBuildingBlockGalleryContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl AddBuildingBlockGalleryContentControl (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl AddBuildingBlockGalleryContentControl(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddBuildingBlockGalleryContentControl(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">新控件的名称。</param>
        <summary>在文档的当前选定内容中添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可以在运行时<xref:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl>在文档的当前选定内容中添加一个新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新<xref:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl>添加到文档的开头。 <xref:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl>显示 Microsoft Office Word 提供的公式构造块。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddBuildingBlockControlAtSelection`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#1](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/BuildingBlockGallery.cs#1)]
 [!code-vb[Trin_ContentControlReference#1](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/BuildingBlockGallery.vb#1)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddBuildingBlockControlAtSelection`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#1](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/BuildingBlockGallery.cs#1)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#1](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/BuildingBlockGallery.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddBuildingBlockGalleryContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl AddBuildingBlockGalleryContentControl (Microsoft.Office.Interop.Word.ContentControl contentControl, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl AddBuildingBlockGalleryContentControl(class Microsoft.Office.Interop.Word.ContentControl contentControl, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddBuildingBlockGalleryContentControl(Microsoft.Office.Interop.Word.ContentControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentControl" Type="Microsoft.Office.Interop.Word.ContentControl" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentControl">一个 <see cref="T:Microsoft.Office.Interop.Word.ContentControl" />，它是新控件的基础。</param>
        <param name="name">新控件的名称。</param>
        <summary>将新 <see cref="T:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl" /> 添加到集合中。 新控件基于文档中已存在的本机内容控件。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可添加基于文档<xref:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl>中的本机内容控件的新。 当您<xref:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl>在运行时创建, 并且您想要在下次打开文档时重新创建同一个控件时, 这非常有用。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例为已在<xref:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl>文档中的每个本机构建基块库创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`CreateBuildingBlockControlsFromNativeControls`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#3](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/BuildingBlockGallery.cs#3)]
 [!code-vb[Trin_ContentControlReference#3](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/BuildingBlockGallery.vb#3)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到外接程序项目中的类中, `CreateBuildingBlockControlsFromNativeControls`然后从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#3](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/BuildingBlockGallery.cs#3)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#3](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/BuildingBlockGallery.vb#3)]  
  
 下面的代码示例为用户添加<xref:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl>到文档中的每个本机构建基块库创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目中的类。 对于C#, 还必须将`ThisDocument_BuildingBlockContentControlAfterAdd` <xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>事件处理程序附加到`ThisDocument`类的事件。  
  
 [!code-csharp[Trin_ContentControlReference#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/BuildingBlockGallery.cs#4)]
 [!code-vb[Trin_ContentControlReference#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/BuildingBlockGallery.vb#4)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目中的类。 此外, 还必须将`ActiveDocument_BuildingBlockContentControlAfterAdd`事件处理程序附加<xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>到活动文档的事件。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/BuildingBlockGallery.cs#4)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/BuildingBlockGallery.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contentControl" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contentControl" /> 不是构建基块库（即 <paramref name="contentControl" /> 的 <see cref="P:Microsoft.Office.Interop.Word.ContentControl.Type" /> 属性不具有值 <c>Microsoft.Office.Interop.Word.WdContentControlType.wdContentControlBuildingBlockGallery</c>）。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddBuildingBlockGalleryContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl AddBuildingBlockGalleryContentControl (Microsoft.Office.Interop.Word.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl AddBuildingBlockGalleryContentControl(class Microsoft.Office.Interop.Word.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddBuildingBlockGalleryContentControl(Microsoft.Office.Interop.Word.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Microsoft.Office.Interop.Word.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range"><see cref="T:Microsoft.Office.Interop.Word.Range" />，可为新控件提供边界。</param>
        <param name="name">新控件的名称。</param>
        <summary>在文档的指定范围中，添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl>在文档中的指定范围内添加新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新<xref:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl>添加到文档的开头。 <xref:Microsoft.Office.Tools.Word.BuildingBlockGalleryContentControl>显示 Microsoft Office Word 提供的公式构造块。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddBuildingBlockControlAtRange`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/BuildingBlockGallery.cs#2)]
 [!code-vb[Trin_ContentControlReference#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/BuildingBlockGallery.vb#2)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddBuildingBlockControlAtRange`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/BuildingBlockGallery.cs#2)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/BuildingBlockGallery.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddComboBoxContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.ComboBoxContentControl AddComboBoxContentControl (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.ComboBoxContentControl AddComboBoxContentControl(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddComboBoxContentControl(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.ComboBoxContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">新控件的名称。</param>
        <summary>在文档的当前选定内容中添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.ComboBoxContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.ComboBoxContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可以在运行时<xref:Microsoft.Office.Tools.Word.ComboBoxContentControl>在文档的当前选定内容中添加一个新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新<xref:Microsoft.Office.Tools.Word.ComboBoxContentControl>添加到文档的开头。 该示例还将若干颜色的名称添加到用户可在控件中选择的项的列表中。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddComboBoxControlAtSelection`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#100](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/ComboBox.cs#100)]
 [!code-vb[Trin_ContentControlReference#100](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/ComboBox.vb#100)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddComboBoxControlAtSelection`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#100](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/ComboBox.cs#100)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#100](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/ComboBox.vb#100)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddComboBoxContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.ComboBoxContentControl AddComboBoxContentControl (Microsoft.Office.Interop.Word.ContentControl contentControl, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.ComboBoxContentControl AddComboBoxContentControl(class Microsoft.Office.Interop.Word.ContentControl contentControl, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddComboBoxContentControl(Microsoft.Office.Interop.Word.ContentControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.ComboBoxContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentControl" Type="Microsoft.Office.Interop.Word.ContentControl" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentControl">一个 <see cref="T:Microsoft.Office.Interop.Word.ContentControl" />，它是新控件的基础。</param>
        <param name="name">新控件的名称。</param>
        <summary>将新 <see cref="T:Microsoft.Office.Tools.Word.ComboBoxContentControl" /> 添加到集合中。 新控件基于文档中已存在的本机内容控件。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.ComboBoxContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.ComboBoxContentControl>添加基于文档中的本机内容控件的新。 当您<xref:Microsoft.Office.Tools.Word.ComboBoxContentControl>在运行时创建, 并且您想要在下次打开文档时重新创建同一个控件时, 这非常有用。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例为文档中<xref:Microsoft.Office.Tools.Word.ComboBoxContentControl>的每个本机组合框创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`CreateComboBoxControlsFromNativeControls`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#102](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/ComboBox.cs#102)]
 [!code-vb[Trin_ContentControlReference#102](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/ComboBox.vb#102)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`CreateComboBoxControlsFromNativeControls`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#102](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/ComboBox.cs#102)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#102](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/ComboBox.vb#102)]  
  
 下面的代码示例为用户添加<xref:Microsoft.Office.Tools.Word.ComboBoxContentControl>到文档中的每个本机组合框创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目中的类。 对于C#, 还必须将`ThisDocument_ComboBoxContentControlAfterAdd` <xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>事件处理程序附加到`ThisDocument`类的事件。  
  
 [!code-csharp[Trin_ContentControlReference#103](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/ComboBox.cs#103)]
 [!code-vb[Trin_ContentControlReference#103](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/ComboBox.vb#103)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目中的类。 此外, 还必须将`ActiveDocument_ComboBoxContentControlAfterAdd`事件处理程序附加<xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>到活动文档的事件。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#103](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/ComboBox.cs#103)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#103](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/ComboBox.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contentControl" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contentControl" /> 不是构建基块库（即 <paramref name="contentControl" /> 的 <see cref="P:Microsoft.Office.Interop.Word.ContentControl.Type" /> 属性不具有值 <c>Microsoft.Office.Interop.Word.WdContentControlType.wdContentControlComboBox</c>）。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddComboBoxContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.ComboBoxContentControl AddComboBoxContentControl (Microsoft.Office.Interop.Word.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.ComboBoxContentControl AddComboBoxContentControl(class Microsoft.Office.Interop.Word.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddComboBoxContentControl(Microsoft.Office.Interop.Word.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.ComboBoxContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Microsoft.Office.Interop.Word.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range"><see cref="T:Microsoft.Office.Interop.Word.Range" />，可为新控件提供边界。</param>
        <param name="name">新控件的名称。</param>
        <summary>在文档的指定范围中，添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.ComboBoxContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.ComboBoxContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.ComboBoxContentControl>在文档中的指定范围内添加新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新<xref:Microsoft.Office.Tools.Word.ComboBoxContentControl>添加到文档的开头。 该示例还将若干颜色的名称添加到用户可在控件中选择的项的列表中。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddComboBoxControlAtRange`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#101](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/ComboBox.cs#101)]
 [!code-vb[Trin_ContentControlReference#101](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/ComboBox.vb#101)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddComboBoxControlAtRange`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#101](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/ComboBox.cs#101)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#101](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/ComboBox.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.ContentControl AddContentControl (Microsoft.Office.Interop.Word.ContentControl contentControl, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.ContentControl AddContentControl(class Microsoft.Office.Interop.Word.ContentControl contentControl, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddContentControl(Microsoft.Office.Interop.Word.ContentControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.ContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentControl" Type="Microsoft.Office.Interop.Word.ContentControl" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentControl">一个 <see langword="Microsoft.Office.Interop.Word.ContentControl" />，它是新控件的基础。</param>
        <param name="name">新控件的名称。</param>
        <summary>添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.ContentControl" />，它基于文档中的本机内容控件。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.ContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.ContentControl>添加基于文档中的本机内容控件的新。 当您<xref:Microsoft.Office.Tools.Word.ContentControl>在运行时创建, 并且您想要在下次打开文档时重新创建同一个控件时, 这非常有用。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contentControl" /> 为 <see langword="null" />。  
  
或 
 <paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contentControl" /> 不是构建基块库（即 <paramref name="contentControl" /> 的 <c>Microsoft.Office.Interop.Word.ContentControl.Type</c> 属性不具有值 <c>Microsoft.Office.Interop.Word.WdContentControlType.wdContentControlRichText</c>）。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.ContentControl AddContentControl (string name, Microsoft.Office.Interop.Word.WdContentControlType contentControlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.ContentControl AddContentControl(string name, valuetype Microsoft.Office.Interop.Word.WdContentControlType contentControlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddContentControl(System.String,Microsoft.Office.Interop.Word.WdContentControlType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.ContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="contentControlType" Type="Microsoft.Office.Interop.Word.WdContentControlType" />
      </Parameters>
      <Docs>
        <param name="name">新控件的名称。</param>
        <param name="contentControlType"><see langword="Microsoft.Office.Interop.Word.WdContentControlType" /> 值之一，指定新内容控件的基础类型。</param>
        <summary>将一个指定类型的新 <see cref="T:Microsoft.Office.Tools.Word.ContentControl" /> 添加到文档中当前选定的位置。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.ContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可以在运行时<xref:Microsoft.Office.Tools.Word.ContentControl>在文档的当前选定内容中添加一个新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.ContentControl AddContentControl (Microsoft.Office.Interop.Word.Range range, string name, Microsoft.Office.Interop.Word.WdContentControlType contentControlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.ContentControl AddContentControl(class Microsoft.Office.Interop.Word.Range range, string name, valuetype Microsoft.Office.Interop.Word.WdContentControlType contentControlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddContentControl(Microsoft.Office.Interop.Word.Range,System.String,Microsoft.Office.Interop.Word.WdContentControlType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.ContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Microsoft.Office.Interop.Word.Range" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="contentControlType" Type="Microsoft.Office.Interop.Word.WdContentControlType" />
      </Parameters>
      <Docs>
        <param name="range"><see cref="T:Microsoft.Office.Interop.Word.Range" />，可为新控件提供边界。</param>
        <param name="name">新控件的名称。</param>
        <param name="contentControlType"><see langword="Microsoft.Office.Interop.Word.WdContentControlType" /> 值之一，指定新内容控件的基础类型。</param>
        <summary>将一个指定类型的新 <see cref="T:Microsoft.Office.Tools.Word.ContentControl" /> 添加到文档中的指定范围。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.ContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.ContentControl>在文档中的指定范围内添加新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.ControlSite AddControl (System.Windows.Forms.Control control, Microsoft.Office.Interop.Word.Range range, float width, float height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.ControlSite AddControl(class System.Windows.Forms.Control control, class Microsoft.Office.Interop.Word.Range range, float32 width, float32 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddControl(System.Windows.Forms.Control,Microsoft.Office.Interop.Word.Range,System.Single,System.Single,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.ControlSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Word.Range" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">要添加到 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例的控件。</param>
        <param name="range">提供控件的位置的 <see cref="T:Microsoft.Office.Interop.Word.Range" />。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中控件的名称。</param>
        <summary>在指定范围内以指定大小向 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 添加指定控件。</summary>
        <returns>一个对象，表示包含文档中指定控件的控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可用于<xref:Microsoft.Office.Tools.Word.ControlCollection>在运行时向添加任何控件。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Word.ControlCollection.AddControl%2A>方法将两个自定义用户控件添加到文档中。 第一个控件添加到<xref:Microsoft.Office.Interop.Word.Range>。 将第二个控件添加到特定位置。 此代码会更改<xref:System.Windows.Forms.Control.Top%2A>第一个自定义用户控件的属性, 这只<xref:Microsoft.Office.Tools.Word.ControlSite>会将控件移动到文档上包含控件的。 然后, 该代码设置<xref:System.Windows.Forms.Control.Top%2A>第二个<xref:Microsoft.Office.Tools.Word.ControlSite>用户控件返回的的属性, 以说明设置控件的<xref:System.Windows.Forms.Control.Top%2A>属性的正确方法。  
  
 [!code-csharp[Trin_WordControlCollection#10](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordControlCollection/CS/ThisDocument.cs#10)]
 [!code-vb[Trin_WordControlCollection#10](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordControlCollection/VB/ThisDocument.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" />，或 <paramref name="range" /> 参数为 <see langword="null" />，或 <paramref name="name" /> 参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.VisualStudio.Tools.Applications.Runtime.ControlCouldNotBeInitializedException "><paramref name="control" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.ControlSite AddControl (System.Windows.Forms.Control control, float left, float top, float width, float height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.ControlSite AddControl(class System.Windows.Forms.Control control, float32 left, float32 top, float32 width, float32 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddControl(System.Windows.Forms.Control,System.Single,System.Single,System.Single,System.Single,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.ControlSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="top" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">要添加到 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例的控件。</param>
        <param name="left">控件左边缘与文档左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘和文档上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>在指定位置以指定大小向 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 添加指定控件。</summary>
        <returns>一个对象，表示包含文档中指定控件的控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可用于<xref:Microsoft.Office.Tools.Word.ControlCollection>在运行时向添加任何控件。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Word.ControlCollection.AddControl%2A>方法将两个自定义用户控件添加到文档中。 第一个控件添加到<xref:Microsoft.Office.Interop.Word.Range>。 将第二个控件添加到特定位置。 此代码会更改<xref:System.Windows.Forms.Control.Top%2A>第一个自定义用户控件的属性, 这只<xref:Microsoft.Office.Tools.Word.ControlSite>会将控件移动到文档上包含控件的。 然后, 该代码设置<xref:System.Windows.Forms.Control.Top%2A>第二个<xref:Microsoft.Office.Tools.Word.ControlSite>用户控件返回的的属性, 以说明设置控件的<xref:System.Windows.Forms.Control.Top%2A>属性的正确方法。  
  
 [!code-csharp[Trin_WordControlCollection#10](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordControlCollection/CS/ThisDocument.cs#10)]
 [!code-vb[Trin_WordControlCollection#10](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordControlCollection/VB/ThisDocument.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 参数为 <see langword="null" />，或 <paramref name="name" /> 参数的长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref=" T:Microsoft.VisualStudio.Tools.Applications.Runtime.ControlCouldNotBeInitializedException"><paramref name="control" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDatePickerContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.DatePickerContentControl AddDatePickerContentControl (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.DatePickerContentControl AddDatePickerContentControl(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddDatePickerContentControl(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.DatePickerContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">新控件的名称。</param>
        <summary>在文档的当前选定内容中添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.DatePickerContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.DatePickerContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可以在运行时<xref:Microsoft.Office.Tools.Word.DatePickerContentControl>在文档的当前选定内容中添加一个新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新<xref:Microsoft.Office.Tools.Word.DatePickerContentControl>添加到文档的开头。 该示例还会修改控件显示日期的格式。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddDatePickerControlAtSelection`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#200](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/DatePicker.cs#200)]
 [!code-vb[Trin_ContentControlReference#200](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/DatePicker.vb#200)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddDatePickerControlAtSelection`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#200](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/DatePicker.cs#200)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#200](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/DatePicker.vb#200)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDatePickerContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.DatePickerContentControl AddDatePickerContentControl (Microsoft.Office.Interop.Word.ContentControl contentControl, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.DatePickerContentControl AddDatePickerContentControl(class Microsoft.Office.Interop.Word.ContentControl contentControl, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddDatePickerContentControl(Microsoft.Office.Interop.Word.ContentControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.DatePickerContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentControl" Type="Microsoft.Office.Interop.Word.ContentControl" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentControl">一个 <see cref="T:Microsoft.Office.Interop.Word.ContentControl" />，它是新控件的基础。</param>
        <param name="name">新控件的名称。</param>
        <summary>将新 <see cref="T:Microsoft.Office.Tools.Word.DatePickerContentControl" /> 添加到集合中。 新控件基于文档中已存在的本机内容控件。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.DatePickerContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.DatePickerContentControl>添加基于文档中的本机内容控件的新。 当您<xref:Microsoft.Office.Tools.Word.DatePickerContentControl>在运行时创建, 并且您想要在下次打开文档时重新创建同一个控件时, 这非常有用。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例为文档中<xref:Microsoft.Office.Tools.Word.DatePickerContentControl>的每个本机日期控件创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`CreateDatePickerControlsFromNativeControls`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#202](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/DatePicker.cs#202)]
 [!code-vb[Trin_ContentControlReference#202](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/DatePicker.vb#202)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`CreateDatePickerControlsFromNativeControls`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#202](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/DatePicker.cs#202)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#202](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/DatePicker.vb#202)]  
  
 下面的代码示例为用户添加<xref:Microsoft.Office.Tools.Word.DatePickerContentControl>到文档中的每个本机日期控件创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目中的类。 对于C#, 还必须将`ThisDocument_DatePickerContentControlAfterAdd` <xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>事件处理程序附加到`ThisDocument`类的事件。  
  
 [!code-csharp[Trin_ContentControlReference#203](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/DatePicker.cs#203)]
 [!code-vb[Trin_ContentControlReference#203](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/DatePicker.vb#203)]  
  
 若要使用此代码, 请将其`ThisAddIn`粘贴到项目中的类。 此外, 还必须将`ActiveDocument_DatePickerContentControlAfterAdd`事件处理程序附加<xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>到活动文档的事件。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#203](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/DatePicker.cs#203)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#203](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/DatePicker.vb#203)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contentControl" /> 为 <see langword="null" />。  
  
或 
 <paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contentControl" /> 不是构建基块库（即 <paramref name="contentControl" /> 的 <see cref="P:Microsoft.Office.Interop.Word.ContentControl.Type" /> 属性不具有值 <c>Microsoft.Office.Interop.Word.WdContentControlType.wdContentControlDate</c>）。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDatePickerContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.DatePickerContentControl AddDatePickerContentControl (Microsoft.Office.Interop.Word.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.DatePickerContentControl AddDatePickerContentControl(class Microsoft.Office.Interop.Word.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddDatePickerContentControl(Microsoft.Office.Interop.Word.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.DatePickerContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Microsoft.Office.Interop.Word.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range"><see cref="T:Microsoft.Office.Interop.Word.Range" />，可为新控件提供边界。</param>
        <param name="name">新控件的名称。</param>
        <summary>在文档的指定范围中，添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.DatePickerContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.DatePickerContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.DatePickerContentControl>在文档中的指定范围内添加新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新<xref:Microsoft.Office.Tools.Word.DatePickerContentControl>添加到文档的开头。 该示例还会修改控件显示日期的格式。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddDatePickerControlAtRange`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#201](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/DatePicker.cs#201)]
 [!code-vb[Trin_ContentControlReference#201](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/DatePicker.vb#201)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddDatePickerControlAtRange`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#201](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/DatePicker.cs#201)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#201](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/DatePicker.vb#201)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDropDownListContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.DropDownListContentControl AddDropDownListContentControl (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.DropDownListContentControl AddDropDownListContentControl(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddDropDownListContentControl(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.DropDownListContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">新控件的名称。</param>
        <summary>在文档的当前选定内容中添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.DropDownListContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.DropDownListContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可以在运行时<xref:Microsoft.Office.Tools.Word.DropDownListContentControl>在文档的当前选定内容中添加一个新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新<xref:Microsoft.Office.Tools.Word.DropDownListContentControl>添加到文档的开头。 该示例还将几天的名称添加到用户可在控件中选择的项的列表中。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddDropDownListControlAtSelection`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#300](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/DropDownList.cs#300)]
 [!code-vb[Trin_ContentControlReference#300](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/DropDownList.vb#300)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddDropDownListControlAtSelection`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#300](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/DropDownList.cs#300)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#300](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/DropDownList.vb#300)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDropDownListContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.DropDownListContentControl AddDropDownListContentControl (Microsoft.Office.Interop.Word.ContentControl contentControl, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.DropDownListContentControl AddDropDownListContentControl(class Microsoft.Office.Interop.Word.ContentControl contentControl, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddDropDownListContentControl(Microsoft.Office.Interop.Word.ContentControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.DropDownListContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentControl" Type="Microsoft.Office.Interop.Word.ContentControl" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentControl">一个 <see cref="T:Microsoft.Office.Interop.Word.ContentControl" />，它是新控件的基础。</param>
        <param name="name">新控件的名称。</param>
        <summary>将新 <see cref="T:Microsoft.Office.Tools.Word.DropDownListContentControl" /> 添加到集合中。 新控件基于文档中已存在的本机内容控件。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.DropDownListContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.DropDownListContentControl>添加基于文档中的本机内容控件的新。 当您<xref:Microsoft.Office.Tools.Word.DropDownListContentControl>在运行时创建, 并且您想要在下次打开文档时重新创建同一个控件时, 这非常有用。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例为文档中<xref:Microsoft.Office.Tools.Word.DropDownListContentControl>的每个本机下拉列表创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`CreateDropDownListControlsFromNativeControls`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#302](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/DropDownList.cs#302)]
 [!code-vb[Trin_ContentControlReference#302](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/DropDownList.vb#302)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到外接程序项目中的类中, `CreateDropDownListControlsFromNativeControls`然后从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#302](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/DropDownList.cs#302)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#302](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/DropDownList.vb#302)]  
  
 下面的代码示例为用户添加<xref:Microsoft.Office.Tools.Word.DropDownListContentControl>到文档中的每个本机下拉列表创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目中的类。 对于C#, 还必须将`ThisDocument_DropDownListContentControlAfterAdd` <xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>事件处理程序附加到`ThisDocument`类的事件。  
  
 [!code-csharp[Trin_ContentControlReference#303](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/DropDownList.cs#303)]
 [!code-vb[Trin_ContentControlReference#303](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/DropDownList.vb#303)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目中的类。 此外, 还必须将`ActiveDocument_DropDownListContentControlAfterAdd`事件处理程序附加<xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>到活动文档的事件。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#303](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/DropDownList.cs#303)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#303](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/DropDownList.vb#303)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contentControl" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contentControl" /> 不是构建基块库（即 <paramref name="contentControl" /> 的 <see cref="P:Microsoft.Office.Interop.Word.ContentControl.Type" /> 属性不具有值 <c>Microsoft.Office.Interop.Word.WdContentControlType.wdContentControlDropdownList</c>）。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDropDownListContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.DropDownListContentControl AddDropDownListContentControl (Microsoft.Office.Interop.Word.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.DropDownListContentControl AddDropDownListContentControl(class Microsoft.Office.Interop.Word.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddDropDownListContentControl(Microsoft.Office.Interop.Word.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.DropDownListContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Microsoft.Office.Interop.Word.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range"><see cref="T:Microsoft.Office.Interop.Word.Range" />，可为新控件提供边界。</param>
        <param name="name">新控件的名称。</param>
        <summary>在文档的指定范围中，添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.DropDownListContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.DropDownListContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.DropDownListContentControl>在文档中的指定范围内添加新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新<xref:Microsoft.Office.Tools.Word.DropDownListContentControl>添加到文档的开头。 该示例还将几天的名称添加到用户可在控件中选择的项的列表中。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddDropDownListControlAtRange`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#301](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/DropDownList.cs#301)]
 [!code-vb[Trin_ContentControlReference#301](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/DropDownList.vb#301)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddDropDownListControlAtRange`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#301](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/DropDownList.cs#301)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#301](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/DropDownList.vb#301)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddGroupContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.GroupContentControl AddGroupContentControl (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.GroupContentControl AddGroupContentControl(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddGroupContentControl(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.GroupContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">新控件的名称。</param>
        <summary>在文档的当前选定内容中添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.GroupContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.GroupContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可以在运行时<xref:Microsoft.Office.Tools.Word.GroupContentControl>在文档的当前选定内容中添加一个新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新段落添加到文档的开头, 并创建一个包含此段落<xref:Microsoft.Office.Tools.Word.GroupContentControl>的新段落。 <xref:Microsoft.Office.Tools.Word.GroupContentControl>阻止用户编辑段落中的文本。 有关使用<xref:Microsoft.Office.Tools.Word.GroupContentControl>保护文档的某一部分的详细信息, 请参阅[内容控件](/visualstudio/vsto/content-controls)。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddGroupControlAtSelection`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#400](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/Group.cs#400)]
 [!code-vb[Trin_ContentControlReference#400](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/Group.vb#400)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddGroupControlAtSelection`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#400](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/Group.cs#400)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#400](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/Group.vb#400)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddGroupContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.GroupContentControl AddGroupContentControl (Microsoft.Office.Interop.Word.ContentControl contentControl, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.GroupContentControl AddGroupContentControl(class Microsoft.Office.Interop.Word.ContentControl contentControl, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddGroupContentControl(Microsoft.Office.Interop.Word.ContentControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.GroupContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentControl" Type="Microsoft.Office.Interop.Word.ContentControl" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentControl">一个 <see cref="T:Microsoft.Office.Interop.Word.ContentControl" />，它是新控件的基础。</param>
        <param name="name">新控件的名称。</param>
        <summary>添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.GroupContentControl" />，它基于文档中的本机内容控件。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.GroupContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.GroupContentControl>添加基于文档中的本机内容控件的新。 当您<xref:Microsoft.Office.Tools.Word.GroupContentControl>在运行时创建, 并且您想要在下次打开文档时重新创建同一个控件时, 这非常有用。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例为文档中<xref:Microsoft.Office.Tools.Word.GroupContentControl>的每个本机组控件创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`CreateGroupControlsFromNativeControls`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#402](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/Group.cs#402)]
 [!code-vb[Trin_ContentControlReference#402](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/Group.vb#402)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`CreateGroupControlsFromNativeControls`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#402](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/Group.cs#402)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#402](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/Group.vb#402)]  
  
 下面的代码示例为用户添加<xref:Microsoft.Office.Tools.Word.GroupContentControl>到文档中的每个本机组控件创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目中的类。 对于C#, 还必须将`ThisDocument_GroupContentControlAfterAdd` <xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>事件处理程序附加到`ThisDocument`类的事件。  
  
 [!code-csharp[Trin_ContentControlReference#403](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/Group.cs#403)]
 [!code-vb[Trin_ContentControlReference#403](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/Group.vb#403)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目中的类。 此外, 还必须将`ActiveDocument_GroupContentControlAfterAdd`事件处理程序附加<xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>到活动文档的事件。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#403](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/Group.cs#403)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#403](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/Group.vb#403)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contentControl" /> 为 <see langword="null" />。  
  
或 
 <paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contentControl" /> 不是构建基块库（即 <paramref name="contentControl" /> 的 <see cref="P:Microsoft.Office.Interop.Word.ContentControl.Type" /> 属性不具有值 <c>Microsoft.Office.Interop.Word.WdContentControlType.wdContentControlGroup</c>）。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddGroupContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.GroupContentControl AddGroupContentControl (Microsoft.Office.Interop.Word.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.GroupContentControl AddGroupContentControl(class Microsoft.Office.Interop.Word.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddGroupContentControl(Microsoft.Office.Interop.Word.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.GroupContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Microsoft.Office.Interop.Word.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range"><see cref="T:Microsoft.Office.Interop.Word.Range" />，可为新控件提供边界。</param>
        <param name="name">新控件的名称。</param>
        <summary>在文档的指定范围中，添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.GroupContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.GroupContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.GroupContentControl>在文档中的指定范围内添加新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新段落添加到文档的开头, 并创建一个<xref:Microsoft.Office.Tools.Word.GroupContentControl>包含此段落的。 <xref:Microsoft.Office.Tools.Word.GroupContentControl>阻止用户编辑段落中的文本。 有关使用<xref:Microsoft.Office.Tools.Word.GroupContentControl>保护文档的某一部分的详细信息, 请参阅[内容控件](/visualstudio/vsto/content-controls)。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddGroupControlAtRange`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#401](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/Group.cs#401)]
 [!code-vb[Trin_ContentControlReference#401](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/Group.vb#401)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddGroupControlAtRange`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#401](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/Group.cs#401)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#401](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/Group.vb#401)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPictureContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.PictureContentControl AddPictureContentControl (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.PictureContentControl AddPictureContentControl(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddPictureContentControl(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.PictureContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">新控件的名称。</param>
        <summary>在文档的当前选定内容中添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.PictureContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.PictureContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可以在运行时<xref:Microsoft.Office.Tools.Word.PictureContentControl>在文档的当前选定内容中添加一个新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新<xref:Microsoft.Office.Tools.Word.PictureContentControl>添加到文档的开头。 此示例假定%UserProfile%\My Documents 文件夹 ( `picture.bmp`适用于 windows XP 及更低版本) 或%UserProfile%\Documents 文件夹 (适用于 windows Vista) 中存在名为的文件。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddPictureControlAtSelection`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#500](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/Picture.cs#500)]
 [!code-vb[Trin_ContentControlReference#500](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/Picture.vb#500)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddPictureControlAtSelection`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#500](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/Picture.cs#500)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#500](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/Picture.vb#500)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPictureContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.PictureContentControl AddPictureContentControl (Microsoft.Office.Interop.Word.ContentControl contentControl, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.PictureContentControl AddPictureContentControl(class Microsoft.Office.Interop.Word.ContentControl contentControl, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddPictureContentControl(Microsoft.Office.Interop.Word.ContentControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.PictureContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentControl" Type="Microsoft.Office.Interop.Word.ContentControl" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentControl">一个 <see cref="T:Microsoft.Office.Interop.Word.ContentControl" />，它是新控件的基础。</param>
        <param name="name">新控件的名称。</param>
        <summary>添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.PictureContentControl" />，它基于文档中的本机内容控件。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.PictureContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.PictureContentControl>添加基于文档中的本机内容控件的新。 当您<xref:Microsoft.Office.Tools.Word.PictureContentControl>在运行时创建, 并且您想要在下次打开文档时重新创建同一个控件时, 这非常有用。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例为文档中<xref:Microsoft.Office.Tools.Word.PictureContentControl>的每个本机图片控件创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`CreatePictureControlFromNativeControl`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#502](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/Picture.cs#502)]
 [!code-vb[Trin_ContentControlReference#502](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/Picture.vb#502)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`CreatePictureControlFromNativeControl`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#502](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/Picture.cs#502)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#502](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/Picture.vb#502)]  
  
 下面的代码示例为用户添加<xref:Microsoft.Office.Tools.Word.PictureContentControl>到文档中的每个本机图片控件创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目中的类。 对于C#, 还必须将`ThisDocument_PictureContentControlAfterAdd` <xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>事件处理程序附加到`ThisDocument`类的事件。  
  
 [!code-csharp[Trin_ContentControlReference#503](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/Picture.cs#503)]
 [!code-vb[Trin_ContentControlReference#503](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/Picture.vb#503)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目中的类。 此外, 还必须将`ActiveDocument_PictureContentControlAfterAdd`事件处理程序附加<xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>到活动文档的事件。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#503](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/Picture.cs#503)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#503](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/Picture.vb#503)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contentControl" /> 为 <see langword="null" />。  
  
或 
 <paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contentControl" /> 不是构建基块库（即 <paramref name="contentControl" /> 的 <see cref="P:Microsoft.Office.Interop.Word.ContentControl.Type" /> 属性不具有值 <c>Microsoft.Office.Interop.Word.WdContentControlType.wdContentControlPicture</c>）。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPictureContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.PictureContentControl AddPictureContentControl (Microsoft.Office.Interop.Word.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.PictureContentControl AddPictureContentControl(class Microsoft.Office.Interop.Word.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddPictureContentControl(Microsoft.Office.Interop.Word.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.PictureContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Microsoft.Office.Interop.Word.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range"><see cref="T:Microsoft.Office.Interop.Word.Range" />，可为新控件提供边界。</param>
        <param name="name">新控件的名称。</param>
        <summary>在文档的指定范围中，添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.PictureContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.PictureContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.PictureContentControl>在文档中的指定范围内添加新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新<xref:Microsoft.Office.Tools.Word.PictureContentControl>添加到文档的开头。 此示例假定%UserProfile%\My Documents 文件夹 ( `picture.bmp`适用于 windows XP 及更低版本) 或%UserProfile%\Documents 文件夹 (适用于 windows Vista) 中存在名为的文件。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddPictureControlAtRange`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#501](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/Picture.cs#501)]
 [!code-vb[Trin_ContentControlReference#501](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/Picture.vb#501)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddPictureControlAtRange`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#501](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/Picture.cs#501)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#501](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/Picture.vb#501)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPlainTextContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.PlainTextContentControl AddPlainTextContentControl (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.PlainTextContentControl AddPlainTextContentControl(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddPlainTextContentControl(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.PlainTextContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">新控件的名称。</param>
        <summary>在文档的当前选定内容中添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.PlainTextContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.PlainTextContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可以在运行时<xref:Microsoft.Office.Tools.Word.PlainTextContentControl>在文档的当前选定内容中添加一个新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新<xref:Microsoft.Office.Tools.Word.PlainTextContentControl>添加到文档的开头。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddTextControlAtSelection`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#600](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/PlainText.cs#600)]
 [!code-vb[Trin_ContentControlReference#600](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/PlainText.vb#600)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddTextControlAtSelection`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#600](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/PlainText.cs#600)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#600](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/PlainText.vb#600)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPlainTextContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.PlainTextContentControl AddPlainTextContentControl (Microsoft.Office.Interop.Word.ContentControl contentControl, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.PlainTextContentControl AddPlainTextContentControl(class Microsoft.Office.Interop.Word.ContentControl contentControl, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddPlainTextContentControl(Microsoft.Office.Interop.Word.ContentControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.PlainTextContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentControl" Type="Microsoft.Office.Interop.Word.ContentControl" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentControl">一个 <see cref="T:Microsoft.Office.Interop.Word.ContentControl" />，它是新控件的基础。</param>
        <param name="name">新控件的名称。</param>
        <summary>添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.PlainTextContentControl" />，它基于文档中的本机内容控件。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.PlainTextContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.PlainTextContentControl>添加基于文档中的本机内容控件的新。 当您<xref:Microsoft.Office.Tools.Word.PlainTextContentControl>在运行时创建, 并且您想要在下次打开文档时重新创建同一个控件时, 这非常有用。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例为文档中<xref:Microsoft.Office.Tools.Word.PlainTextContentControl>的每个本机纯文本控件创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`CreateTextControlsFromNativeControls`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#602](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/PlainText.cs#602)]
 [!code-vb[Trin_ContentControlReference#602](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/PlainText.vb#602)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`CreateTextControlsFromNativeControls`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#602](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/PlainText.cs#602)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#602](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/PlainText.vb#602)]  
  
 下面的代码示例为用户添加<xref:Microsoft.Office.Tools.Word.PlainTextContentControl>到文档中的每个本机纯文本控件创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目中的类。 对于C#, 还必须将`ThisDocument_PlainTextContentControlAfterAdd` <xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>事件处理程序附加到`ThisDocument`类的事件。  
  
 [!code-csharp[Trin_ContentControlReference#603](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/PlainText.cs#603)]
 [!code-vb[Trin_ContentControlReference#603](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/PlainText.vb#603)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目中的类。 此外, 还必须将`ActiveDocument_PlainTextContentControlAfterAdd`事件处理程序附加<xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>到活动文档的事件。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#603](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/PlainText.cs#603)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#603](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/PlainText.vb#603)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contentControl" /> 为 <see langword="null" />。  
  
或 
 <paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contentControl" /> 不是构建基块库（即 <paramref name="contentControl" /> 的 <see cref="P:Microsoft.Office.Interop.Word.ContentControl.Type" /> 属性不具有值 <c>Microsoft.Office.Interop.Word.WdContentControlType.wdContentControlText</c>）。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPlainTextContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.PlainTextContentControl AddPlainTextContentControl (Microsoft.Office.Interop.Word.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.PlainTextContentControl AddPlainTextContentControl(class Microsoft.Office.Interop.Word.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddPlainTextContentControl(Microsoft.Office.Interop.Word.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.PlainTextContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Microsoft.Office.Interop.Word.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range"><see cref="T:Microsoft.Office.Interop.Word.Range" />，可为新控件提供边界。</param>
        <param name="name">新控件的名称。</param>
        <summary>在文档的指定范围中，添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.PlainTextContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.PlainTextContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.PlainTextContentControl>在文档中的指定范围内添加新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新<xref:Microsoft.Office.Tools.Word.PlainTextContentControl>添加到文档的开头。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddTextControlAtRange`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#601](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/PlainText.cs#601)]
 [!code-vb[Trin_ContentControlReference#601](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/PlainText.vb#601)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddTextControlAtRange`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#601](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/PlainText.cs#601)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#601](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/PlainText.vb#601)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRichTextContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.RichTextContentControl AddRichTextContentControl (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.RichTextContentControl AddRichTextContentControl(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddRichTextContentControl(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.RichTextContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">新控件的名称。</param>
        <summary>在文档的当前选定内容中添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.RichTextContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.RichTextContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可以在运行时<xref:Microsoft.Office.Tools.Word.RichTextContentControl>在文档的当前选定内容中添加一个新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新<xref:Microsoft.Office.Tools.Word.RichTextContentControl>添加到文档的开头。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddRichTextControlAtSelection`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#700](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/RichText.cs#700)]
 [!code-vb[Trin_ContentControlReference#700](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/RichText.vb#700)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddRichTextControlAtSelection`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#700](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/RichText.cs#700)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#700](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/RichText.vb#700)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRichTextContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.RichTextContentControl AddRichTextContentControl (Microsoft.Office.Interop.Word.ContentControl contentControl, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.RichTextContentControl AddRichTextContentControl(class Microsoft.Office.Interop.Word.ContentControl contentControl, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddRichTextContentControl(Microsoft.Office.Interop.Word.ContentControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.RichTextContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentControl" Type="Microsoft.Office.Interop.Word.ContentControl" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentControl">一个 <see cref="T:Microsoft.Office.Interop.Word.ContentControl" />，它是新控件的基础。</param>
        <param name="name">新控件的名称。</param>
        <summary>添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.RichTextContentControl" />，它基于文档中的本机内容控件。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.RichTextContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.RichTextContentControl>添加基于文档中的本机内容控件的新。 当您<xref:Microsoft.Office.Tools.Word.RichTextContentControl>在运行时创建, 并且您想要在下次打开文档时重新创建同一个控件时, 这非常有用。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例为文档中<xref:Microsoft.Office.Tools.Word.RichTextContentControl>的每个本机多格式文本控件创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`CreateRichTextControlsFromNativeControls`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#702](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/RichText.cs#702)]
 [!code-vb[Trin_ContentControlReference#702](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/RichText.vb#702)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`CreateRichTextControlsFromNativeControls`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#702](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/RichText.cs#702)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#702](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/RichText.vb#702)]  
  
 下面的代码示例为用户添加<xref:Microsoft.Office.Tools.Word.RichTextContentControl>到文档中的每个本机多格式文本控件创建一个新的。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目中的类。 对于C#, 还必须将`ThisDocument_RichTextContentControlAfterAdd` <xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>事件处理程序附加到`ThisDocument`类的事件。  
  
 [!code-csharp[Trin_ContentControlReference#703](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/RichText.cs#703)]
 [!code-vb[Trin_ContentControlReference#703](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/RichText.vb#703)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目中的类。 此外, 还必须将`ActiveDocument_RichTextContentControlAfterAdd`事件处理程序附加<xref:Microsoft.Office.Tools.Word.Document.ContentControlAfterAdd>到活动文档的事件。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#703](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/RichText.cs#703)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#703](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/RichText.vb#703)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contentControl" /> 为 <see langword="null" />。  
  
或 
 <paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contentControl" /> 不是构建基块库（即 <paramref name="contentControl" /> 的 <c>Microsoft.Office.Interop.Word.ContentControl.Type</c> 属性不具有值 <c>Microsoft.Office.Interop.Word.WdContentControlType.wdContentControlRichText</c>）。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRichTextContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Word.RichTextContentControl AddRichTextContentControl (Microsoft.Office.Interop.Word.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Tools.Word.RichTextContentControl AddRichTextContentControl(class Microsoft.Office.Interop.Word.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.AddRichTextContentControl(Microsoft.Office.Interop.Word.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Word.RichTextContentControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Microsoft.Office.Interop.Word.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="range"><see cref="T:Microsoft.Office.Interop.Word.Range" />，可为新控件提供边界。</param>
        <param name="name">新控件的名称。</param>
        <summary>在文档的指定范围中，添加一个新的 <see cref="T:Microsoft.Office.Tools.Word.RichTextContentControl" />。</summary>
        <returns><see cref="T:Microsoft.Office.Tools.Word.RichTextContentControl" />，已添加到该文档。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在运行时<xref:Microsoft.Office.Tools.Word.RichTextContentControl>在文档中的指定范围内添加新的。 有关详细信息，请参阅 [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)。  
  
   
  
## Examples  
 下面的代码示例将一个新<xref:Microsoft.Office.Tools.Word.RichTextContentControl>添加到文档的开头。  
  
 此版本适用于文档级自定义项。 若要使用此代码, 请将其`ThisDocument`粘贴到项目的类中, 然后`AddRichTextControlAtRange`从`ThisDocument_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference#701](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference/CS/RichText.cs#701)]
 [!code-vb[Trin_ContentControlReference#701](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference/VB/RichText.vb#701)]  
  
 此版本用于针对 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 或 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 的应用程序级外接程序。 若要使用此代码, 请将其`ThisAddIn`粘贴到项目的类中, 然后`AddRichTextControlAtRange`从`ThisAddIn_Startup`方法调用方法。  
  
 [!code-csharp[Trin_ContentControlReference_AppLevelAddIn#701](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/CS/RichText.cs#701)]
 [!code-vb[Trin_ContentControlReference_AppLevelAddIn#701](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ContentControlReference_AppLevelAddIn/VB/RichText.vb#701)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 为 <see langword="null" />，或其长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException"><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中已存在具有相同名称的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.ControlCollection.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 可包含的控件数。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 可包含的控件数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>确定指定的控件是否为 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例的成员。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使你可以在尝试对控件执行操作之前确定控件是否为集合的成员。 您可以使用此方法来确认控件是否已添加到<xref:Microsoft.Office.Tools.Word.ControlCollection>实例, 或仍是实例的成员。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.Contains(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control">要在 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中搜索的控件。</param>
        <summary>确定指定的控件是否为 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例的成员。</summary>
        <returns>如果在集合中找到了该控件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将<xref:Microsoft.Office.Tools.Word.Controls.Button>控件添加到文档的开头, 然后在消息框中显示该按钮的索引。  
  
 [!code-csharp[Trin_WordControlCollection#54](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordControlCollection/CS/ThisDocument.cs#54)]
 [!code-vb[Trin_WordControlCollection#54](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordControlCollection/VB/ThisDocument.vb#54)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.Contains(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要在 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中搜索的控件的名称。</param>
        <summary>确定具有指定名称的控件是否为 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例的成员。</summary>
        <returns>如果在集合中找到了该控件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.ControlCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中控件的数目。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中控件的数目。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInlineShapeForControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShape GetInlineShapeForControl (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.InlineShape GetInlineShapeForControl(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.GetInlineShapeForControl(System.Windows.Forms.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">希望从中获得 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 的 <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> 实例中的控件。</param>
        <summary>获取指定控件的基础 <see cref="T:Microsoft.Office.Interop.Word.InlineShape" />。</summary>
        <returns>指定控件的基础 <see cref="T:Microsoft.Office.Interop.Word.InlineShape" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果控件的换行样式未设置为 **"随文本对齐**", 则该<xref:Microsoft.Office.Tools.Word.ControlCollection.GetInlineShapeForControl%2A>方法将`null`返回。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Controls.Button>到文档中, 以使其换行样式与文本一起嵌入。 然后, 该代码调用<xref:Microsoft.Office.Tools.Word.ControlCollection.GetInlineShapeForControl%2A>方法以从其基础<xref:Microsoft.Office.Interop.Word.InlineShape>获取控件的位置。  
  
 [!code-csharp[Trin_WordControlCollection#59](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordControlCollection/CS/ThisDocument.cs#59)]
 [!code-vb[Trin_WordControlCollection#59](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordControlCollection/VB/ThisDocument.vb#59)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShapeForControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shape GetShapeForControl (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Shape GetShapeForControl(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.GetShapeForControl(System.Windows.Forms.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">希望从中获得 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 的 <see cref="T:Microsoft.Office.Interop.Word.Shape" /> 实例中的控件。</param>
        <summary>获取指定控件的基础 <see cref="T:Microsoft.Office.Interop.Word.Shape" />。</summary>
        <returns>指定控件的基础 <see cref="T:Microsoft.Office.Interop.Word.Shape" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果控件的换行样式设置为 **"随文本对齐**", 则该<xref:Microsoft.Office.Tools.Word.ControlCollection.GetShapeForControl%2A>方法将`null`返回。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Word.Controls.Button>到文档中, 然后<xref:Microsoft.Office.Tools.Word.ControlCollection.GetShapeForControl%2A>使用方法从其基础<xref:Microsoft.Office.Interop.Word.Shape>获取控件的位置。  
  
 [!code-csharp[Trin_WordControlCollection#58](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordControlCollection/CS/ThisDocument.cs#58)]
 [!code-vb[Trin_WordControlCollection#58](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordControlCollection/VB/ThisDocument.vb#58)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.IndexOf(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control">索引待查找的控件。</param>
        <summary>搜索指定控件，并返回该控件在 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中的第一个匹配项的从零开始的索引。</summary>
        <returns>控件的索引，如果控件不在 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中，则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例将<xref:Microsoft.Office.Tools.Word.Controls.Button>控件添加到文档的开头, 然后在消息框中显示该按钮的索引。  
  
 [!code-csharp[Trin_WordControlCollection#54](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordControlCollection/CS/ThisDocument.cs#54)]
 [!code-vb[Trin_WordControlCollection#54](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordControlCollection/VB/ThisDocument.vb#54)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.IndexOf(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要查找其索引的控件的名称。</param>
        <summary>搜索具有指定名称的控件在 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中的第一个匹配项。</summary>
        <returns>控件的索引，如果控件不在 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中，则为 -1。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.ControlCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要获取的控件的从零开始的索引。</param>
        <summary>获取指定索引处的控件。</summary>
        <value>指定索引处的控件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[object control] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.ControlCollection.Item(System.Object)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control">将从 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例返回的控件。</param>
        <summary>获取指定的控件。</summary>
        <value>指定的控件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Word.ControlCollection.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">表示控件名称的字符串。</param>
        <summary>获取具有指定名称的控件。</summary>
        <value>具有指定名称的控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于以编程方式添加的控件, `name`参数应包含指定为添加\< `Name` *控件*> 方法的最后一个参数的名称, 而不是控件的属性。  
  
 对于在设计时添加的控件, 该`name`参数应包含标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.Remove(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control">要从 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中移除的控件。</param>
        <summary>从 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中移除指定的控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在设计时添加的控件无法从<xref:Microsoft.Office.Tools.Word.ControlCollection>实例中移除。 您可以使用<xref:Microsoft.Office.Tools.Word.ControlCollection.Remove%2A>方法仅删除在运行时添加的控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.Remove(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要从 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中移除的控件的名称。</param>
        <summary>从 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中移除指定的控件。</summary>
        <returns>返回 <see cref="T:System.Boolean" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在设计时添加的控件无法从<xref:Microsoft.Office.Tools.Word.ControlCollection>实例中移除。 您可以使用<xref:Microsoft.Office.Tools.Word.ControlCollection.Remove%2A>方法仅删除在运行时添加的控件。  
  
   
  
## Examples  
 下面的代码示例将一个<xref:Microsoft.Office.Tools.Word.Controls.Button>控件和一个<xref:Microsoft.Office.Tools.Word.Controls.MonthCalendar>控件添加到文档中, 然后删除该<xref:Microsoft.Office.Tools.Word.Controls.Button>控件。  
  
 [!code-csharp[Trin_WordControlCollection#55](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordControlCollection/CS/ThisDocument.cs#55)]
 [!code-vb[Trin_WordControlCollection#55](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordControlCollection/VB/ThisDocument.vb#55)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Word.ControlCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Word</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要从 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例移除的控件的从零开始的索引。</param>
        <summary>移除 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 实例中指定索引处的控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在设计时添加的控件无法从<xref:Microsoft.Office.Tools.Word.ControlCollection>实例中移除。 只能使用<xref:Microsoft.Office.Tools.Word.ControlCollection.RemoveAt%2A>删除在运行时添加的控件。  
  
   
  
## Examples  
 下面的代码示例将一个<xref:Microsoft.Office.Tools.Word.Controls.Button>控件和一个<xref:Microsoft.Office.Tools.Word.Controls.MonthCalendar>控件添加到文档中, 然后删除该<xref:Microsoft.Office.Tools.Word.Controls.Button>控件。  
  
 [!code-csharp[Trin_WordControlCollection#56](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_WordControlCollection/CS/ThisDocument.cs#56)]
 [!code-vb[Trin_WordControlCollection#56](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_WordControlCollection/VB/ThisDocument.vb#56)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 小于零，或者 <paramref name="index" /> 等于或大于计数。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
