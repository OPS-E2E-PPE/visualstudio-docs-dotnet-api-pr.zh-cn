<Type Name="RibbonLoadImageEventHandler" FullName="Microsoft.Office.Tools.Ribbon.RibbonLoadImageEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="12e2656678ff27de50768cb261360099ff670c1a" /><Meta Name="ms.sourcegitcommit" Value="7439021cdeee6a9ef5d4640250701344f6cbba15" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/13/2019" /><Meta Name="ms.locfileid" Value="69002378" /></Metadata><TypeSignature Language="C#" Value="public delegate void RibbonLoadImageEventHandler(object sender, RibbonLoadImageEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RibbonLoadImageEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Tools.Ribbon.RibbonLoadImageEventHandler" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Common</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="Microsoft.Office.Tools.Ribbon.RibbonLoadImageEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">事件源。</param>
    <param name="e">事件的数据。</param>
    <summary>表示将要处理 <see cref="T:Microsoft.Office.Tools.Ribbon.OfficeRibbon" /> 的 <see cref="E:Microsoft.Office.Tools.Ribbon.OfficeRibbon.LoadImage" /> 事件的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建 <xref:Microsoft.Office.Tools.Ribbon.RibbonLoadImageEventHandler> 委托时，需要标识将处理该事件的方法。 若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。 除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
