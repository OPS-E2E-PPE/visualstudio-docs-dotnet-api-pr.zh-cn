<Type Name="RibbonBase" FullName="Microsoft.Office.Tools.Ribbon.RibbonBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1583e2a0a2971356261429c8b074542740a1e22b" /><Meta Name="ms.sourcegitcommit" Value="7439021cdeee6a9ef5d4640250701344f6cbba15" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/13/2019" /><Meta Name="ms.locfileid" Value="69003067" /></Metadata><TypeSignature Language="C#" Value="public abstract class RibbonBase : System.ComponentModel.Component, IDisposable, Microsoft.Office.Tools.Ribbon.IRibbonExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RibbonBase extends System.ComponentModel.Component implements class Microsoft.Office.Tools.IExtension, class Microsoft.Office.Tools.Ribbon.IRibbonExtension, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Tools.Ribbon.RibbonBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Tools.IExtension</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Office.Tools.Ribbon.IRibbonExtension</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Tools.Office.Ribbon.Serialization.RibbonTypeCodeDomSerializer, Microsoft.VisualStudio.Tools.Office.Designer, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>作为 Microsoft Office 功能区自定义项的基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将新的 "**功能区 (可视化设计器)** " 项添加到 Office 项目时, Visual Studio 会将继承自<xref:Microsoft.Office.Tools.Ribbon.RibbonBase>的功能区类添加到项目。 <xref:Microsoft.Office.Tools.Ribbon.RibbonBase>包含所有功能区类共有的方法和属性。  有关详细信息，请参阅 [Ribbon Designer](/visualstudio/vsto/ribbon-designer)。  
  
 的<xref:Microsoft.Office.Tools.Ribbon.RibbonBase>某些属性只能在功能区加载到 Office 应用程序中之前设置。 有关设置这些属性的信息, 请参阅[功能区对象模型概述](/visualstudio/vsto/ribbon-object-model-overview)。  
  
## <a name="usage"></a>用法  
 [!INCLUDE[vsto_net4utilities](~/includes/vsto-net4utilities-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonBase (Microsoft.Office.Tools.Ribbon.RibbonFactory factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Office.Tools.Ribbon.RibbonFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Ribbon.RibbonBase.#ctor(Microsoft.Office.Tools.Ribbon.RibbonFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Office.Tools.Ribbon.RibbonFactory" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <summary>初始化 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不要使用此构造函数创建<xref:Microsoft.Office.Tools.Ribbon.RibbonBase>类的实例。 将新的 "**功能区 (可视化设计器)** " 项添加到项目时, Visual Studio 将创建一个继承自<xref:Microsoft.Office.Tools.Ribbon.RibbonBase>的类的实例。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Base">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Ribbon.OfficeRibbon Base { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Ribbon.OfficeRibbon Base" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Ribbon.RibbonBase.Base" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Ribbon.OfficeRibbon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 对象扩展的 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 对象。</summary>
        <value>此 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 对象扩展的对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public event EventHandler Close;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Close" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Ribbon.RibbonBase.Close" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>关闭此 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 实例时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用此事件来释放以前分配的特定于应用程序的资源, 例如, 在<xref:Microsoft.Office.Tools.Ribbon.RibbonBase.Load>事件中。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public object Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Context" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Ribbon.RibbonBase.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 Outlook 中与此功能区关联的检查器窗口或资源管理器窗口。</summary>
        <value>一个 <see cref="T:System.Object" />，表示与此 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 对象关联的检查器窗口或资源管理器窗口。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 Outlook 中, 此属性引用显示此<xref:Microsoft.Office.Tools.Ribbon.RibbonBase>的检查器窗口或资源管理器窗口。  
  
 在所有其他 Office 项目中, 此属性返回 null。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Ribbon.RibbonBase.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</param>
        <summary>释放 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 类使用的非托管资源，并可以选择释放托管资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由公共`Dispose()`方法<xref:System.Object.Finalize%2A>和方法调用。 `Dispose()`调用受保护`Dispose(Boolean)`的方法, `disposing`并将参数`true`设置为。 <xref:System.Object.Finalize%2A>在`Dispose` 设置`disposing` 为`false`的情况调用。  
  
 当参数为 true 时, 此方法释放该<xref:Microsoft.Office.Tools.Ribbon.RibbonBase>引用的任何托管对象所持有的所有资源。 `disposing` 此方法调用每个引用对象的 `Dispose()` 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> 可以由其他对象多次调用。 当重<see langword="Dispose(Boolean) " />写时, 请注意不要引用先前在<see langword="Dispose" />调用时已释放的对象。 有关如何实现<see langword=" Dispose(Boolean)" />的详细信息, 请参阅[实现 Dispose 方法](http://msdn.microsoft.com/library/eb4e1af0-3b48-4fbc-ad4e-fc2f64138bf9)。  
  
有关<see langword="Dispose" /> 和<see cref="M:System.Object.Finalize" />的详细信息, 请参阅[清理非托管资源](http://msdn.microsoft.com/library/a17b0066-71c2-4ba4-9822-8e19332fc213)。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Factory">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Ribbon.RibbonFactory Factory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Ribbon.RibbonFactory Factory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Ribbon.RibbonBase.Factory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Ribbon.RibbonFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与此 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 关联的功能区工厂。</summary>
        <value>一个实现 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonFactory" /> 接口的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此属性来跟踪创建的当前实例<xref:Microsoft.Office.Tools.Ribbon.RibbonBase>的功能区工厂类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Global">
      <MemberSignature Language="C#" Value="public bool Global { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Global" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Ribbon.RibbonBase.Global" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值确定此 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 是否可以同时在多个上下文中使用。</summary>
        <value>如果此 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 对象在多个上下文中共享，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Ribbon.RibbonBase>此属性设置为`false`的对象将在每次打开新的 Outlook 检查器时创建。  
  
 此属性只能在功能区加载到 Office 应用程序中之前设置。 有关设置此属性的信息, 请参阅[功能区对象模型概述](/visualstudio/vsto/ribbon-object-model-overview)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Tools.Ribbon.RibbonUIEventHandler Load;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Ribbon.RibbonUIEventHandler Load" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Ribbon.RibbonBase.Load" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Ribbon.RibbonUIEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 加载到 Microsoft Office 应用程序时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此<xref:Microsoft.Office.Tools.Ribbon.RibbonBase.Load>事件处理程序将自动添加到功能区代码文件中。 此事件处理程序用于在功能区加载时运行自定义代码。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadImage">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Tools.Ribbon.RibbonLoadImageEventHandler LoadImage;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Ribbon.RibbonLoadImageEventHandler LoadImage" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Ribbon.RibbonBase.LoadImage" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Ribbon.RibbonLoadImageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果为一个或多个控件设置 ImageName 属性，则在 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 加载时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Ribbon.RibbonBase.LoadImage>事件使你可以在功能区自定义项中缓存图像, 这可以提高性能。  
  
 默认情况下, 每次用户显示包含图像的选项卡时, 都会将一个图像加载到功能区中。 当你以编程方式更改出现图像的控件的属性时, 将重新加载图像。  
  
 <xref:Microsoft.Office.Tools.Ribbon.RibbonBase.LoadImage>使用事件将图像分配给控件。 当用户在功能区上选择选项卡时, Microsoft Office 应用程序将使用缓存的图像。 如果在运行时修改控件属性, Microsoft Office 应用程序将不会重载控件上的图像。 这会使你获得较小的性能提升。  
  
 如果要缓存控件的图像, 请设置控件的**ImageName**属性。 除非<xref:Microsoft.Office.Tools.Ribbon.RibbonBase.LoadImage>至少设置一个控件的**ImageName**属性, 否则不会引发该事件。  
  
   
  
## Examples  
 下面的示例将缓存两个<xref:Microsoft.Office.Tools.Ribbon.RibbonButton>控件的图像。  
  
 若要运行此代码示例, 必须首先执行以下步骤:  
  
-   向 Office 项目添加**功能区 (可视化设计器)** 。  
  
-   如果你使用的是 Visual Basic 项目, 请将以下语句添加到功能区代码文件的顶部:`Imports Microsoft.Office.Tools.Ribbon`  
  
 然后, 你可以在生成的功能区类中运行此代码。  
  
```vb  
Private Sub Ribbon1_LoadImage(sender As Object, e As RibbonLoadImageEventArgs)  
   Select Case e.ImageName  
      Case "Button1Image"  
         e.Image = My.Resources.Image1  
      Case "Button2Image"  
         e.Image = My.Resources.Image2  
   End Select  
End Sub  
```  
  
```csharp  
private void Ribbon1_LoadImage(object sender, RibbonLoadImageEventArgs e)  
{  
    switch (e.ImageName)  
    {  
        case "Button1Image":  
            e.Image = Properties.Resources.Image1;  
            break;  
        case "Button2Image":  
            e.Image = Properties.Resources.Image2;  
            break;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.IExtension.ExtensionBase">
      <MemberSignature Language="C#" Value="object Microsoft.Office.Tools.IExtension.ExtensionBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Microsoft.Office.Tools.IExtension.ExtensionBase" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Ribbon.RibbonBase.Microsoft#Office#Tools#IExtension#ExtensionBase" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Tools.IExtension.ExtensionBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Ribbon.RibbonBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 的名称。</summary>
        <value>一个字符串，包含此 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控件的名称将显示在 "**属性**" 窗口中。 它是 Microsoft Office 用来标识此<xref:Microsoft.Office.Tools.Ribbon.RibbonBase>的 ID, 它是代码中此<xref:Microsoft.Office.Tools.Ribbon.RibbonBase>实例的名称。  
  
 仅在某些情况下, 才能在运行时设置此属性。 有关详细信息, 请参阅[功能区对象模型概述](/visualstudio/vsto/ribbon-object-model-overview)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OfficeMenu">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Ribbon.RibbonOfficeMenu OfficeMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Ribbon.RibbonOfficeMenu OfficeMenu" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Ribbon.RibbonBase.OfficeMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Ribbon.RibbonOfficeMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个表示 Microsoft Office 菜单自定义项的 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonOfficeMenu" />。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonOfficeMenu" />，表示 Microsoft Office 菜单自定义项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Microsoft Office 菜单是单击 "**文件**" 选项卡时打开的菜单 (适用于 Microsoft Office 2010) 或 " **Microsoft Office" 按钮**(对于 2007 Microsoft Office 系统)。 只能使用功能区设计器将控件添加到 Microsoft Office 菜单。 有关详细信息，请参阅[如何：向 Backstage 视图](/visualstudio/vsto/how-to-add-controls-to-the-backstage-view)添加控件。  
  
 您可以通过使用<xref:Microsoft.Office.Tools.Ribbon.RibbonOfficeMenu.Items%2A> <xref:Microsoft.Office.Tools.Ribbon.RibbonBase.OfficeMenu%2A>属性公开的<xref:Microsoft.Office.Tools.Ribbon.RibbonOfficeMenu>实例的属性, 在运行时访问 Microsoft Office 菜单自定义项中的功能区控件的只读集合。  
  
   
  
## Examples  
 下面的示例获取 Microsoft Office 菜单自定义中自定义控件的数目。  
  
> [!NOTE]
>  若要运行此代码示例, 必须首先向 Office 项目添加**功能区 (可视化设计器)** 。 然后, 你可以在生成的功能区类中运行此代码。  
  
```vb  
Dim numControlsInOfficeMenu As Integer = Me.OfficeMenu.Items.Count  
```  
  
```csharp  
int numControlsInOfficeMenu = this.OfficeMenu.Items.Count;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Ribbon.RibbonComponent Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Ribbon.RibbonComponent Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Ribbon.RibbonBase.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Ribbon.RibbonComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个表示此 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonComponent" /> 的 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonComponent" /> 的父级的 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" />。</summary>
        <value>一个表示此 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonComponent" /> 的 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonComponent" /> 的父级的 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformDynamicLayout">
      <MemberSignature Language="C#" Value="public void PerformDynamicLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformDynamicLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Ribbon.RibbonBase.PerformDynamicLayout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 的 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonComponent" /> 具有一个动态父级（如动态菜单）且布局未挂起，则调用父控件的 <c>Microsoft.Office.Core.IRibbonUI.InvalidateControl</c> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果父级不是动态的, 则此方法将`Microsoft.Office.Core.IRibbonUI.InvalidateControl`调用当前控件的方法 (如果未挂起布局)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="public void PerformLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Ribbon.RibbonBase.PerformLayout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>刷新功能区用户界面。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由<xref:Microsoft.Office.Tools.Ribbon.RibbonComponent.ResumeLayout%2A>方法调用。  
  
 此方法在内部调用`Microsoft.Office.Core.IRibbonUI.Invalidate`方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeLayout">
      <MemberSignature Language="C#" Value="public void ResumeLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Ribbon.RibbonBase.ResumeLayout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取消 <see cref="M:Microsoft.Office.Tools.Ribbon.RibbonBase.SuspendLayout" /> 方法的效果。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:Microsoft.Office.Tools.Ribbon.RibbonBase.SuspendLayout%2A>你的应用程序有许多频繁更新的控件, 则调用可能会导致性能稍微提高。  
  
 更改每个控件的状态后, 可以调用<xref:Microsoft.Office.Tools.Ribbon.RibbonBase.ResumeLayout%2A>来允许刷新 UI。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeLayout">
      <MemberSignature Language="C#" Value="public void ResumeLayout (bool performLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeLayout(bool performLayout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Ribbon.RibbonBase.ResumeLayout(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="performLayout" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="performLayout">若要调用 <see cref="M:Microsoft.Office.Tools.Ribbon.RibbonBase.PerformLayout" /> 方法，请使用 <see langword="true" />。 若要启用 UI 刷新，而不调用 <see cref="M:Microsoft.Office.Tools.Ribbon.RibbonBase.PerformLayout" />，请使用 <see langword="false" />。</param>
        <summary>取消 <see cref="M:Microsoft.Office.Tools.Ribbon.RibbonBase.SuspendLayout" /> 方法的效果。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RibbonId">
      <MemberSignature Language="C#" Value="public string RibbonId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RibbonId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Ribbon.RibbonBase.RibbonId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于创建 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 类的此实例的功能区 ID。</summary>
        <value>用于创建 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 类的此实例的功能区 ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不应尝试设置此属性。  
  
 您可以使用<xref:Microsoft.Office.Tools.Ribbon.RibbonBase.RibbonType%2A>属性来获取与此<xref:Microsoft.Office.Tools.Ribbon.RibbonBase>实例关联的所有功能区 id。 属性只返回用于创建此<xref:Microsoft.Office.Tools.Ribbon.RibbonBase>实例的单个 ID。 <xref:Microsoft.Office.Tools.Ribbon.RibbonBase.RibbonId%2A> 例如, 你可以使用此属性来确定此功能区实例是否正在邮件组合项中显示。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RibbonType">
      <MemberSignature Language="C#" Value="public string RibbonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RibbonType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Ribbon.RibbonBase.RibbonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取功能区 ID 的逗号分隔的列表，这些功能区 ID 与此 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 实例相关联。</summary>
        <value>功能区 ID 的逗号分隔的列表，这些功能区 ID 与此 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 实例相关联。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Excel、Word 和 PowerPoint 通常在此属性中只有一个功能区 ID。 Outlook 可以有多个 id, 它们对应于特定<xref:Microsoft.Office.Tools.Ribbon.RibbonBase>实例有效的各种消息类。  
  
 设计器提供有效功能区 Id 的下拉列表。  
  
 功能区 Id 用于将功能区类与特定上下文窗口相关联。  
  
 此属性只能在功能区加载到 Office 应用程序中之前设置。 有关设置此属性的信息, 请参阅[功能区对象模型概述](/visualstudio/vsto/ribbon-object-model-overview)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RibbonUI">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IRibbonUI RibbonUI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IRibbonUI RibbonUI" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Ribbon.RibbonBase.RibbonUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IRibbonUI</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 Microsoft Office 应用程序提供给功能区扩展性代码的 <c>IRibbonUI</c> 实例。</summary>
        <value>Office 应用程序提供给功能区扩展性代码的<c>IRibbonUI</c>实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可用于更新功能区 UI。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFromScratch">
      <MemberSignature Language="C#" Value="public bool StartFromScratch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StartFromScratch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Ribbon.RibbonBase.StartFromScratch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否隐藏功能区上的所有内置选项卡和 Microsoft Office 菜单上的大部分命令，并且是否仅显示在此功能区项中定义的自定义项。</summary>
        <value>如果功能区仅显示在此功能区项中定义的自定义项，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性只能在功能区加载到 Office 应用程序中之前设置。 有关设置此属性的信息, 请参阅[功能区对象模型概述](/visualstudio/vsto/ribbon-object-model-overview)。  
  
 如果将此属性设置为`true`, 则不能在运行时更改自定义选项卡的可见性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendLayout">
      <MemberSignature Language="C#" Value="public void SuspendLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Ribbon.RibbonBase.SuspendLayout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>阻止 Microsoft Office 应用程序刷新功能区上的控件状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:Microsoft.Office.Tools.Ribbon.RibbonBase.SuspendLayout%2A>你的应用程序有许多频繁更新的控件, 则调用可能会导致性能稍微提高。  
  
 更改每个控件的状态后, 可以调用<xref:Microsoft.Office.Tools.Ribbon.RibbonBase.ResumeLayout%2A>来允许刷新 UI。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tabs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Office.Tools.Ribbon.RibbonTab&gt; Tabs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Office.Tools.Ribbon.RibbonTab&gt; Tabs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Ribbon.RibbonBase.Tabs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Office.Tools.Ribbon.RibbonTab&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonTab" /> 中 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonOfficeMenu" /> 对象的集合。</summary>
        <value><see cref="T:Microsoft.Office.Tools.Ribbon.RibbonTab" /> 中 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonOfficeMenu" /> 对象的集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Ribbon.RibbonBase.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与此 <see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" /> 关联的应用程序特定的数据。</summary>
        <value>一个<c></c>表示与此<see cref="T:Microsoft.Office.Tools.Ribbon.RibbonBase" />关联的应用程序特定数据的 system.object。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从类派生的`System.Object`任何类型都可以分配给此属性。 但是, 如果在 Visual Studio <xref:Microsoft.Office.Tools.Ribbon.RibbonBase.Tag%2A>的 "**属性**" 窗口中设置属性, 则只能分配文本。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
