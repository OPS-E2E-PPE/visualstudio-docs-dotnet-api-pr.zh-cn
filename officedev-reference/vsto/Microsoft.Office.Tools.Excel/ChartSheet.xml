<Type Name="ChartSheet" FullName="Microsoft.Office.Tools.Excel.ChartSheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d291255888639954a43ce49f7b602587922741af" />
    <Meta Name="ms.sourcegitcommit" Value="bb8a3a96823cedeffbdbcc0c41a8118399de8074" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="02/21/2018" />
    <Meta Name="ms.locfileid" Value="29435714" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ChartSheet : IDisposable, System.ComponentModel.IComponent, System.ComponentModel.ISupportInitialize, System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ChartSheet implements class System.ComponentModel.IComponent, class System.ComponentModel.ISupportInitialize, class System.IDisposable, class System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Tools.Excel.ChartSheet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IBindableComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0bc69504-5797-4291-8178-cef15cc18b98")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeIdentifier</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="99209-101">表示文档级 Excel 项目中的一个工作表，这些项目通过使用 Visual Studio 中的 Office 开发工具创建。</span>
      <span class="sxs-lookup">
        <span data-stu-id="99209-101">Represents a worksheet in document-level Excel projects created by using the Office development tools in Visual Studio.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-102">A<xref:Microsoft.Office.Tools.Excel.ChartSheet>表示图表工作表; 即，只包含一个图表工作表。</span><span class="sxs-lookup"><span data-stu-id="99209-102">A <xref:Microsoft.Office.Tools.Excel.ChartSheet> represents a chart sheet; that is, a worksheet that contains only a chart.</span></span> <span data-ttu-id="99209-103">如果你想要创建嵌入的图表中的工作表还包含其他项，例如单元格或其他控件，创建<xref:Microsoft.Office.Tools.Excel.Chart>相反。</span><span class="sxs-lookup"><span data-stu-id="99209-103">If you want to create an embedded chart in a worksheet that also contains other items, such as cells or other controls, create a <xref:Microsoft.Office.Tools.Excel.Chart> instead.</span></span>  
  
 <span data-ttu-id="99209-104">A<xref:Microsoft.Office.Tools.Excel.ChartSheet>提供与图表相关的所有功能本机<xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName>Excel 对象模型中的对象。</span><span class="sxs-lookup"><span data-stu-id="99209-104">A <xref:Microsoft.Office.Tools.Excel.ChartSheet> provides all the chart-related features of a native <xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName> object in the Excel object model.</span></span> <span data-ttu-id="99209-105">但是，<xref:Microsoft.Office.Tools.Excel.ChartSheet>还公开事件。</span><span class="sxs-lookup"><span data-stu-id="99209-105">However, a <xref:Microsoft.Office.Tools.Excel.ChartSheet> also exposes events.</span></span> <span data-ttu-id="99209-106">你可以创建<xref:Microsoft.Office.Tools.Excel.ChartSheet>仅在设计时的文档级项目中的对象。</span><span class="sxs-lookup"><span data-stu-id="99209-106">You can create <xref:Microsoft.Office.Tools.Excel.ChartSheet> objects only in a document-level project at design time.</span></span>  
  
 [!INCLUDE[vsto_interface](~/includes/vsto-interface-md.md)]  
  
## <a name="usage"></a><span data-ttu-id="99209-107">用法</span><span class="sxs-lookup"><span data-stu-id="99209-107">Usage</span></span>  
 [!INCLUDE[vsto_net35mref](~/includes/vsto-net35mref-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_ApplyDataLabels">
      <MemberSignature Language="C#" Value="public void _ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _ApplyDataLabels(valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, object LegendKey, object AutoText, object HasLeaderLines) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="LegendKey">To be added.</param>
        <param name="AutoText">To be added.</param>
        <param name="HasLeaderLines">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet._CodeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy23">
      <MemberSignature Language="C#" Value="public void _Dummy23 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy23() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet._Dummy23" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate(object Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet._Evaluate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut(object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect(object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="DrawingObjects">To be added.</param>
        <param name="Contents">To be added.</param>
        <param name="Scenarios">To be added.</param>
        <param name="UserInterfaceOnly">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs(string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_VtblGap1_1">
      <MemberSignature Language="C#" Value="public void _VtblGap1_1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void _VtblGap1_1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet._VtblGap1_1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_VtblGap2_1">
      <MemberSignature Language="C#" Value="public void _VtblGap2_1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void _VtblGap2_1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet._VtblGap2_1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_VtblGap3_1">
      <MemberSignature Language="C#" Value="public void _VtblGap3_1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void _VtblGap3_1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet._VtblGap3_1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_VtblGap4_2">
      <MemberSignature Language="C#" Value="public void _VtblGap4_2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void _VtblGap4_2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet._VtblGap4_2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_VtblGap5_1">
      <MemberSignature Language="C#" Value="public void _VtblGap5_1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void _VtblGap5_1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet._VtblGap5_1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_VtblGap6_1">
      <MemberSignature Language="C#" Value="public void _VtblGap6_1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void _VtblGap6_1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet._VtblGap6_1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Activate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="99209-108">使当前 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 成为活动图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-108">Makes the current <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> the active chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateEvent">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler ActivateEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler ActivateEvent" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheet.ActivateEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-109">当激活 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-109">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> is activated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-110">下面的代码示例演示的处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheet.ActivateEvent>显示一条消息的事件框中时当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>激活。</span><span class="sxs-lookup"><span data-stu-id="99209-110">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ActivateEvent> event that displays a message box when the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> is activated.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#200](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#200)]
 [!code-vb[Trin_ExcelChartSheet#200](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#200)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-111">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Application" />，它表示 Microsoft Office Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-111">Gets an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Microsoft Office Excel application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-112">一个 <see cref="T:Microsoft.Office.Interop.Excel.Application" />，表示 Microsoft Office Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-112">An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Microsoft Office Excel application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-113">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Application%2A>属性的当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>来在消息框中显示的应用程序名称。</span><span class="sxs-lookup"><span data-stu-id="99209-113">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Application%2A> property of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to display the application name in a message box.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#1](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#1)]
 [!code-vb[Trin_ExcelChartSheet#1](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyChartTemplate">
      <MemberSignature Language="C#" Value="public void ApplyChartTemplate (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyChartTemplate(string Filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.ApplyChartTemplate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="99209-114">图表模板的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-114">The file name for a chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-115">将标准或自定义图表模板应用于图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-115">Applies a standard or custom chart template to the chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCustomType">
      <MemberSignature Language="C#" Value="public void ApplyCustomType (Microsoft.Office.Interop.Excel.XlChartType ChartType, object TypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCustomType(valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType, object TypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ChartType" Type="Microsoft.Office.Interop.Excel.XlChartType" />
        <Parameter Name="TypeName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ChartType">To be added.</param>
        <param name="TypeName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDataLabels">
      <MemberSignature Language="C#" Value="public void ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines, object ShowSeriesName, object ShowCategoryName, object ShowValue, object ShowPercentage, object ShowBubbleSize, object Separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDataLabels(valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, object LegendKey, object AutoText, object HasLeaderLines, object ShowSeriesName, object ShowCategoryName, object ShowValue, object ShowPercentage, object ShowBubbleSize, object Separator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
        <Parameter Name="ShowSeriesName" Type="System.Object" />
        <Parameter Name="ShowCategoryName" Type="System.Object" />
        <Parameter Name="ShowValue" Type="System.Object" />
        <Parameter Name="ShowPercentage" Type="System.Object" />
        <Parameter Name="ShowBubbleSize" Type="System.Object" />
        <Parameter Name="Separator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="99209-116">要应用的数据标签的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-116">The type of data label to apply.</span>
          </span>
        </param>
        <param name="LegendKey">
          <span data-ttu-id="99209-117">为 <see langword="true" /> 时，在点旁边显示图例项标示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-117">
              <see langword="true" /> to show the legend key next to the point.</span>
          </span>
          <span data-ttu-id="99209-118">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-118">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="AutoText">
          <span data-ttu-id="99209-119">如果对象自动根据内容生成适当的文本，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-119">
              <see langword="true" /> if the object automatically generates appropriate text based on content.</span>
          </span>
        </param>
        <param name="HasLeaderLines">
          <span data-ttu-id="99209-120">对于 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 和 <see cref="T:Microsoft.Office.Interop.Excel.Series" /> 对象而言，如果系列包含引导线，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-120">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, <see langword="true" /> if the series has leader lines.</span>
          </span>
        </param>
        <param name="ShowSeriesName">
          <span data-ttu-id="99209-121">数据标签的系列名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-121">The series name for the data label.</span>
          </span>
        </param>
        <param name="ShowCategoryName">
          <span data-ttu-id="99209-122">数据标签的类别名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-122">The category name for the data label.</span>
          </span>
        </param>
        <param name="ShowValue">
          <span data-ttu-id="99209-123">数据标签的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-123">The value for the data label.</span>
          </span>
        </param>
        <param name="ShowPercentage">
          <span data-ttu-id="99209-124">数据标签的百分比。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-124">The percentage for the data label.</span>
          </span>
        </param>
        <param name="ShowBubbleSize">
          <span data-ttu-id="99209-125">数据标签的气泡大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-125">The bubble size for the data label.</span>
          </span>
        </param>
        <param name="Separator">
          <span data-ttu-id="99209-126">数据标签的分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-126">The separator for the data label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-127">将数据标签应用于 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 中的点、系列或所有系列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-127">Applies data labels to a point, a series, or all the series in a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-128">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-128">Optional Parameters</span></span>  
 <span data-ttu-id="99209-129">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-129">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-130">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.ApplyDataLabels%2A>方法来在当前显示的数据值<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-130">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ApplyDataLabels%2A> method to show the data values in the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#101](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#101)]
 [!code-vb[Trin_ExcelChartSheet#101](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyLayout">
      <MemberSignature Language="C#" Value="public void ApplyLayout (int Layout, object ChartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyLayout(int32 Layout, object ChartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.ApplyLayout(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Layout" Type="System.Int32" />
        <Parameter Name="ChartType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Layout">
          <span data-ttu-id="99209-131">1 到 10 之间的一个整数，用于指定要应用于图表的布局的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-131">An integer from 1 through 10 that specifies the type of layout to apply to the chart.</span>
          </span>
        </param>
        <param name="ChartType">To be added.</param>
        <summary>
          <span data-ttu-id="99209-132">将指定的布局应用于图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-132">Applies the specified layout to the chart.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-133">值`Layout`参数对应于可用的选项上**图表布局**组**设计**功能区上的选项卡。</span><span class="sxs-lookup"><span data-stu-id="99209-133">The values of the `Layout` parameter correspond to the available options on the **Chart Layouts** group on the **Design** tab on the Ribbon.</span></span> <span data-ttu-id="99209-134">**设计**选项卡选择图表后可用。</span><span class="sxs-lookup"><span data-stu-id="99209-134">The **Design** tab is available when you select a chart.</span></span>  
  
 <span data-ttu-id="99209-135">每个类型的图表有自己的布局选项集。</span><span class="sxs-lookup"><span data-stu-id="99209-135">Each type of chart has its own set of layout options.</span></span> <span data-ttu-id="99209-136">例如，饼图的布局选项是柱形图的布局选项不同。</span><span class="sxs-lookup"><span data-stu-id="99209-136">For example, the layout options for a pie chart are different from the layout options for a column chart.</span></span> <span data-ttu-id="99209-137">如果你想要从不同的图表类型应用布局，则可以使用`ChartType`参数来指定图表键入`Layout`参数将引用。</span><span class="sxs-lookup"><span data-stu-id="99209-137">If you want to apply a layout from a different chart type, you can use the `ChartType` parameter to specify the chart type that the `Layout` parameter will refer to.</span></span> <span data-ttu-id="99209-138">例如，如果你有一个柱形图和你想要从折线图应用布局、 传递<xref:Microsoft.Office.Interop.Excel.XlChartType.xlLine?displayProperty=fullName>值赋给`ChartType`参数。</span><span class="sxs-lookup"><span data-stu-id="99209-138">For example, if you have a column chart and you want to apply a layout from a line chart, pass the <xref:Microsoft.Office.Interop.Excel.XlChartType.xlLine?displayProperty=fullName> value to the `ChartType` parameter.</span></span> <span data-ttu-id="99209-139">布局将只添加可用于该特定的图表类型的图表元素。</span><span class="sxs-lookup"><span data-stu-id="99209-139">The layout only adds chart elements that are available for that particular chart type.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-140">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-140">Optional Parameters</span></span>  
 <span data-ttu-id="99209-141">有关可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-141">For information about optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-142">下面的代码示例应用可用于图表工作表中的图图表类型的第 10 个布局`Chart1`。</span><span class="sxs-lookup"><span data-stu-id="99209-142">The following code example applies the tenth layout that is available for the chart type of the chart in chart sheet `Chart1`.</span></span> <span data-ttu-id="99209-143">此外，该示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.SetElement%2A>方法应用更多布局更改： 设置图表标题为居中且位于图表网格区域内的样式、 添加的水平轴的标题以及添加垂直轴的旋转的标题。</span><span class="sxs-lookup"><span data-stu-id="99209-143">In addition, the example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.SetElement%2A> method to apply further layout changes: setting the style of the chart title to be centered and to lie inside the chart grid area, adding a title for the horizontal axis, and adding a rotated title for the vertical axis.</span></span> <span data-ttu-id="99209-144">若要运行此代码示例，你的工作簿必须包含名为簇状的柱形二维图表工作表`Chart1`。</span><span class="sxs-lookup"><span data-stu-id="99209-144">To run this code example, your workbook must contain a clustered column two-dimensional chart sheet named `Chart1`.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkBook_Additional#18](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#18)]
 [!code-vb[Trin_ExcelWorkBook_Additional#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arcs(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Arcs(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Area3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Area3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreaGroups">
      <MemberSignature Language="C#" Value="public object AreaGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AreaGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.AreaGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public void AutoFormat (int Gallery, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AutoFormat(int32 Gallery, object Format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.AutoFormat(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Gallery" Type="System.Int32" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Gallery">To be added.</param>
        <param name="Format">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaling">
      <MemberSignature Language="C#" Value="public bool AutoScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScaling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.AutoScaling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-145">获取一个值，该值指示 Microsoft Office Excel 是否缩放三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 以使其大小更接近于等效的二维图表的大小</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-145">Gets a value that indicates whether Microsoft Office Excel scales a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> so that it is closer in size to the equivalent 2-D chart</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-146">如果 Microsoft Office Excel 缩放三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 以使其大小更接近于等效的二维图表的大小，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-146">
              <see langword="true" /> if Microsoft Office Excel scales a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> so that it is closer in size to the equivalent 2-D chart.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-147"><xref:Microsoft.Office.Tools.Excel.ChartSheet.RightAngleAxes%2A> 属性必须为 `true`。</span><span class="sxs-lookup"><span data-stu-id="99209-147">The <xref:Microsoft.Office.Tools.Excel.ChartSheet.RightAngleAxes%2A> property must be `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Axes">
      <MemberSignature Language="C#" Value="public object Axes (object Type, Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup = Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Axes(object Type, valuetype Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Axes(System.Object,Microsoft.Office.Interop.Excel.XlAxisGroup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="AxisGroup" Type="Microsoft.Office.Interop.Excel.XlAxisGroup" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="99209-148">指定要返回的轴。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-148">Specifies the axis to return.</span>
          </span>
          <span data-ttu-id="99209-149">可以为以下 <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlValue" />、<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" />（<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" /> 只对三维图表有效）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-149">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlValue" />, <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" /> (<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" /> is valid only for 3-D charts).</span>
          </span>
        </param>
        <param name="AxisGroup">
          <span data-ttu-id="99209-150">指定轴组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-150">Specifies the axis group.</span>
          </span>
          <span data-ttu-id="99209-151">如果省略此参数，则使用主轴组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-151">If this argument is omitted, the primary group is used.</span>
          </span>
          <span data-ttu-id="99209-152">三维图表只有一个轴组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-152">3-D charts have only one axis group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-153">获取一个对象，该对象表示图表上的一个轴或一个轴集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-153">Gets an object that represents either a single axis or a collection of the axes on the chart.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-154">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-154">Optional Parameters</span></span>  
 <span data-ttu-id="99209-155">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-155">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-156">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Axes%2A>方法以设置当前的主轴标题<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-156">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Axes%2A> method to set the title of the primary axis of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#103](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#103)]
 [!code-vb[Trin_ExcelChartSheet#103](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls BackWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls BackWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.BackWall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-157">获取一个对象，该对象表示三维图表的背面墙。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-157">Gets an object that represents the back wall of a 3-D chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-158">一个 <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，表示三维图表的背面墙。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-158">A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the back wall of a 3-D chart.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-159">使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.BackWall%2A>后三维图表的墙进行格式设置的属性。</span><span class="sxs-lookup"><span data-stu-id="99209-159">Use the <xref:Microsoft.Office.Tools.Excel.ChartSheet.BackWall%2A> property to format the back wall of a 3-D chart.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-160">下面的代码示例指定墙和现有的三维图表工作表下限的颜色，并设置样式为样式 4 的图表。</span><span class="sxs-lookup"><span data-stu-id="99209-160">The following code example specifies the colors of the walls and floor of an existing 3-D chart sheet and sets the chart style to style 4.</span></span> <span data-ttu-id="99209-161">若要运行此代码示例，该工作簿必须包含图表工作表调用`Chart1`的三维类型。</span><span class="sxs-lookup"><span data-stu-id="99209-161">To run this code example, the workbook must contain a chart sheet called `Chart1` of a 3-D type.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkbook_Additional#38](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#38)]
 [!code-vb[Trin_ExcelWorkbook_Additional#38](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bar3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Bar3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarGroups">
      <MemberSignature Language="C#" Value="public object BarGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BarGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.BarGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlBarShape BarShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlBarShape BarShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.BarShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlBarShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-162">获取或设置用于三维条形或柱形 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-162">Gets or sets the shape used with the 3-D bar or column <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-163">
            <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-163">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-164">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.BarShape%2A>属性的当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>以显示类似于圆柱的条形图。</span><span class="sxs-lookup"><span data-stu-id="99209-164">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.BarShape%2A> property of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to display the bars as cylinders.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#4)]
 [!code-vb[Trin_ExcelChartSheet#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeDoubleClick">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler BeforeDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler BeforeDoubleClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheet.BeforeDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-165">在双击 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 时，但在默认双击操作之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-165">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> is double-clicked, before the default double-click action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-166"><xref:Microsoft.Office.Interop.Excel._Application.DoubleClick%2A>方法不会导致此事件发生。</span><span class="sxs-lookup"><span data-stu-id="99209-166">The <xref:Microsoft.Office.Interop.Excel._Application.DoubleClick%2A> method does not cause this event to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-167">下面的代码示例演示的处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheet.BeforeDoubleClick>时显示一个消息框轴的当前事件<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>双击。</span><span class="sxs-lookup"><span data-stu-id="99209-167">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheet.BeforeDoubleClick> event that displays a message box when an axis of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> is double-clicked.</span></span> <span data-ttu-id="99209-168">该示例还将`Cancel`的事件处理程序参数`true`，以便当用户双击轴，该图表工作表不会收到双击操作。</span><span class="sxs-lookup"><span data-stu-id="99209-168">The example also sets the `Cancel` parameter of the event handler to `true` so that the chart sheet does not receive the double click action when the user double-clicks an axis.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#201](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#201)]
 [!code-vb[Trin_ExcelChartSheet#201](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#201)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeRightClick">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler BeforeRightClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler BeforeRightClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheet.BeforeRightClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-169">在右击 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 时，但在默认右击操作之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-169">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> is right-clicked, before the default right-click action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-170">下面的代码示例演示的处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheet.BeforeRightClick>显示一条消息的事件框中时当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>右键单击。</span><span class="sxs-lookup"><span data-stu-id="99209-170">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheet.BeforeRightClick> event that displays a message box when the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> is right-clicked.</span></span> <span data-ttu-id="99209-171">该示例还将`Cancel`的事件处理程序参数`true`，因此该图表工作表不会收到右键单击操作。</span><span class="sxs-lookup"><span data-stu-id="99209-171">The example also sets the `Cancel` parameter of the event handler to `true` so that the chart sheet does not receive the right click action.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#202](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#202)]
 [!code-vb[Trin_ExcelChartSheet#202](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#202)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheet.BindingContextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Buttons(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Buttons(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler Calculate;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler Calculate" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheet.Calculate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-172">在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 绘制新的或更改的数据后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-172">Occurs after the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> plots new or changed data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-173">下面的代码示例演示的处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheet.Calculate>显示一条消息的事件框中时的当前的源数据<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>更改。</span><span class="sxs-lookup"><span data-stu-id="99209-173">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Calculate> event that displays a message box when the source data of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> changes.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#203](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#203)]
 [!code-vb[Trin_ExcelChartSheet#203](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#203)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartArea ChartArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartArea ChartArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-174">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" />，它表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的完整图表区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-174">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> that represents the complete chart area for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-175">一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的完整图表区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-175">A <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> that represents the complete chart area for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-176">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.ChartArea%2A>属性的当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>要修改的权重和图表区边框的颜色。</span><span class="sxs-lookup"><span data-stu-id="99209-176">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ChartArea%2A> property of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to modify the weight and color of the chart area border.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#5](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#5)]
 [!code-vb[Trin_ExcelChartSheet#5](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartGroups">
      <MemberSignature Language="C#" Value="public object ChartGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.ChartGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="99209-177">图表组编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-177">The chart group number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-178">获取一个对象，该对象表示单个图表组（<see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> 对象）或图表中所有图表组的集合（<see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> 对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-178">Gets an object that represents either a single chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of all the chart groups in the chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> object).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-179">返回的集合包括所有类型的组。</span><span class="sxs-lookup"><span data-stu-id="99209-179">The returned collection includes every type of group.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-180">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-180">Optional Parameters</span></span>  
 <span data-ttu-id="99209-181">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-181">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-182">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.ChartGroups%2A>方法以设置当前的栏之间的距离<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-182">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ChartGroups%2A> method to set the distance between the bars of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#105](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#105)]
 [!code-vb[Trin_ExcelChartSheet#105](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartObjects(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.ChartObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="99209-183">
            <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的名称或编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-183">The name or number of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
          <span data-ttu-id="99209-184">此参数可以是一个数组，以指定多个图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-184">This argument can be an array, to specify more than one chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-185">获取一个对象，该对象表示工作表上的单个嵌入式图表（<see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> 对象）或所有嵌入式图表的集合（<see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> 对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-185">Gets an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-186">此方法不是等效于<xref:Microsoft.Office.Interop.Excel._Workbook.Charts%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="99209-186">This method is not equivalent to the <xref:Microsoft.Office.Interop.Excel._Workbook.Charts%2A> property.</span></span> <span data-ttu-id="99209-187">此方法返回嵌入的图表;<xref:Microsoft.Office.Interop.Excel._Workbook.Charts%2A>属性返回图表工作表。</span><span class="sxs-lookup"><span data-stu-id="99209-187">This method returns embedded charts; the <xref:Microsoft.Office.Interop.Excel._Workbook.Charts%2A> property returns chart sheets.</span></span> <span data-ttu-id="99209-188">使用<xref:Microsoft.Office.Interop.Excel.ChartObject.Chart%2A>属性以返回<xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName>嵌入图表的对象。</span><span class="sxs-lookup"><span data-stu-id="99209-188">Use the <xref:Microsoft.Office.Interop.Excel.ChartObject.Chart%2A> property to return the <xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName> object for an embedded chart.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-189">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-189">Optional Parameters</span></span>  
 <span data-ttu-id="99209-190">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-190">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-191">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.ChartObjects%2A>方法以显示是否嵌入图表的集合由 Microsoft Office Excel。</span><span class="sxs-lookup"><span data-stu-id="99209-191">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ChartObjects%2A> method to display whether the collection of embedded charts was created by Microsoft Office Excel.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#106](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#106)]
 [!code-vb[Trin_ExcelChartSheet#106](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartStyle">
      <MemberSignature Language="C#" Value="public object ChartStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChartStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ChartStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-192">获取或设置图表的样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-192">Gets or sets the style of the chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-193">1 到 48 之间的一个整数，用于表示图表的样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-193">An integer from 1 through 48 that represents the style of the chart.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-194">值<xref:Microsoft.Office.Tools.Excel.ChartSheet.ChartStyle%2A>上的属性对应于可用的选项**图表样式**组**设计**功能区上的选项卡。</span><span class="sxs-lookup"><span data-stu-id="99209-194">The values of the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ChartStyle%2A> property correspond to the available options on the **Chart Styles** group on the **Design** tab on the Ribbon.</span></span> <span data-ttu-id="99209-195">**设计**选项卡选择图表后可用。</span><span class="sxs-lookup"><span data-stu-id="99209-195">The **Design** tab is available when you select a chart.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-196">下面的代码示例指定墙和现有的三维图表工作表下限的颜色，并设置样式为样式 4 的图表。</span><span class="sxs-lookup"><span data-stu-id="99209-196">The following code example specifies the colors of the walls and floor of an existing 3-D chart sheet and sets the chart style to style 4.</span></span> <span data-ttu-id="99209-197">若要运行此代码示例，该工作簿必须包含图表工作表调用`Chart1`的三维类型。</span><span class="sxs-lookup"><span data-stu-id="99209-197">To run this code example, the workbook must contain a chart sheet called `Chart1` of a 3-D type.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkbook_Additional#38](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#38)]
 [!code-vb[Trin_ExcelWorkbook_Additional#38](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartTitle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartTitle ChartTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartTitle ChartTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ChartTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartTitle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-198">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" />，它表示指定 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-198">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> that represents the title of the specified <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-199">一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" />，表示指定 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-199">A <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> that represents the title of the specified <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-200">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.ChartTitle%2A>属性的当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>修改标题的字体颜色。</span><span class="sxs-lookup"><span data-stu-id="99209-200">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ChartTitle%2A> property of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to modify the font color of the title.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#6](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#6)]
 [!code-vb[Trin_ExcelChartSheet#6](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ChartType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-201">获取或设置 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-201">Gets or sets the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-202">
            <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-202">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-203">某些图表类型将不可用的数据透视图报表。</span><span class="sxs-lookup"><span data-stu-id="99209-203">Some chart types are not available for PivotChart reports.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-204">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.ChartType%2A>属性来设置类型与当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>为三维簇状条形图。</span><span class="sxs-lookup"><span data-stu-id="99209-204">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ChartType%2A> property to set the type of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to a 3-D clustered bar chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#7](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#7)]
 [!code-vb[Trin_ExcelChartSheet#7](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartWizard">
      <MemberSignature Language="C#" Value="public void ChartWizard (object Source, object Gallery, object Format, object PlotBy, object CategoryLabels, object SeriesLabels, object HasLegend, object Title, object CategoryTitle, object ValueTitle, object ExtraTitle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChartWizard(object Source, object Gallery, object Format, object PlotBy, object CategoryLabels, object SeriesLabels, object HasLegend, object Title, object CategoryTitle, object ValueTitle, object ExtraTitle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="PlotBy" Type="System.Object" />
        <Parameter Name="CategoryLabels" Type="System.Object" />
        <Parameter Name="SeriesLabels" Type="System.Object" />
        <Parameter Name="HasLegend" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="CategoryTitle" Type="System.Object" />
        <Parameter Name="ValueTitle" Type="System.Object" />
        <Parameter Name="ExtraTitle" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="99209-205">包含新图表的源数据的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-205">The range that contains the source data for the new chart.</span>
          </span>
          <span data-ttu-id="99209-206">如果省略此参数，则 Microsoft Office Excel 编辑活动图表工作表或在活动工作表上所选择的图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-206">If this argument is omitted, Microsoft Office Excel edits the active chart sheet or the selected chart on the active worksheet.</span>
          </span>
        </param>
        <param name="Gallery">
          <span data-ttu-id="99209-207">图表类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-207">The chart type.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="99209-208">内置自动套用格式的选项编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-208">The option number for the built-in autoformats.</span>
          </span>
          <span data-ttu-id="99209-209">可以是一个 1 到 10 之间的数（取决于库类型）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-209">Can be a number from 1 through 10, depending on the gallery type.</span>
          </span>
          <span data-ttu-id="99209-210">如果省略此参数，则 Microsoft Office Excel 根据库类型和数据源选择默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-210">If this argument is omitted, Microsoft Office Excel chooses a default value based on the gallery type and data source.</span>
          </span>
        </param>
        <param name="PlotBy">
          <span data-ttu-id="99209-211">指定每个系列的数据是按行绘制还是按列绘制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-211">Specifies whether the data for each series is in rows or columns.</span>
          </span>
          <span data-ttu-id="99209-212">可以是下列 <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-212">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" />.</span>
          </span>
        </param>
        <param name="CategoryLabels">
          <span data-ttu-id="99209-213">一个整数，指定源范围中包含类别标签的行数或列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-213">An integer specifying the number of rows or columns within the source range that contain category labels.</span>
          </span>
          <span data-ttu-id="99209-214">合法值是从 0（零）到相应类别或系列的最大数减一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-214">Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</span>
          </span>
        </param>
        <param name="SeriesLabels">
          <span data-ttu-id="99209-215">源范围中包含系列标签的行数或列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-215">The number of rows or columns within the source range that contain series labels.</span>
          </span>
          <span data-ttu-id="99209-216">合法值是从 0（零）到相应类别或系列的最大数减一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-216">Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</span>
          </span>
        </param>
        <param name="HasLegend">
          <span data-ttu-id="99209-217">为 <see langword="true" /> 时包含图例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-217">
              <see langword="true" /> to include a legend.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="99209-218">图表标题文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-218">The chart title text.</span>
          </span>
        </param>
        <param name="CategoryTitle">
          <span data-ttu-id="99209-219">分类轴标题文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-219">The category axis title text.</span>
          </span>
        </param>
        <param name="ValueTitle">
          <span data-ttu-id="99209-220">数值轴标题文本</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-220">The value axis title text</span>
          </span>
        </param>
        <param name="ExtraTitle">
          <span data-ttu-id="99209-221">三维图表的系列轴标题或二维图表的第二个数值轴标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-221">The series axis title for 3-D charts or the second value axis title for 2-D charts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-222">修改给定 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-222">Modifies the properties of the given <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-223">你可以使用此方法来快速设置的格式<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>而无需设置所有单独的属性。</span><span class="sxs-lookup"><span data-stu-id="99209-223">You can use this method to quickly format a <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> without setting all the individual properties.</span></span> <span data-ttu-id="99209-224">此方法是非交互式的，它只更改指定的属性。</span><span class="sxs-lookup"><span data-stu-id="99209-224">This method is non-interactive, and it changes only the specified properties.</span></span>  
  
 <span data-ttu-id="99209-225">如果`Source`省略和任何一种选择不是在活动工作表或在活动工作表上的嵌入的图表不是现有图表，此方法将失败，发生错误。</span><span class="sxs-lookup"><span data-stu-id="99209-225">If `Source` is omitted and either the selection is not an embedded chart on the active worksheet or the active sheet is not an existing chart, this method fails and an error occurs.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-226">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-226">Optional Parameters</span></span>  
 <span data-ttu-id="99209-227">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-227">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-228">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.ChartWizard%2A>方法以设置数据源和图表类型与当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-228">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ChartWizard%2A> method to set the data source and the chart type of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#107](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#107)]
 [!code-vb[Trin_ExcelChartSheet#107](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckBoxes(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.CheckBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling(object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">
          <span data-ttu-id="99209-229">一个字符串，指示未在主字典中找到单词时要检查的自定义字典的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-229">A string that indicates the file name of the custom dictionary to be examined if the word is not found in the main dictionary.</span>
          </span>
          <span data-ttu-id="99209-230">如果省略此参数，则使用当前指定的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-230">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="99209-231">
            <see langword="true" /> 表示使 Microsoft Office Excel 忽略全部大写的单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-231">
              <see langword="true" /> to have Microsoft Office Excel ignore words that are all uppercase.</span>
          </span>
          <span data-ttu-id="99209-232">为 <see langword="false" /> 可使 Microsoft Office Excel 检查全部大写的单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-232">
              <see langword="false" /> to have Microsoft Office Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="99209-233">如果省略此参数，则使用当前设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-233">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="AlwaysSuggest">
          <span data-ttu-id="99209-234">
            <see langword="true" /> 表示当发现不正确的拼写时让 Excel 显示建议的替换拼写列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-234">
              <see langword="true" /> to have Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span>
          </span>
          <span data-ttu-id="99209-235">如果为 <see langword="false" />，则使 Excel 等待您输入正确的拼写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-235">
              <see langword="false" /> to have Excel wait for you to input the correct spelling.</span>
          </span>
          <span data-ttu-id="99209-236">如果省略此参数，则使用当前设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-236">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="SpellLang">
          <span data-ttu-id="99209-237">所使用的字典的语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-237">The language of the dictionary being used.</span>
          </span>
          <span data-ttu-id="99209-238">可以为 <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> 属性使用的 <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-238">Can be one of the <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-239">检查 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的拼写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-239">Checks the spelling of an <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-240">Microsoft Office Excel 显示**拼写**对话框</span><span class="sxs-lookup"><span data-stu-id="99209-240">Microsoft Office Excel displays the **Spelling** dialog box</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-241">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-241">Optional Parameters</span></span>  
 <span data-ttu-id="99209-242">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-242">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-243">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.CheckSpelling%2A>方法来检查在当前的拼写<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>使用美国英语字典。</span><span class="sxs-lookup"><span data-stu-id="99209-243">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.CheckSpelling%2A> method to check the spelling in the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> using the US English dictionary.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#108](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#108)]
 [!code-vb[Trin_ExcelChartSheet#108](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearToMatchStyle">
      <MemberSignature Language="C#" Value="public void ClearToMatchStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearToMatchStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.ClearToMatchStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="99209-244">清除格式设置为自动的图表元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-244">Clears the chart elements formatting to automatic.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-245">使用此方法重置为自动格式设置的图表元素。</span><span class="sxs-lookup"><span data-stu-id="99209-245">Use this method to reset the chart elements formatting to automatic.</span></span> <span data-ttu-id="99209-246">如果使用此方法时，所有格式 （包括替代） 将重置。</span><span class="sxs-lookup"><span data-stu-id="99209-246">If you use this method, all formatting (including overrides) will be reset.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.CodeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Column3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnGroups">
      <MemberSignature Language="C#" Value="public object ColumnGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ColumnGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.ColumnGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy(object Before, object After) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Copy(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="99209-247">将在其之前放置复制表的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-247">The sheet before which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="99209-248">如果指定 <c>After</c>，则不能指定 <c>Before</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-248">You cannot specify <c>Before</c> if you specify <c>After</c>.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="99209-249">将在其之后放置复制表的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-249">The sheet after which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="99209-250">如果指定 <c>Before</c>，则不能指定 <c>After</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-250">You cannot specify <c>After</c> if you specify <c>Before</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-251">将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 复制到工作簿中的另一位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-251">Copies the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-252">如果不指定`Before`或`After`，Microsoft Office Excel 创建新的工作簿包含复制的表。</span><span class="sxs-lookup"><span data-stu-id="99209-252">If you do not specify either `Before` or `After`, Microsoft Office Excel creates a new workbook that contains the copied sheet.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-253">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-253">Optional Parameters</span></span>  
 <span data-ttu-id="99209-254">新工作表是<xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName>，其中包含一个图表，没有代码或数据绑定功能，<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>具有。</span><span class="sxs-lookup"><span data-stu-id="99209-254">The new worksheet is a <xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName> that contains a chart and does not have code or data binding capability that the <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> has.</span></span>  
  
 <span data-ttu-id="99209-255">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-255">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-256">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Copy%2A>方法复制当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>到新工作表在工作表之前位于`Sheet3`。</span><span class="sxs-lookup"><span data-stu-id="99209-256">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Copy%2A> method to copy the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to a new worksheet located before worksheet `Sheet3`.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#110](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#110)]
 [!code-vb[Trin_ExcelChartSheet#110](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyChartBuild">
      <MemberSignature Language="C#" Value="public void CopyChartBuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyChartBuild() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.CopyChartBuild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public void CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture, Microsoft.Office.Interop.Excel.XlPictureAppearance Size = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPicture(valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format, valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat,Microsoft.Office.Interop.Excel.XlPictureAppearance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
        <Parameter Name="Size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
      </Parameters>
      <Docs>
        <param name="Appearance">
          <span data-ttu-id="99209-257">指定复制图片的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-257">Specifies how the picture should be copied.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="99209-258">该图片的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-258">The format of the picture.</span>
          </span>
        </param>
        <param name="Size">
          <span data-ttu-id="99209-259">对象为图表工作表上的图表（未嵌入在工作表上）上时复制的图片的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-259">The size of the copied picture when the object is a chart on a chart sheet (not embedded on a worksheet).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-260">将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 作为图片复制到剪贴板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-260">Copies the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> to the Clipboard as a picture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-261">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-261">Optional Parameters</span></span>  
 <span data-ttu-id="99209-262">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-262">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-263">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.CopyPicture%2A>方法复制当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>到剪贴板以位图格式。</span><span class="sxs-lookup"><span data-stu-id="99209-263">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.CopyPicture%2A> method to copy the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to the clipboard as a bitmap.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#111](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#111)]
 [!code-vb[Trin_ExcelChartSheet#111](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#111)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Corners">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Corners Corners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Corners Corners" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Corners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Corners</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public void CreatePublisher (object Edition, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlPictureAppearance Size = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreatePublisher(object Edition, valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Size, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ContainsPICT" Type="System.Object" />
        <Parameter Name="ContainsBIFF" Type="System.Object" />
        <Parameter Name="ContainsRTF" Type="System.Object" />
        <Parameter Name="ContainsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Edition">To be added.</param>
        <param name="Appearance">To be added.</param>
        <param name="Size">To be added.</param>
        <param name="ContainsPICT">To be added.</param>
        <param name="ContainsBIFF">To be added.</param>
        <param name="ContainsRTF">To be added.</param>
        <param name="ContainsVALU">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-264">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 代码，该代码指示在其中创建 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-264">Gets an <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> code that indicates the application in which the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-265">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-265">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-266">因为<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>创建在 Microsoft Office Excel 中，此属性将返回字符串接，这等同于十六进制数字 5843454c。</span><span class="sxs-lookup"><span data-stu-id="99209-266">Because the <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> was created in Microsoft Office Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataHost">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.ICachedDataProvider DataHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.ICachedDataProvider DataHost" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.DataHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.ICachedDataProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataTable DataTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataTable DataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.DataTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-267">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 数据表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-267">Gets a <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> object that represents the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> data table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-268">一个 <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 数据表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-268">A <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> object that represents the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> data table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-269">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.DataTable%2A>属性的当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>要在图表中以边框大纲显示数据的表。</span><span class="sxs-lookup"><span data-stu-id="99209-269">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.DataTable%2A> property of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to display a data table in the chart with a border outline.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#9)]
 [!code-vb[Trin_ExcelChartSheet#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler Deactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler Deactivate" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheet.Deactivate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-270">在从 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 移走所选内容以使 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 停用时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-270">Occurs when the selection moves away from the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />, causing the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> to become deactivated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-271">下面的代码示例演示的处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheet.Deactivate>显示一条消息的事件框中时当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>停用。</span><span class="sxs-lookup"><span data-stu-id="99209-271">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Deactivate> event that displays a message box when the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> is deactivated.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#204](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#204)]
 [!code-vb[Trin_ExcelChartSheet#204](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#204)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultExtension">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Excel.IChartSheetExtension DefaultExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Excel.IChartSheetExtension DefaultExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.DefaultExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.IChartSheetExtension</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-272">获取此 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 对象的默认扩展。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-272">Gets the default extension for this <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-273">此 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 对象的默认扩展。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-273">The default extension for this <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-274">默认扩展名是<xref:Microsoft.Office.Tools.Excel.IChartSheetExtension>对象由实现[!INCLUDE[vsto_runtime](~/includes/vsto-runtime-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="99209-274">The default extension is an <xref:Microsoft.Office.Tools.Excel.IChartSheetExtension> object that is implemented by the [!INCLUDE[vsto_runtime](~/includes/vsto-runtime-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Delete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="99209-275">删除 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-275">Deletes the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-276">此方法会删除基础<xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName>对象但不删除<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>主机项，因此，建议不使用此方法。</span><span class="sxs-lookup"><span data-stu-id="99209-276">This method deletes the underlying <xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName> object but does not delete the <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> host item; therefore, it is recommended that this method not be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthPercent">
      <MemberSignature Language="C#" Value="public int DepthPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DepthPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.DepthPercent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-277">获取或设置三维图表的深度（以 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 宽度的百分比形式表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-277">Gets or sets the depth of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> width.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-278">三维图表的深度，以 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 宽度的百分比形式（介于 20% 到 2000% 之间）表示</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-278">The depth of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> width (between 20 and 2000 percent)</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-279">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.DepthPercent%2A>属性设置当前的三维部分的深度<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>的 75%的宽度的<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-279">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.DepthPercent%2A> property to set the depth of the 3-D portion of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to 75 percent of the width of the <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#10](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#10)]
 [!code-vb[Trin_ExcelChartSheet#10](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deselect">
      <MemberSignature Language="C#" Value="public void Deselect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deselect() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Deselect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayBlanksAs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.DisplayBlanksAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayBlanksAs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-280">获取或设置在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 上绘制空白单元格的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-280">Gets or sets the way that blank cells are plotted on a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-281">以下 <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlNotPlotted" />、<see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlInterpolated" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlZero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-281">One of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlNotPlotted" />, <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlInterpolated" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlZero" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-282">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.DisplayBlanksAs%2A>属性可指定当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>不会绘制数据区域中的空白单元格。</span><span class="sxs-lookup"><span data-stu-id="99209-282">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.DisplayBlanksAs%2A> property to specify that the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> does not plot blank cells in the data range.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#11](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#11)]
 [!code-vb[Trin_ExcelChartSheet#11](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoughnutGroups">
      <MemberSignature Language="C#" Value="public object DoughnutGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DoughnutGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.DoughnutGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DrawingObjects(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.DrawingObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Drawings(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Drawings(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DropDowns(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.DropDowns(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy24">
      <MemberSignature Language="C#" Value="public bool Dummy24 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy24" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Dummy24" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy25">
      <MemberSignature Language="C#" Value="public bool Dummy25 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy25" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Dummy25" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elevation">
      <MemberSignature Language="C#" Value="public int Elevation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Elevation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Elevation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-283">获取或设置三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的仰角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-283">Gets or sets the elevation of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />, in degrees.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-284">三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的仰角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-284">The elevation of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />, in degrees.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-285">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Elevation%2A>要设置从其提升属性的当前视图<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>计算为 75 度。</span><span class="sxs-lookup"><span data-stu-id="99209-285">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Elevation%2A> property to set the elevation from which the view of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> is calculated to 75 degrees.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#12](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#12)]
 [!code-vb[Trin_ExcelChartSheet#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate(object Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Evaluate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="99209-286">对象的名称（使用 Microsoft Office Excel 的命名约定）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-286">The name of the object, using the naming convention of Microsoft Office Excel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-287">将 Microsoft Office Excel 名称转换为对象或值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-287">Converts a Microsoft Office Excel name to an object or a value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public bool Export (string Filename, object FilterName, object Interactive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Export(string Filename, object FilterName, object Interactive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Export(System.String,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FilterName" Type="System.Object" />
        <Parameter Name="Interactive" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="99209-288">导出文件的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-288">The name of the exported file.</span>
          </span>
        </param>
        <param name="FilterName">
          <span data-ttu-id="99209-289">与语言无关的图形筛选器名称（如同其在注册表中所显示的那样）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-289">The language-independent name of the graphic filter as it appears in the registry.</span>
          </span>
        </param>
        <param name="Interactive">
          <span data-ttu-id="99209-290">为 <see langword="true" /> 时，显示包含筛选器特定选项的对话框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-290">
              <see langword="true" /> to display the dialog box that contains the filter-specific options.</span>
          </span>
          <span data-ttu-id="99209-291">如果此参数为 <see langword="false" />，则 Microsoft Office Excel 使用筛选器的默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-291">If this argument is <see langword="false" />, Microsoft Office Excel uses the default values for the filter.</span>
          </span>
          <span data-ttu-id="99209-292">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-292">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-293">以图形格式导出 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-293">Exports the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> in a graphic format.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-294">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-294">Optional Parameters</span></span>  
 <span data-ttu-id="99209-295">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-295">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-296">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Export%2A>方法将导出当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>为.gif 文件而不显示文件选项。</span><span class="sxs-lookup"><span data-stu-id="99209-296">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Export%2A> method to export the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> as a .gif file without displaying the file options.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#114](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#114)]
 [!code-vb[Trin_ExcelChartSheet#114](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#114)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat(valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="99209-297">
            <see langword="Microsoft.Office.Interop.Excel.XlFixedFormatType" /> 值之一，指定是以 PDF 还是 XPS 格式保存图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-297">One of the <see langword="Microsoft.Office.Interop.Excel.XlFixedFormatType" /> values that specifies whether to save the chart in PDF or XPS format.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="99209-298">新 PDF 或 XPS 文件的完整路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-298">The full path of the new PDF or XPS file.</span>
          </span>
          <span data-ttu-id="99209-299">如果省略此参数，Excel 会将文件保存在当前文件夹中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-299">If you omit this parameter, Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="99209-300">其中一个 <see langword="Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> 值，该值指定导出文件的质量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-300">One of the <see langword="Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> values that specifies the quality of the exported file.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="99209-301">如果要在导出的文件中包含文档属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-301">
              <see langword="true" /> to include document properties in the exported file; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="99209-302">若要在导出时忽略任何打印区域设置，请使用 <see langword="true" />；否则使用 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-302">
              <see langword="true" /> to ignore any print areas set when exporting; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="99209-303">要从其处开始导出的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-303">The number of the page at which to start exporting.</span>
          </span>
          <span data-ttu-id="99209-304">如果省略此参数，则从第一页开始导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-304">If this parameter is omitted, exporting starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="99209-305">要发布的最后一页的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-305">The number of the last page to publish.</span>
          </span>
          <span data-ttu-id="99209-306">如果省略此参数，则发布最后一页后停止发布。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-306">If this parameter is omitted, publishing ends with the last page.</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="99209-307">如果立即在查看器中打开新文件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-307">
              <see langword="true" /> to open the new file in the viewer immediately; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="99209-308">一个指针，指向使图表能够以其他固定格式保存的 <see langword="IMsoDocExporter" /> 接口的实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-308">A pointer to an implementation of the <see langword="IMsoDocExporter" /> interface that enables the chart to be saved in a different fixed format.</span>
          </span>
          <span data-ttu-id="99209-309">有关详细信息，请参阅“扩展 Office (2007) 固定格式导出功能”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-309">For more information, see Extending the Office (2007) Fixed-Format Export Feature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-310">以 PDF 或 XPS 格式保存 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 中显示的图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-310">Saves the chart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> in PDF or XPS format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-311">你可以将保存为 PDF 或 XPS 文件从 Microsoft Office Excel 仅后提供此功能的外接程序安装。</span><span class="sxs-lookup"><span data-stu-id="99209-311">You can save as a PDF or XPS file from Microsoft Office Excel only after you install an add-in that provides this feature.</span></span> <span data-ttu-id="99209-312">有关详细信息，搜索"启用支持对其他文件格式，例如 PDF 和 XPS"Office online。</span><span class="sxs-lookup"><span data-stu-id="99209-312">For more information, search for "Enable support for other file formats, such as PDF and XPS" on Office Online.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-313">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-313">Optional Parameters</span></span>  
 <span data-ttu-id="99209-314">有关可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-314">For information about optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-315">下面的代码示例将保存的图表工作表的一页`Chart1`以 PDF 格式保存到指定的文件路径和文件的名称，使用标准质量分辨率。</span><span class="sxs-lookup"><span data-stu-id="99209-315">The following code example saves one page of chart sheet `Chart1` in PDF format to the specified file path and file name using the standard quality resolution.</span></span> <span data-ttu-id="99209-316">生成的 PDF 文件包括工作簿属性。</span><span class="sxs-lookup"><span data-stu-id="99209-316">The generated PDF file includes the workbook properties.</span></span> <span data-ttu-id="99209-317">若要运行此代码示例，你的工作簿必须包含名为图表工作表`Chart1`。</span><span class="sxs-lookup"><span data-stu-id="99209-317">To run this code example, your workbook must contain a chart sheet named `Chart1`.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkbook_Additional#12](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#12)]
 [!code-vb[Trin_ExcelWorkbook_Additional#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Excel.IChartSheetExtension Extension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Excel.IChartSheetExtension Extension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Extension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.IChartSheetExtension</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-318">获取此 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 对象的自定义扩展。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-318">Gets a custom extension for this <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-319">此 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 对象的自定义扩展。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-319">A custom extension for this <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-320">自定义扩展是一种实现的<xref:Microsoft.Office.Tools.Excel.IChartSheetExtension>程序通过使用 Visual Studio 中的 Office 开发工具创建 Excel 解决方案中的接口。</span><span class="sxs-lookup"><span data-stu-id="99209-320">A custom extension is an implementation of the <xref:Microsoft.Office.Tools.Excel.IChartSheetExtension> interface in an Excel solution that is created by using the Office development tools in Visual Studio.</span></span> <span data-ttu-id="99209-321">在文档级项目中，此属性默认情况下返回生成的工作表主机项的一个实例。</span><span class="sxs-lookup"><span data-stu-id="99209-321">In document-level projects, this property returns an instance of the generated worksheet host item by default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Floor Floor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Floor Floor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Floor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Floor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-322">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> 对象，该对象表示三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的基底。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-322">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-323">
            <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> 对象，表示三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的基底。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-323">A <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-324">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Floor%2A>属性可以更改的当前颜色<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>floor 为绿色。</span><span class="sxs-lookup"><span data-stu-id="99209-324">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Floor%2A> property to change the color of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> floor to green.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#12](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#12)]
 [!code-vb[Trin_ExcelChartSheet#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GapDepth">
      <MemberSignature Language="C#" Value="public int GapDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GapDepth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.GapDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-325">获取或设置三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 中的数据系列之间的距离（以标记宽度的百分比形式表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-325">Gets or sets the distance between the data series in a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />, as a percentage of the marker width.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-326">三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 中的数据系列之间的距离（以标记宽度的百分比形式表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-326">The distance between the data series in a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />, as a percentage of the marker width.</span>
          </span>
          <span data-ttu-id="99209-327">此属性的值必须介于 0 到 500 之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-327">The value of this property must be between 0 and 500.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-328">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.GapDepth%2A>属性设置中当前的数据序列之间的距离<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>%到 400%标记宽度。</span><span class="sxs-lookup"><span data-stu-id="99209-328">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.GapDepth%2A> property to set the distance between the data series in the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to 400 percent of the marker width.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#13](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#13)]
 [!code-vb[Trin_ExcelChartSheet#13](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChartElement">
      <MemberSignature Language="C#" Value="public void GetChartElement (int x, int y, ref int ElementID, ref int Arg1, ref int Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetChartElement(int32 x, int32 y, int32 ElementID, int32 Arg1, int32 Arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.GetChartElement(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ElementID" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="Arg1" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="Arg2" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="99209-329">图表元素的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-329">The X coordinate of the chart element.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="99209-330">图表元素的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-330">The Y coordinate of the chart element.</span>
          </span>
        </param>
        <param name="ElementID">
          <span data-ttu-id="99209-331">该方法返回时，此参数包含指定坐标上的图表元素的 <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-331">When the method returns, this argument contains the <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> value of the chart element at the specified coordinates.</span>
          </span>
          <span data-ttu-id="99209-332">有关更多信息，请参见“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-332">For more information, see the "Remarks" section.</span>
          </span>
        </param>
        <param name="Arg1">
          <span data-ttu-id="99209-333">该方法返回时，此参数包含与图表元素有关的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-333">When the method returns, this argument contains information related to the chart element.</span>
          </span>
          <span data-ttu-id="99209-334">有关更多信息，请参见“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-334">For more information, see the "Remarks" section.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="99209-335">该方法返回时，此参数包含与图表元素有关的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-335">When the method returns, this argument contains information related to the chart element.</span>
          </span>
          <span data-ttu-id="99209-336">有关更多信息，请参见“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-336">For more information, see the "Remarks" section.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-337">获取有关指定 X 和 Y 坐标上的图表元素的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-337">Gets information about the chart element at specified X and Y coordinates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-338">中，您指定仅的前两个自变量的值，此方法是异常。</span><span class="sxs-lookup"><span data-stu-id="99209-338">This method is unusual in that you specify values for only the first two arguments.</span></span> <span data-ttu-id="99209-339">Microsoft Office Excel 填写其他参数，并在方法返回时，你的代码应检查这些值。</span><span class="sxs-lookup"><span data-stu-id="99209-339">Microsoft Office Excel fills in the other arguments, and your code should examine those values when the method returns.</span></span>  
  
 <span data-ttu-id="99209-340">值`ElementID`返回此方法确定后是否`Arg1`和`Arg2`包含任何信息，如下表中所示。</span><span class="sxs-lookup"><span data-stu-id="99209-340">The value of `ElementID` after the method returns determines whether `Arg1` and `Arg2` contain any information, as shown in the following table.</span></span>  
  
|`ElementID`|`Arg1`|`Arg2`|  
|-----------------|------------|------------|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlAxis>|<span data-ttu-id="99209-341">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="99209-341">AxisIndex</span></span>|<span data-ttu-id="99209-342">AxisType</span><span class="sxs-lookup"><span data-stu-id="99209-342">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlAxisTitle>|<span data-ttu-id="99209-343">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="99209-343">AxisIndex</span></span>|<span data-ttu-id="99209-344">AxisType</span><span class="sxs-lookup"><span data-stu-id="99209-344">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDisplayUnitLabel>|<span data-ttu-id="99209-345">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="99209-345">AxisIndex</span></span>|<span data-ttu-id="99209-346">AxisType</span><span class="sxs-lookup"><span data-stu-id="99209-346">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlMajorGridlines>|<span data-ttu-id="99209-347">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="99209-347">AxisIndex</span></span>|<span data-ttu-id="99209-348">AxisType</span><span class="sxs-lookup"><span data-stu-id="99209-348">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlMinorGridlines>|<span data-ttu-id="99209-349">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="99209-349">AxisIndex</span></span>|<span data-ttu-id="99209-350">AxisType</span><span class="sxs-lookup"><span data-stu-id="99209-350">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlPivotChartDropZone>|<span data-ttu-id="99209-351">DropZoneType</span><span class="sxs-lookup"><span data-stu-id="99209-351">DropZoneType</span></span>|<span data-ttu-id="99209-352">无</span><span class="sxs-lookup"><span data-stu-id="99209-352">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlPivotChartFieldButton>|<span data-ttu-id="99209-353">DropZoneType</span><span class="sxs-lookup"><span data-stu-id="99209-353">DropZoneType</span></span>|<span data-ttu-id="99209-354">PivotFieldIndex</span><span class="sxs-lookup"><span data-stu-id="99209-354">PivotFieldIndex</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDownBars>|<span data-ttu-id="99209-355">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="99209-355">GroupIndex</span></span>|<span data-ttu-id="99209-356">无</span><span class="sxs-lookup"><span data-stu-id="99209-356">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDropLines>|<span data-ttu-id="99209-357">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="99209-357">GroupIndex</span></span>|<span data-ttu-id="99209-358">无</span><span class="sxs-lookup"><span data-stu-id="99209-358">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlHiLoLines>|<span data-ttu-id="99209-359">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="99209-359">GroupIndex</span></span>|<span data-ttu-id="99209-360">无</span><span class="sxs-lookup"><span data-stu-id="99209-360">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlRadarAxisLabels>|<span data-ttu-id="99209-361">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="99209-361">GroupIndex</span></span>|<span data-ttu-id="99209-362">无</span><span class="sxs-lookup"><span data-stu-id="99209-362">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlSeriesLines>|<span data-ttu-id="99209-363">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="99209-363">GroupIndex</span></span>|<span data-ttu-id="99209-364">无</span><span class="sxs-lookup"><span data-stu-id="99209-364">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlUpBars>|<span data-ttu-id="99209-365">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="99209-365">GroupIndex</span></span>|<span data-ttu-id="99209-366">无</span><span class="sxs-lookup"><span data-stu-id="99209-366">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlChartArea>|<span data-ttu-id="99209-367">无</span><span class="sxs-lookup"><span data-stu-id="99209-367">None</span></span>|<span data-ttu-id="99209-368">无</span><span class="sxs-lookup"><span data-stu-id="99209-368">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlChartTitle>|<span data-ttu-id="99209-369">无</span><span class="sxs-lookup"><span data-stu-id="99209-369">None</span></span>|<span data-ttu-id="99209-370">无</span><span class="sxs-lookup"><span data-stu-id="99209-370">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlCorners>|<span data-ttu-id="99209-371">无</span><span class="sxs-lookup"><span data-stu-id="99209-371">None</span></span>|<span data-ttu-id="99209-372">无</span><span class="sxs-lookup"><span data-stu-id="99209-372">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDataTable>|<span data-ttu-id="99209-373">无</span><span class="sxs-lookup"><span data-stu-id="99209-373">None</span></span>|<span data-ttu-id="99209-374">无</span><span class="sxs-lookup"><span data-stu-id="99209-374">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlFloor>|<span data-ttu-id="99209-375">无</span><span class="sxs-lookup"><span data-stu-id="99209-375">None</span></span>|<span data-ttu-id="99209-376">无</span><span class="sxs-lookup"><span data-stu-id="99209-376">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLeaderLines>|<span data-ttu-id="99209-377">无</span><span class="sxs-lookup"><span data-stu-id="99209-377">None</span></span>|<span data-ttu-id="99209-378">无</span><span class="sxs-lookup"><span data-stu-id="99209-378">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLegend>|<span data-ttu-id="99209-379">无</span><span class="sxs-lookup"><span data-stu-id="99209-379">None</span></span>|<span data-ttu-id="99209-380">无</span><span class="sxs-lookup"><span data-stu-id="99209-380">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlNothing>|<span data-ttu-id="99209-381">无</span><span class="sxs-lookup"><span data-stu-id="99209-381">None</span></span>|<span data-ttu-id="99209-382">无</span><span class="sxs-lookup"><span data-stu-id="99209-382">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlPlotArea>|<span data-ttu-id="99209-383">无</span><span class="sxs-lookup"><span data-stu-id="99209-383">None</span></span>|<span data-ttu-id="99209-384">无</span><span class="sxs-lookup"><span data-stu-id="99209-384">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlWalls>|<span data-ttu-id="99209-385">无</span><span class="sxs-lookup"><span data-stu-id="99209-385">None</span></span>|<span data-ttu-id="99209-386">无</span><span class="sxs-lookup"><span data-stu-id="99209-386">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDataLabel>|<span data-ttu-id="99209-387">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="99209-387">SeriesIndex</span></span>|<span data-ttu-id="99209-388">PointIndex</span><span class="sxs-lookup"><span data-stu-id="99209-388">PointIndex</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlErrorBars>|<span data-ttu-id="99209-389">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="99209-389">SeriesIndex</span></span>|<span data-ttu-id="99209-390">无</span><span class="sxs-lookup"><span data-stu-id="99209-390">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLegendEntry>|<span data-ttu-id="99209-391">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="99209-391">SeriesIndex</span></span>|<span data-ttu-id="99209-392">无</span><span class="sxs-lookup"><span data-stu-id="99209-392">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLegendKey>|<span data-ttu-id="99209-393">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="99209-393">SeriesIndex</span></span>|<span data-ttu-id="99209-394">无</span><span class="sxs-lookup"><span data-stu-id="99209-394">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlSeries>|<span data-ttu-id="99209-395">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="99209-395">SeriesIndex</span></span>|<span data-ttu-id="99209-396">PointIndex</span><span class="sxs-lookup"><span data-stu-id="99209-396">PointIndex</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlShape>|<span data-ttu-id="99209-397">ShapeIndex</span><span class="sxs-lookup"><span data-stu-id="99209-397">ShapeIndex</span></span>|<span data-ttu-id="99209-398">无</span><span class="sxs-lookup"><span data-stu-id="99209-398">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlTrendline>|<span data-ttu-id="99209-399">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="99209-399">SeriesIndex</span></span>|<span data-ttu-id="99209-400">TrendLineIndex</span><span class="sxs-lookup"><span data-stu-id="99209-400">TrendLineIndex</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlXErrorBars>|<span data-ttu-id="99209-401">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="99209-401">SeriesIndex</span></span>|<span data-ttu-id="99209-402">无</span><span class="sxs-lookup"><span data-stu-id="99209-402">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlYErrorBars>|<span data-ttu-id="99209-403">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="99209-403">SeriesIndex</span></span>|<span data-ttu-id="99209-404">无</span><span class="sxs-lookup"><span data-stu-id="99209-404">None</span></span>|  
  
 <span data-ttu-id="99209-405">下表介绍的含义`Arg1`和`Arg2`该方法返回后。</span><span class="sxs-lookup"><span data-stu-id="99209-405">The following table describes the meaning of `Arg1` and `Arg2` after the method returns.</span></span>  
  
|<span data-ttu-id="99209-406">参数</span><span class="sxs-lookup"><span data-stu-id="99209-406">Argument</span></span>|<span data-ttu-id="99209-407">描述</span><span class="sxs-lookup"><span data-stu-id="99209-407">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="99209-408">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="99209-408">AxisIndex</span></span>|<span data-ttu-id="99209-409">指定是否主或辅助轴。</span><span class="sxs-lookup"><span data-stu-id="99209-409">Specifies whether the axis is primary or secondary.</span></span> <span data-ttu-id="99209-410">可以是下列 <xref:Microsoft.Office.Interop.Excel.XlAxisGroup> 常数之一：<xref:Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary> 或 <xref:Microsoft.Office.Interop.Excel.XlAxisGroup.xlSecondary>。</span><span class="sxs-lookup"><span data-stu-id="99209-410">Can be one of the following <xref:Microsoft.Office.Interop.Excel.XlAxisGroup> constants: <xref:Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary> or <xref:Microsoft.Office.Interop.Excel.XlAxisGroup.xlSecondary>.</span></span>|  
|<span data-ttu-id="99209-411">AxisType</span><span class="sxs-lookup"><span data-stu-id="99209-411">AxisType</span></span>|<span data-ttu-id="99209-412">指定的轴类型。</span><span class="sxs-lookup"><span data-stu-id="99209-412">Specifies the axis type.</span></span> <span data-ttu-id="99209-413">可以为以下 <xref:Microsoft.Office.Interop.Excel.XlAxisType> 常数之一：<xref:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory>、<xref:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis> 或 <xref:Microsoft.Office.Interop.Excel.XlAxisType.xlValue>。</span><span class="sxs-lookup"><span data-stu-id="99209-413">Can be one of the following <xref:Microsoft.Office.Interop.Excel.XlAxisType> constants: <xref:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory>, <xref:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis>, or <xref:Microsoft.Office.Interop.Excel.XlAxisType.xlValue>.</span></span>|  
|<span data-ttu-id="99209-414">DropZoneType</span><span class="sxs-lookup"><span data-stu-id="99209-414">DropZoneType</span></span>|<span data-ttu-id="99209-415">指定的拖放区域类型： 列、 数据、 页上，或行字段。</span><span class="sxs-lookup"><span data-stu-id="99209-415">Specifies the drop zone type: column, data, page, or row field.</span></span> <span data-ttu-id="99209-416">可以是以下之一<xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation>常量： <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField>， <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField>， <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField>，或<xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField>。</span><span class="sxs-lookup"><span data-stu-id="99209-416">Can be one of the following <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation> constants: <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField>, <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField>, <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField>, or <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField>.</span></span> <span data-ttu-id="99209-417">列和行字段常量分别指定序列和类别字段。</span><span class="sxs-lookup"><span data-stu-id="99209-417">The column and row field constants specify the series and category fields, respectively.</span></span>|  
|<span data-ttu-id="99209-418">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="99209-418">GroupIndex</span></span>|<span data-ttu-id="99209-419">指定的偏移量<xref:Microsoft.Office.Interop.Excel.ChartGroups?displayProperty=fullName>特定图表组的集合。</span><span class="sxs-lookup"><span data-stu-id="99209-419">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.ChartGroups?displayProperty=fullName> collection for a specific chart group.</span></span>|  
|<span data-ttu-id="99209-420">PivotFieldIndex</span><span class="sxs-lookup"><span data-stu-id="99209-420">PivotFieldIndex</span></span>|<span data-ttu-id="99209-421">指定特定列 （系列）、 数据、 页上，或行 （类别） 字段的 T:Microsoft.Office.Interop.Excel.PivotFields 集合内的偏移量。</span><span class="sxs-lookup"><span data-stu-id="99209-421">Specifies the offset within the T:Microsoft.Office.Interop.Excel.PivotFields collection for a specific column (series), data, page, or row (category) field.</span></span> <span data-ttu-id="99209-422">拖放区域类型是否为-1 <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField>。</span><span class="sxs-lookup"><span data-stu-id="99209-422">-1 if the drop zone type is <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField>.</span></span>|  
|<span data-ttu-id="99209-423">PointIndex</span><span class="sxs-lookup"><span data-stu-id="99209-423">PointIndex</span></span>|<span data-ttu-id="99209-424">指定的偏移量<xref:Microsoft.Office.Interop.Excel.Points>一系列中的特定点的集合。</span><span class="sxs-lookup"><span data-stu-id="99209-424">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.Points> collection for a specific point within a series.</span></span> <span data-ttu-id="99209-425">值为 – 1 指示已选择所有数据点。</span><span class="sxs-lookup"><span data-stu-id="99209-425">A value of – 1 indicates that all data points are selected.</span></span>|  
|<span data-ttu-id="99209-426">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="99209-426">SeriesIndex</span></span>|<span data-ttu-id="99209-427">指定的偏移量<xref:Microsoft.Office.Interop.Excel.Series>一系列特定的集合。</span><span class="sxs-lookup"><span data-stu-id="99209-427">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.Series> collection for a specific series.</span></span>|  
|<span data-ttu-id="99209-428">ShapeIndex</span><span class="sxs-lookup"><span data-stu-id="99209-428">ShapeIndex</span></span>|<span data-ttu-id="99209-429">指定的偏移量<xref:Microsoft.Office.Interop.Excel.Shapes>特定形状的集合。</span><span class="sxs-lookup"><span data-stu-id="99209-429">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.Shapes> collection for a specific shape.</span></span>|  
|<span data-ttu-id="99209-430">TrendlineIndex</span><span class="sxs-lookup"><span data-stu-id="99209-430">TrendlineIndex</span></span>|<span data-ttu-id="99209-431">指定的偏移量<xref:Microsoft.Office.Interop.Excel.Trendlines>一系列中的特定趋势线的集合。</span><span class="sxs-lookup"><span data-stu-id="99209-431">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.Trendlines> collection for a specific trendline within a series.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="99209-432">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.GetChartElement%2A>方法在用户单击图表时显示的图表元素。</span><span class="sxs-lookup"><span data-stu-id="99209-432">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.GetChartElement%2A> method to display the chart element when a user clicks the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#115](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#115)]
 [!code-vb[Trin_ExcelChartSheet#115](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupBoxes(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.GroupBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupObjects(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.GroupObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAxis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Excel.ChartSheet_HasAxisType HasAxis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Excel.ChartSheet_HasAxisType HasAxis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.HasAxis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.ChartSheet_HasAxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-433">获取或设置一个值，该值指示特定轴是否存在于 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-433">Gets or sets a value indicating whether a specific axis exists on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-434">如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 上存在指定的轴，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-434">
              <see langword="true" /> if the specified axis exists on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-435">使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.HasAxis%2A>属性来隐藏或显示特定轴上<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-435">Use the <xref:Microsoft.Office.Tools.Excel.ChartSheet.HasAxis%2A> property to hide or show a particular axis on a <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span> <span data-ttu-id="99209-436"><xref:Microsoft.Office.Tools.Excel.ChartSheet.HasAxis%2A>属性应与以下参数一起使用。</span><span class="sxs-lookup"><span data-stu-id="99209-436">The <xref:Microsoft.Office.Tools.Excel.ChartSheet.HasAxis%2A> property is intended to be used with the following parameters.</span></span>  
  
|<span data-ttu-id="99209-437">参数</span><span class="sxs-lookup"><span data-stu-id="99209-437">Parameter</span></span>|<span data-ttu-id="99209-438">描述</span><span class="sxs-lookup"><span data-stu-id="99209-438">Description</span></span>|  
|---------------|-----------------|  
|`Index1`|<span data-ttu-id="99209-439">之一<xref:Microsoft.Office.Interop.Excel.XlAxisType>指定轴类型的值。</span><span class="sxs-lookup"><span data-stu-id="99209-439">One of the <xref:Microsoft.Office.Interop.Excel.XlAxisType> values that specifies the axis type.</span></span> <span data-ttu-id="99209-440">序列轴仅应用于三维图表。</span><span class="sxs-lookup"><span data-stu-id="99209-440">Series axes apply only to 3-D charts.</span></span>|  
|`Index2`|<span data-ttu-id="99209-441">之一<xref:Microsoft.Office.Interop.Excel.XlAxisGroup>指定轴组的值。</span><span class="sxs-lookup"><span data-stu-id="99209-441">One of the <xref:Microsoft.Office.Interop.Excel.XlAxisGroup> values that specifies the axis group.</span></span> <span data-ttu-id="99209-442">三维图表有只有一组轴。</span><span class="sxs-lookup"><span data-stu-id="99209-442">3-D charts have only one set of axes.</span></span>|  
  
 <span data-ttu-id="99209-443">如果你尝试使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.HasAxis%2A>无需指定参数，<xref:Microsoft.Office.Tools.Excel.ChartSheet.HasAxis%2A>将获取<xref:Microsoft.Office.Tools.Excel.ChartSheet._HasAxisType>对象，是 Visual Studio 基础结构的一部分和不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="99209-443">If you attempt to use <xref:Microsoft.Office.Tools.Excel.ChartSheet.HasAxis%2A> without specifying parameters, <xref:Microsoft.Office.Tools.Excel.ChartSheet.HasAxis%2A> will get a <xref:Microsoft.Office.Tools.Excel.ChartSheet._HasAxisType> object that is part of the Visual Studio infrastructure and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="99209-444">Microsoft Office Excel 可以创建或删除轴，如果更改图表类型或<xref:Microsoft.Office.Interop.Excel.Axis.AxisGroup%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="99209-444">Microsoft Office Excel may create or delete axes if you change the chart type or the <xref:Microsoft.Office.Interop.Excel.Axis.AxisGroup%2A> property.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-445">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-445">Optional Parameters</span></span>  
 <span data-ttu-id="99209-446">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-446">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-447">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.HasAxis%2A>属性来隐藏当前的主类别轴<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-447">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.HasAxis%2A> property to hide the primary category axis of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#29](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#29)]
 [!code-vb[Trin_ExcelChartSheet#29](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDataTable">
      <MemberSignature Language="C#" Value="public bool HasDataTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.HasDataTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-448">获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 是否包含数据表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-448">Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> has a data table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-449">如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 包含数据表，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-449">
              <see langword="true" /> if the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> has a data table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-450">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.HasDataTable%2A>和<xref:Microsoft.Office.Tools.Excel.ChartSheet.DataTable%2A>属性要在当前显示数据的表<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>具有边框轮廓。</span><span class="sxs-lookup"><span data-stu-id="99209-450">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.HasDataTable%2A> and <xref:Microsoft.Office.Tools.Excel.ChartSheet.DataTable%2A> properties to display a data table in the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> with a border outline.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#9)]
 [!code-vb[Trin_ExcelChartSheet#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLegend">
      <MemberSignature Language="C#" Value="public bool HasLegend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLegend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.HasLegend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-451">获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 是否包含图例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-451">Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> has a legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-452">如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 包含图例，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-452">
              <see langword="true" /> if the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> has a legend.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPivotFields">
      <MemberSignature Language="C#" Value="public bool HasPivotFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPivotFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.HasPivotFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTitle">
      <MemberSignature Language="C#" Value="public bool HasTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.HasTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-453">获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 是否包含可见标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-453">Gets or sets a value the indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> has a visible title.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-454">如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 包含可见标题，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-454">
              <see langword="true" /> if the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> has a visible title.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-455">A<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>标题由<xref:Microsoft.Office.Interop.Excel.ChartTitle>对象。</span><span class="sxs-lookup"><span data-stu-id="99209-455">A <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> title is represented by a <xref:Microsoft.Office.Interop.Excel.ChartTitle> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeightPercent">
      <MemberSignature Language="C#" Value="public int HeightPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HeightPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.HeightPercent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-456">获取或设置三维图表的高度（以 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 宽度的百分比形式表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-456">Gets or sets the height of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> width.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-457">三维图表的高度，以 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 宽度的百分比形式（介于 5% 到 500% 之间）表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-457">The height of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> width (between 5 and 500 percent).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-458">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.HeightPercent%2A>属性设置的当前高度<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>的宽度的 50%到<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-458">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.HeightPercent%2A> property to set the height of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to 50 percent of the width of the <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#14](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#14)]
 [!code-vb[Trin_ExcelChartSheet#14](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public IServiceProvider HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider HostContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.HostContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Hyperlinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-459">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的超链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-459">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-460">一个 <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的超链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-460">A <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-461">获取 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的索引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-461">Gets the index number of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-462">
            <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的索引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-462">The index number of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart InnerObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart InnerObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.InnerObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-463">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Chart" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的基础本机对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-463">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-464">一个 <see cref="T:Microsoft.Office.Interop.Excel.Chart" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的基础本机对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-464">A <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemProvider">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.IHostItemProvider ItemProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.IHostItemProvider ItemProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ItemProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.IHostItemProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Labels(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Labels(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Legend Legend { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Legend Legend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Legend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Legend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-465">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Legend" />，它表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的图例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-465">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> that represents the legend for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-466">一个 <see cref="T:Microsoft.Office.Interop.Excel.Legend" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的图例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-466">A <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> that represents the legend for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-467">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Legend%2A>属性以修改在当前的图例边框的颜色<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-467">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Legend%2A> property to modify the color of the legend border in the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#15](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#15)]
 [!code-vb[Trin_ExcelChartSheet#15](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Line3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Line3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineGroups">
      <MemberSignature Language="C#" Value="public object LineGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LineGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.LineGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lines(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Lines(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListBoxes(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.ListBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Location (Microsoft.Office.Interop.Excel.XlChartLocation Where, object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Chart Location(valuetype Microsoft.Office.Interop.Excel.XlChartLocation Where, object Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Location(Microsoft.Office.Interop.Excel.XlChartLocation,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Where" Type="Microsoft.Office.Interop.Excel.XlChartLocation" />
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Where">
          <span data-ttu-id="99209-468">
            <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" /> 值之一，指定要在何处移动图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-468">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" /> values that specify where to move the chart.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="99209-469">图表将嵌入的工作表的名称（<c>Where</c> 为 <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsObject" /> 时），或新工作表的名称（<c>Where</c> 为 <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsNewSheet" /> 时）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-469">The name of the sheet where the chart will be embedded if <c>Where</c> is <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsObject" /> or the name of the new sheet if <c>Where</c> is <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsNewSheet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-470">将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 移至新位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-470">Moves the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> to a new location.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-471">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Location%2A>方法来移动当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>到名为"NewSheet"新工作表。</span><span class="sxs-lookup"><span data-stu-id="99209-471">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Location%2A> method to move the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to a new worksheet named "NewSheet".</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#117](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#117)]
 [!code-vb[Trin_ExcelChartSheet#117](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#117)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.MailEnvelope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-472">表示文档的电子邮件标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-472">Represents an e-mail header for a document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-473">
            <see cref="T:Microsoft.Office.Core.MsoEnvelope" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-473">One of the <see cref="T:Microsoft.Office.Core.MsoEnvelope" /> values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheet.MouseDown" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-474">在指针位于 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 上而按下鼠标按钮时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-474">Occurs when a mouse button is pressed when the pointer is over a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-475">下面的代码示例演示的处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheet.MouseDown>显示一个消息框，当鼠标指针位于当前并按下鼠标事件<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-475">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheet.MouseDown> event that displays a message box when the mouse is pressed while the pointer is over the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span> <span data-ttu-id="99209-476">此示例还使用`x`和`y`显示鼠标指针的坐标的事件处理程序参数。</span><span class="sxs-lookup"><span data-stu-id="99209-476">The example also uses the `x` and `y` parameters of the event handler to display the coordinates of the mouse pointer.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#205](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#205)]
 [!code-vb[Trin_ExcelChartSheet#205](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#205)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheet.MouseMove" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-477">在鼠标指针的位置在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 上更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-477">Occurs when the position of the mouse pointer changes over the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-478">下面的代码示例演示的处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheet.MouseMove>显示一个消息框，当鼠标指针移动到当前的事件<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>时是否已按下主鼠标按钮。</span><span class="sxs-lookup"><span data-stu-id="99209-478">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheet.MouseMove> event that displays a message box when the mouse pointer moves over the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> while the primary mouse button is being pressed.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#206](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#206)]
 [!code-vb[Trin_ExcelChartSheet#206](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#206)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheet.MouseUp" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-479">在指针位于 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 上时释放鼠标按钮时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-479">Occurs when a mouse button is released when the pointer is over the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-480">下面的代码示例演示的处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheet.MouseUp>显示一个消息框，当鼠标指针位于当前上并释放鼠标按钮的事件<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-480">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheet.MouseUp> event that displays a message box when the mouse button is released while the pointer is over the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span> <span data-ttu-id="99209-481">此示例还使用`x`和`y`显示鼠标指针的坐标的事件处理程序参数。</span><span class="sxs-lookup"><span data-stu-id="99209-481">The example also uses the `x` and `y` parameters of the event handler to display the coordinates of the mouse pointer.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#207](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#207)]
 [!code-vb[Trin_ExcelChartSheet#207](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#207)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move(object Before, object After) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Move(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="99209-482">移动工作表的放置位置之后的工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-482">The sheet before which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="99209-483">如果指定 <c>After</c>，则不能指定 <c>Before</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-483">You cannot specify <c>Before</c> if you specify <c>After</c>.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="99209-484">移动工作表的放置位置之前的工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-484">The sheet after which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="99209-485">如果指定 <c>Before</c>，则不能指定 <c>After</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-485">You cannot specify <c>After</c> if you specify <c>Before</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-486">将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 移至工作簿中的另一位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-486">Moves the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-487">如果不指定`Before`或`After`，Microsoft Office Excel 创建新的工作簿包含移动的工作表。</span><span class="sxs-lookup"><span data-stu-id="99209-487">If you do not specify either `Before` or `After`, Microsoft Office Excel creates a new workbook that contains the moved sheet.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-488">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-488">Optional Parameters</span></span>  
 <span data-ttu-id="99209-489">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-489">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-490">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Move%2A>方法来移动当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>到在工作表之前`Sheet3`。</span><span class="sxs-lookup"><span data-stu-id="99209-490">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Move%2A> method to move the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to before worksheet `Sheet3`.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#118](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#118)]
 [!code-vb[Trin_ExcelChartSheet#118](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#118)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-491">获取或设置 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-491">Gets or sets the name of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-492">
            <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-492">The name of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-493">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Name%2A>属性设置的当前名称<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>到"WidgetSales"。</span><span class="sxs-lookup"><span data-stu-id="99209-493">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Name%2A> property to set the name of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to "WidgetSales".</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#17](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#17)]
 [!code-vb[Trin_ExcelChartSheet#17](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Next" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-494">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象，该对象表示下一个工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-494">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-495">一个 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象，表示下一个工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-495">A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-496">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Next%2A>和<xref:Microsoft.Office.Tools.Excel.ChartSheet.Previous%2A>属性，以显示当前的下一步和上一个表名称<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-496">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Next%2A> and <xref:Microsoft.Office.Tools.Excel.ChartSheet.Previous%2A> properties to display the names of the next and previous sheets for the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#28](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#28)]
 [!code-vb[Trin_ExcelChartSheet#28](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OLEObjects(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.OLEObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="99209-497">OLE 对象的名称或编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-497">The name or number of the OLE object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-498">获取一个对象，该对象表示图表或工作表上的单个 OLE 对象（<see cref="T:Microsoft.Office.Interop.Excel.OLEObject" /> 对象）或所有 OLE 对象的集合（<see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> 集合）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-498">Gets an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-499">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.OLEObjects%2A>对当前对象的方法来获取 OLE 集合<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-499">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.OLEObjects%2A> method to get the collection of OLE objects on the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#119](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#119)]
 [!code-vb[Trin_ExcelChartSheet#119](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#119)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.OnDoubleClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.OnSheetActivate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.OnSheetDeactivate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OptionButtons(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.OptionButtons(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ovals(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Ovals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.PageSetup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-500">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" />，它包含 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的所有页面设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-500">Gets a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> that contains all the page setup settings for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-501">一个 <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" />，包含 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的所有页面设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-501">A <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> that contains all the page setup settings for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-502">获取 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的父对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-502">Gets the parent object for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-503">
            <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的父对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-503">The parent object for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste(object Type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Paste(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="99209-504">如果图表位于剪贴板上，则指定要粘贴的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-504">Specifies the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> information to paste if a chart is on the Clipboard.</span>
          </span>
          <span data-ttu-id="99209-505">可以为以下 <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormats" />、<see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulas" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-505">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormats" />, <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulas" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />.</span>
          </span>
          <span data-ttu-id="99209-506">默认值为 <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-506">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />.</span>
          </span>
          <span data-ttu-id="99209-507">如果剪贴板上有图表之外的数据，则不能使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-507">If there is data other than a chart on the Clipboard, this argument cannot be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-508">将图表数据从剪贴板粘贴到指定的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-508">Pastes chart data from the Clipboard into the specified <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-509">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Paste%2A>方法以将其他范围数据从剪贴板粘贴到当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-509">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Paste%2A> method to paste additional range data from the Clipboard into the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#120](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#120)]
 [!code-vb[Trin_ExcelChartSheet#120](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Perspective">
      <MemberSignature Language="C#" Value="public int Perspective { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Perspective" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Perspective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-510">获取或设置三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的透视系数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-510">Gets or sets the perspective for the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-511">三维图表视图的透视系数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-511">The perspective for the 3-D chart view.</span>
          </span>
          <span data-ttu-id="99209-512">必须介于 0 到 100 之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-512">Must be between 0 and 100.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-513">如果忽略此属性<xref:Microsoft.Office.Tools.Excel.ChartSheet.RightAngleAxes%2A>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="99209-513">This property is ignored if the <xref:Microsoft.Office.Tools.Excel.ChartSheet.RightAngleAxes%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-514">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Perspective%2A>属性设置的当前视图角度<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>为 45 度。</span><span class="sxs-lookup"><span data-stu-id="99209-514">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Perspective%2A> property to set the view perspective of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to 45 degrees.</span></span> <span data-ttu-id="99209-515">该示例设置<xref:Microsoft.Office.Tools.Excel.ChartSheet.RightAngleAxes%2A>属性`false`之前设置<xref:Microsoft.Office.Tools.Excel.ChartSheet.Perspective%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="99209-515">The example sets the <xref:Microsoft.Office.Tools.Excel.ChartSheet.RightAngleAxes%2A> property to `false` before setting the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Perspective%2A> property.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#18](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#18)]
 [!code-vb[Trin_ExcelChartSheet#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pictures(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Pictures(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pie3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Pie3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PieGroups">
      <MemberSignature Language="C#" Value="public object PieGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PieGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.PieGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotLayout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotLayout PivotLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotLayout PivotLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.PivotLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-516">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" />，它表示数据透视图中字段的位置和数据透视图中轴的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-516">Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-517">一个 <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" />，表示数据透视图中字段的位置和数据透视图中轴的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-517">A <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-518">如果<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>不是数据透视图报表，此属性的值是`null`。</span><span class="sxs-lookup"><span data-stu-id="99209-518">If the <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> is not a PivotChart report, the value of this property is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PlotArea PlotArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PlotArea PlotArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.PlotArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PlotArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-519">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的绘图区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-519">Gets a <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-520">一个 <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的绘图区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-520">A <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-521">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.PlotArea%2A>属性的当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>更改图表绘图区的边框颜色。</span><span class="sxs-lookup"><span data-stu-id="99209-521">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.PlotArea%2A> property of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to change the color of the border around the plot area of the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#20](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#20)]
 [!code-vb[Trin_ExcelChartSheet#20](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotBy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlRowCol PlotBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlRowCol PlotBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.PlotBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlRowCol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-522">获取或设置在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 上将列或行用作数据系列的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-522">Gets or sets the way columns or rows are used as data series on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-523">以下 <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-523">One of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-524">对于数据透视图报表，此属性是只读的且始终返回<xref:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns>。</span><span class="sxs-lookup"><span data-stu-id="99209-524">For PivotChart reports, this property is read-only and always returns <xref:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-525">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.PlotBy%2A>属性设置当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>若要按行显示数据。</span><span class="sxs-lookup"><span data-stu-id="99209-525">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.PlotBy%2A> property to set the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to display data by rows.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#21](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#21)]
 [!code-vb[Trin_ExcelChartSheet#21](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotVisibleOnly">
      <MemberSignature Language="C#" Value="public bool PlotVisibleOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PlotVisibleOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.PlotVisibleOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-526">获取或设置一个值，该值指示是否只绘制可见单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-526">Gets or sets a value that indicates whether only visible cells are plotted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-527">如果只绘制可见单元格，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-527">
              <see langword="true" /> if only visible cells are plotted.</span>
          </span>
          <span data-ttu-id="99209-528">如果可见单元格和隐藏单元格都要绘制，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-528">
              <see langword="false" /> if both visible and hidden cells are plotted.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Previous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-529">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象，该对象表示前一个工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-529">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-530">一个 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象，表示前一个工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-530">A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-531">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Next%2A>和<xref:Microsoft.Office.Tools.Excel.ChartSheet.Previous%2A>属性，以显示当前的下一步和上一个表名称<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-531">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Next%2A> and <xref:Microsoft.Office.Tools.Excel.ChartSheet.Previous%2A> properties to display the names of the next and previous sheets for the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#28](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#28)]
 [!code-vb[Trin_ExcelChartSheet#28](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.PrintedCommentPages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-532">获取要为当前图表工作表打印的注释页的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-532">Gets the number of comment pages that will be printed for the current chart sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-533">要为当前图表工作表打印的注释页的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-533">The number of comment pages that will be printed for the current chart sheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-534">由于图表和图表工作表不支持注释，<xref:Microsoft.Office.Tools.Excel.ChartSheet.PrintedCommentPages%2A>属性<xref:Microsoft.Office.Tools.Excel.ChartSheet>对象将始终返回零。</span><span class="sxs-lookup"><span data-stu-id="99209-534">Because charts and chart sheets do not support comments, the <xref:Microsoft.Office.Tools.Excel.ChartSheet.PrintedCommentPages%2A> property of the <xref:Microsoft.Office.Tools.Excel.ChartSheet> object will always return zero.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99209-535">此属性将出现在 IntelliSense Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="99209-535">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="99209-536">但是，不能在 Excel 2007 项目中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="99209-536">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="99209-537">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-537">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut(object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx(object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="99209-538">要从其处开始打印的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-538">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="99209-539">如果省略此参数，则打印从第一页开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-539">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="99209-540">要打印的最后一页的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-540">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="99209-541">若忽略此参数，则打印至最后一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-541">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="99209-542">要打印的份数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-542">The number of copies to print.</span>
          </span>
          <span data-ttu-id="99209-543">如果忽略此参数，则打印一份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-543">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="99209-544">若要在打印对象前让 Microsoft Office Excel 调用打印预览，请使用 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-544">
              <see langword="true" /> to have Microsoft Office Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="99209-545">为 <see langword="false" />（或省略）时，立即打印对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-545">
              <see langword="false" /> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="99209-546">设置活动打印机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-546">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="99209-547">若要打印到文件，请使用 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-547">
              <see langword="true" /> to print to a file.</span>
          </span>
          <span data-ttu-id="99209-548">若未指定 <c>PrToFileName</c>，则 Excel 会提示用户输入输出文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-548">If <c>PrToFileName</c> is not specified, Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="99209-549">若逐份打印多个副本，请使用 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-549">
              <see langword="true" /> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="99209-550">要打印到的文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-550">The name of the file to print to.</span>
          </span>
          <span data-ttu-id="99209-551">只有在 <c>PrintToFile</c> 为 <see langword=" true" /> 时，才使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-551">This parameter is used only if <c>PrintToFile</c> is<see langword=" true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-552">打印 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 中显示的图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-552">Prints the chart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-553">"页"中的说明`From`和`To`指打印页-不是所有页中的表或工作簿。</span><span class="sxs-lookup"><span data-stu-id="99209-553">"Pages" in the descriptions of `From` and `To` refers to printed pages— not overall pages in the sheet or workbook.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-554">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-554">Optional Parameters</span></span>  
 <span data-ttu-id="99209-555">有关可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-555">For information about optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-556">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.PrintOutEx%2A>方法要打印一份该图表工作表的前两页`Chart1`到默认打印机。</span><span class="sxs-lookup"><span data-stu-id="99209-556">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.PrintOutEx%2A> method to print one copy of the first two pages of the chart sheet `Chart1` to the default printer.</span></span> <span data-ttu-id="99209-557">若要运行此代码示例，你的工作簿必须包含名为图表工作表`Chart1`。</span><span class="sxs-lookup"><span data-stu-id="99209-557">To run this code example, your workbook must contain a chart sheet named `Chart1`.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkBook_Additional#16](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#16)]
 [!code-vb[Trin_ExcelWorkBook_Additional#16](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview(object EnableChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.PrintPreview(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">To be added.</param>
        <summary>
          <span data-ttu-id="99209-558">显示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 打印效果的预览。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-558">Shows a preview of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> as it would look when printed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-559">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.PrintPreview%2A>方法若要预览的当前打印输出<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-559">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.PrintPreview%2A> method to preview the printout of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#123](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#123)]
 [!code-vb[Trin_ExcelChartSheet#123](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect(object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="99209-560">一个字符串，指定工作表或工作簿的区分大小写的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-560">A string that specifies a case-sensitive password for the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="99209-561">如果省略此参数，则不使用密码就可以取消对工作表或工作簿的保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-561">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span>
          </span>
          <span data-ttu-id="99209-562">否则，必须指定用来取消对工作表或工作簿的保护的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-562">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="99209-563">如果忘记了密码，则无法取消对工作表或工作簿的保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-563">If you forget the password, you cannot unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="99209-564">最好将密码及其对应文档名的列表保存在安全的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-564">It is a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="DrawingObjects">
          <span data-ttu-id="99209-565">为 <see langword="true" /> 时保护形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-565">
              <see langword="true" /> to protect shapes.</span>
          </span>
          <span data-ttu-id="99209-566">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-566">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="Contents">
          <span data-ttu-id="99209-567">为 <see langword="true" /> 时保护内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-567">
              <see langword="true" /> to protect contents.</span>
          </span>
          <span data-ttu-id="99209-568">对于图表而言，这将保护整个图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-568">For a chart, this protects the entire chart.</span>
          </span>
          <span data-ttu-id="99209-569">对于工作表而言，这将保护锁定的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-569">For a worksheet, this protects the locked cells.</span>
          </span>
          <span data-ttu-id="99209-570">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-570">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <param name="Scenarios">
          <span data-ttu-id="99209-571">为 <see langword="true" /> 时保护方案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-571">
              <see langword="true" /> to protect scenarios.</span>
          </span>
          <span data-ttu-id="99209-572">此参数仅对工作表有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-572">This argument is valid only for worksheets.</span>
          </span>
          <span data-ttu-id="99209-573">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-573">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <param name="UserInterfaceOnly">
          <span data-ttu-id="99209-574">为 <see langword="true" /> 可保护用户界面，但不保护宏。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-574">
              <see langword="true" /> to protect the user interface, but not macros.</span>
          </span>
          <span data-ttu-id="99209-575">如果省略此参数，则同时对宏和用户界面应用保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-575">If this argument is omitted, protection applies both to macros and to the user interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-576">保护 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 以便不能对其进行修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-576">Protects a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-577">使用合并和小写字母、 数字和符号的强密码。</span><span class="sxs-lookup"><span data-stu-id="99209-577">Use strong passwords that combine upper- and lowercase letters, numbers, and symbols.</span></span> <span data-ttu-id="99209-578">弱密码不同时包含这些元素。</span><span class="sxs-lookup"><span data-stu-id="99209-578">Weak passwords do not mix these elements.</span></span> <span data-ttu-id="99209-579">强密码： Y6dh ！ et5。</span><span class="sxs-lookup"><span data-stu-id="99209-579">Strong password: Y6dh!et5.</span></span> <span data-ttu-id="99209-580">弱密码： House27。</span><span class="sxs-lookup"><span data-stu-id="99209-580">Weak password: House27.</span></span> <span data-ttu-id="99209-581">使用你自己可以记住，以便无需将其记下的强密码。</span><span class="sxs-lookup"><span data-stu-id="99209-581">Use a strong password that you can remember so that you do not have to write it down.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-582">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-582">Optional Parameters</span></span>  
 <span data-ttu-id="99209-583">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-583">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-584">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Protect%2A>方法以保护所有当前内容<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-584">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Protect%2A> method to protect all contents of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span> <span data-ttu-id="99209-585">然后该示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.ProtectContents%2A>属性以验证该图表工作表受到保护，且然后将提示用户使用从该图表工作表中删除保护<xref:Microsoft.Office.Tools.Excel.ChartSheet.Unprotect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="99209-585">The example then uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ProtectContents%2A> property to verify that the chart sheet is protected, and then prompts the user to remove protection from the chart sheet by using the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Unprotect%2A> method.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#124](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#124)]
 [!code-vb[Trin_ExcelChartSheet#124](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#124)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ProtectContents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-586">获取一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的内容是否受保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-586">Gets a value that indicates whether the contents of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> are protected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-587">如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的内容受保护，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-587">
              <see langword="true" /> if the contents of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> are protected.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-588">这将保护整个<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-588">This protects the entire <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-589">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Protect%2A>方法以保护所有当前内容<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-589">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Protect%2A> method to protect all contents of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span> <span data-ttu-id="99209-590">然后该示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.ProtectContents%2A>属性以验证该图表工作表受到保护，且然后将提示用户使用从该图表工作表中删除保护<xref:Microsoft.Office.Tools.Excel.ChartSheet.Unprotect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="99209-590">The example then uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ProtectContents%2A> property to verify that the chart sheet is protected, and then prompts the user to remove protection from the chart sheet by using the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Unprotect%2A> method.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#124](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#124)]
 [!code-vb[Trin_ExcelChartSheet#124](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#124)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectData">
      <MemberSignature Language="C#" Value="public bool ProtectData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ProtectData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-591">获取或设置一个值，该值指示用户是否无法修改系列公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-591">Gets or sets a value that indicates whether series formulas cannot be modified by the user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-592">如果用户不能修改系列公式，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-592">
              <see langword="true" /> if series formulas cannot be modified by the user; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ProtectDrawingObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-593">获取一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 上的形状是否受保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-593">Gets a value that indicates whether shapes are protected on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-594">如果形状受保护，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-594">
              <see langword="true" /> if shapes are protected.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectFormatting">
      <MemberSignature Language="C#" Value="public bool ProtectFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ProtectFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-595">获取或设置一个值，该值指示用户是否无法修改 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 格式设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-595">Gets or sets a value that indicates whether <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> formatting cannot be modified by the user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-596">如果用户无法修改 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 格式设置，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-596">
              <see langword="true" /> if <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> formatting cannot be modified by the user.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-597">当此属性是`true`、**对象**命令**格式**禁用菜单和<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>无法添加、 移动、 调整大小，或删除元素。</span><span class="sxs-lookup"><span data-stu-id="99209-597">When this property is `true`, the **Object** command on the **Format** menu is disabled and <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> elements cannot be added, moved, resized, or deleted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectGoalSeek">
      <MemberSignature Language="C#" Value="public bool ProtectGoalSeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectGoalSeek" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ProtectGoalSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ProtectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-598">获取或设置一个值，该值指示是否开启了只限用户界面的保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-598">Gets or sets a value that indicates whether user-interface-only protection is turned on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-599">如果开启了只限用户界面的保护，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-599">
              <see langword="true" /> if user-interface-only protection is turned on.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-600">若要打开用户界面保护，使用<xref:Microsoft.Office.Interop.Excel._Chart.Protect%2A>方法替换`UserInterfaceOnly`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="99209-600">To turn on user interface protection, use the <xref:Microsoft.Office.Interop.Excel._Chart.Protect%2A> method with the `UserInterfaceOnly` argument set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSelection">
      <MemberSignature Language="C#" Value="public bool ProtectSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ProtectSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-601">获取或设置一个值，该值指示是否不能选择 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-601">Gets or sets a value that indicates whether <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> elements cannot be selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-602">如果不能选择 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 元素，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-602">
              <see langword="true" /> if <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> elements cannot be selected.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-603">当此属性是`true`，无法将形状添加到<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-603">When this property is `true`, shapes cannot be added to the <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadarGroups">
      <MemberSignature Language="C#" Value="public object RadarGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RadarGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.RadarGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Rectangles(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Rectangles(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Refresh" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="99209-604">更新 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-604">Updates the cache of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler Resize;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler Resize" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheet.Resize" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-605">当 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的大小更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-605">Occurs when the size of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> is changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightAngleAxes">
      <MemberSignature Language="C#" Value="public object RightAngleAxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RightAngleAxes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.RightAngleAxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-606">获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 轴是否成直角（与图表旋转角或仰角无关）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-606">Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> axes are at right angles, independent of chart rotation or elevation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-607">如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 轴成直角（与图表旋转角或仰角无关），则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-607">
              <see langword="true" /> if the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> axes are at right angles, independent of chart rotation or elevation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-608">仅适用于三维行、 列或栏<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-608">Applies only to a 3-D line, column, or bar <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 <span data-ttu-id="99209-609">如果此属性为`true`、<xref:Microsoft.Office.Tools.Excel.ChartSheet.Perspective%2A>忽略属性。</span><span class="sxs-lookup"><span data-stu-id="99209-609">If this property is `true`, the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Perspective%2A> property is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-610">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Perspective%2A>属性设置的当前视图角度<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>为 45 度。</span><span class="sxs-lookup"><span data-stu-id="99209-610">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Perspective%2A> property to set the view perspective of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to 45 degrees.</span></span> <span data-ttu-id="99209-611">该示例设置<xref:Microsoft.Office.Tools.Excel.ChartSheet.RightAngleAxes%2A>属性`false`之前设置<xref:Microsoft.Office.Tools.Excel.ChartSheet.Perspective%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="99209-611">The example sets the <xref:Microsoft.Office.Tools.Excel.ChartSheet.RightAngleAxes%2A> property to `false` before setting the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Perspective%2A> property.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#9)]
 [!code-vb[Trin_ExcelChartSheet#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public object Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-612">获取或设置三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的旋转角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-612">Gets or sets the rotation of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-613">三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的旋转角（绘图区绕 z 轴的旋转角，以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-613">The rotation of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> (the rotation of the plot area around the z-axis, in degrees).</span>
          </span>
          <span data-ttu-id="99209-614">此属性的值必须在 0 到 360 之间，但三维条形图除外（其中该值必须在 0 到 44 之间）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-614">The value of this property must be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44.</span>
          </span>
          <span data-ttu-id="99209-615">默认值为 20。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-615">The default value is 20.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-616">仅适用于一个三维<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-616">Applies only to a 3-D <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-617">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Rotation%2A>属性来显示当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>而无需任何旋转。</span><span class="sxs-lookup"><span data-stu-id="99209-617">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Rotation%2A> property to display the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> without any rotation.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#22](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#22)]
 [!code-vb[Trin_ExcelChartSheet#22](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs(string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout, object Local) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="99209-618">要保存的文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-618">The name of the file to be saved.</span>
          </span>
          <span data-ttu-id="99209-619">可以包含完整路径；否则，Microsoft Office Excel 将文件保存在当前文件夹中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-619">You can include a full path; if you do not, Microsoft Office Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="FileFormat">
          <span data-ttu-id="99209-620">保存文件时要使用的文件格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-620">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="99209-621">有关有效选项的列表，请参见 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-621">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="99209-622">对于现有文件，默认格式为最后一种指定文件格式；对于新文件，默认格式为所用 Excel 版本的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-622">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="99209-623">一个区分大小写的字符串（不超过 15 个字符），指示为文件指定的保护密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-623">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="99209-624">文件的写保护密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-624">The write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="99209-625">如果保存文件时指定了密码，但打开文件时没有提供密码，则该文件以只读方式打开。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-625">If a file is saved with the password and the password is not supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="99209-626">如果为 <see langword="true" />，则在打开该文件时显示一条消息，建议以只读方式打开该文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-626">
              <see langword="true" /> to display a message when the file is opened, recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="99209-627">如果为 <see langword="true" />，则创建备份文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-627">
              <see langword="true" /> to create a backup file.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="99209-628">如果为 <see langword="true" />，则将工作簿添加到最近使用的文件列表中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-628">
              <see langword="true" /> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="99209-629">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-629">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="TextCodepage">
          <span data-ttu-id="99209-630">不在美国使用英语 Excel。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-630">Not used in U.S. English Excel.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="99209-631">不在美国使用英语 Excel。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-631">Not used in U.S. English Excel.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="99209-632">如果为 <see langword="true" />，则按照 Excel（包括控制面板设置）的语言保存文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-632">
              <see langword="true" /> saves files against the language of Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="99209-633">为 <see langword="false" />（默认值）时，则用 Visual Basic for Applications 所使用的语言（通常为美国英语，除非从中运行 Workbooks.Open 的 VBA 项目是旧的国际化 XL5/95 VBA 项目）保存文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-633">
              <see langword="false" /> (default) saves files against the language of Visual Basic for Applications (which is typically US English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-634">将对 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 所做的更改保存到另一个文件中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-634">Saves changes to the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> in a different file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-635">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-635">Optional Parameters</span></span>  
 <span data-ttu-id="99209-636">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-636">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-637">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.SaveAs%2A>方法以将保存当前的未受保护的副本<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-637">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.SaveAs%2A> method to save an unprotected copy of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#126](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#126)]
 [!code-vb[Trin_ExcelChartSheet#126](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#126)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChartTemplate">
      <MemberSignature Language="C#" Value="public void SaveChartTemplate (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChartTemplate(string Filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.SaveChartTemplate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="99209-638">新图表模板的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-638">The name of the new chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-639">将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 中的图表作为自定义模板保存在可用图表模板的列表中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-639">Saves the chart on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> as a custom template in the list of available chart templates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-640">默认情况下，此方法将当前的图表保存到用户的图表模板目录。</span><span class="sxs-lookup"><span data-stu-id="99209-640">By default, this method saves the current chart to the user's chart template directory.</span></span> <span data-ttu-id="99209-641">如果指定的 UNC 或 URL，则将保存图表到指定的位置。</span><span class="sxs-lookup"><span data-stu-id="99209-641">If a UNC or URL is specified, the chart will be saved to the specified location instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Scripts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollBars(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.ScrollBars(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(object Replace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Select(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="99209-642">要替换的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-642">The object to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-643">选择 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-643">Selects the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-644">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-644">Optional Parameters</span></span>  
 <span data-ttu-id="99209-645">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-645">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectEvent">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler SelectEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler SelectEvent" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheet.SelectEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-646">当选择 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-646">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> is selected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-647">下面的代码示例演示的处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheet.SelectEvent>显示一条消息的事件框中时的当前主轴<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>选择。</span><span class="sxs-lookup"><span data-stu-id="99209-647">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheet.SelectEvent> event that displays a message box when the primary axis of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> is selected.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#208](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#208)]
 [!code-vb[Trin_ExcelChartSheet#208](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#208)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesChange">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler SeriesChange;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler SeriesChange" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheet.SeriesChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-648">在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 数据点的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-648">Occurs when the value of a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> data point is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-649">下面的代码示例演示的处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheet.SeriesChange>设置为绿色当前的数据点时的点的边框颜色的事件<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>更改。</span><span class="sxs-lookup"><span data-stu-id="99209-649">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheet.SeriesChange> event that sets a point's border color to green when a data point of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> is changed.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#209](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#209)]
 [!code-vb[Trin_ExcelChartSheet#209](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#209)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesCollection">
      <MemberSignature Language="C#" Value="public object SeriesCollection (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SeriesCollection(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.SeriesCollection(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="99209-650">系列的名称或编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-650">The name or number of the series.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-651">获取一个对象，该对象表示图表或图表组中的单个系列（<see cref="T:Microsoft.Office.Interop.Excel.Series" /> 对象）或所有系列的集合（<see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> 集合）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-651">Gets an object that represents either a single series (a <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object) or a collection of all the series (a <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection) in the chart or chart group.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-652">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-652">Optional Parameters</span></span>  
 <span data-ttu-id="99209-653">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-653">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-654">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.SeriesCollection%2A>方法将数据标签添加到第一个数据系列存储在当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-654">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.SeriesCollection%2A> method to add data labels to the first data series in the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#127](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#127)]
 [!code-vb[Trin_ExcelChartSheet#127](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#127)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundPicture(string Filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.SetBackgroundPicture(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="99209-655">图形文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-655">The name of the graphic file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-656">设置 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的背景图形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-656">Sets the background graphic for a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-657">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.SetBackgroundPicture%2A>方法来设置当前的背景<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>到映像文件。</span><span class="sxs-lookup"><span data-stu-id="99209-657">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.SetBackgroundPicture%2A> method to set the background of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to an image file.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#128](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#128)]
 [!code-vb[Trin_ExcelChartSheet#128](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#128)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart(object Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.SetDefaultChart(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="99209-658">一个字符串，表示在创建新图表时要使用的默认图表模板的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-658">A string that indicates the name of the default chart template that will be used when creating new charts.</span>
          </span>
          <span data-ttu-id="99209-659">该名称可以标识用户定义的模板库中的图表，它也可以是指定内置图表模板的 <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-659">This name can identify a chart in the gallery for a user-defined template, or it can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> values that specifies a built-in chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-660">指定 Microsoft Office Excel 在创建新图表时使用的图表模板的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-660">Specifies the name of the chart template that Microsoft Office Excel uses when creating new charts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetElement">
      <MemberSignature Language="C#" Value="public void SetElement (Microsoft.Office.Core.MsoChartElementType Element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetElement(valuetype Microsoft.Office.Core.MsoChartElementType Element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.SetElement(Microsoft.Office.Core.MsoChartElementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Element" Type="Microsoft.Office.Core.MsoChartElementType" />
      </Parameters>
      <Docs>
        <param name="Element">
          <span data-ttu-id="99209-661">
            <see langword="Microsoft.Office.Core.MsoChartElementType" /> 值之一，指定元素修改的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-661">One of the <see langword="Microsoft.Office.Core.MsoChartElementType" /> values that specifies the type of element modification.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-662">修改 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 中显示的图表的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-662">Modifies an element on the chart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-663">使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.SetElement%2A>方法来修改指定的选项根据图表元素`Microsoft.Office.Core.MsoChartElementType`值。</span><span class="sxs-lookup"><span data-stu-id="99209-663">Use the <xref:Microsoft.Office.Tools.Excel.ChartSheet.SetElement%2A> method to modify an element of the chart according to the options specified by the `Microsoft.Office.Core.MsoChartElementType` values.</span></span> <span data-ttu-id="99209-664">例如，若要隐藏表图例，将值传递`Microsoft.Office.Core.MsoChartElementType.msoElementLegendNone`到<xref:Microsoft.Office.Tools.Excel.ChartSheet.SetElement%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="99209-664">For example, to hide the table legend, pass the value `Microsoft.Office.Core.MsoChartElementType.msoElementLegendNone` to the <xref:Microsoft.Office.Tools.Excel.ChartSheet.SetElement%2A> method.</span></span>  
  
 <span data-ttu-id="99209-665">你可以通过使用此方法执行的操作对应于以下按钮上**布局**选项卡的功能区时选择图表：</span><span class="sxs-lookup"><span data-stu-id="99209-665">The operations you can perform by using this method correspond to the following buttons on the **Layout** tab of the Ribbon when a chart is selected:</span></span>  
  
-   <span data-ttu-id="99209-666">中的所有按钮**标签**组。</span><span class="sxs-lookup"><span data-stu-id="99209-666">All buttons in the **Labels** group.</span></span>  
  
-   <span data-ttu-id="99209-667">中的所有按钮**轴**组。</span><span class="sxs-lookup"><span data-stu-id="99209-667">All buttons in the **Axes** group.</span></span>  
  
-   <span data-ttu-id="99209-668">中的所有按钮**分析**组。</span><span class="sxs-lookup"><span data-stu-id="99209-668">All buttons in the **Analysis** group.</span></span>  
  
-   <span data-ttu-id="99209-669">**绘图区**，**图表背景墙**，和**图表基底**按钮**后台**组。</span><span class="sxs-lookup"><span data-stu-id="99209-669">The **Plot Area**, **Chart Wall**, and **Chart Floor** buttons in the **Background** group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-670">下面的代码示例应用可用于图表工作表中的图图表类型的第 10 个布局`Chart1`。</span><span class="sxs-lookup"><span data-stu-id="99209-670">The following code example applies the tenth layout that is available for the chart type of the chart in chart sheet `Chart1`.</span></span> <span data-ttu-id="99209-671">此外，该示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.SetElement%2A>方法应用更多布局更改： 设置图表标题为居中且位于图表网格区域内的样式、 添加的水平轴的标题以及添加垂直轴的旋转的标题。</span><span class="sxs-lookup"><span data-stu-id="99209-671">In addition, the example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.SetElement%2A> method to apply further layout changes: setting the style of the chart title to be centered and to lie inside the chart grid area, adding a title for the horizontal axis, and adding a rotated title for the vertical axis.</span></span> <span data-ttu-id="99209-672">若要运行此代码示例，你的工作簿必须包含名为簇状的柱形二维图表工作表`Chart1`。</span><span class="sxs-lookup"><span data-stu-id="99209-672">To run this code example, your workbook must contain a clustered column two-dimensional chart sheet named `Chart1`.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkBook_Additional#18](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#18)]
 [!code-vb[Trin_ExcelWorkBook_Additional#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSourceData">
      <MemberSignature Language="C#" Value="public void SetSourceData (Microsoft.Office.Interop.Excel.Range Source, object PlotBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSourceData(class Microsoft.Office.Interop.Excel.Range Source, object PlotBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.SetSourceData(Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="PlotBy" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="99209-673">包含源数据的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-673">The range that contains the source data.</span>
          </span>
        </param>
        <param name="PlotBy">
          <span data-ttu-id="99209-674">指定绘制数据的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-674">Specifies the way the data is to be plotted.</span>
          </span>
          <span data-ttu-id="99209-675">可以为以下 <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-675">Can be either of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-676">设置 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的源数据范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-676">Sets the source data range for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-677">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-677">Optional Parameters</span></span>  
 <span data-ttu-id="99209-678">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-678">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-679">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.SetSourceData%2A>方法以设置当前的数据源<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>为工作区域`Sheet1`，其中包含通过 B5 A1 单元格。</span><span class="sxs-lookup"><span data-stu-id="99209-679">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.SetSourceData%2A> method to set the data source of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName> to a range on `Sheet1` that contains cells A1 through B5.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#2)]
 [!code-vb[Trin_ExcelChartSheet#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Shapes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-680">获取一个表示 <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> 上的所有形状的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-680">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-681">一个 <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 上的所有形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-681">A <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-682">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Shapes%2A>属性当前上绘制圆环图形状<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-682">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Shapes%2A> property to draw a doughnut shape on the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#23](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#23)]
 [!code-vb[Trin_ExcelChartSheet#23](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAllFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAllFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ShowAllFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-683">获取或设置是否在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 中显示的数据透视图上显示所有字段按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-683">Gets or sets whether to display all field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-684">如果要在指定的数据透视图上显示所有字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-684">
              <see langword="true" /> to display all field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-685">设置<xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowAllFieldButtons%2A>属性`true`以显示所有字段按钮上显示的指定数据透视图<xref:Microsoft.Office.Tools.Excel.ChartSheet>。</span><span class="sxs-lookup"><span data-stu-id="99209-685">Set the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowAllFieldButtons%2A> property to `true` to display all field buttons on the specified PivotChart that is displayed on the <xref:Microsoft.Office.Tools.Excel.ChartSheet>.</span></span> <span data-ttu-id="99209-686">将属性设置为`false`若要隐藏的所有字段按钮。</span><span class="sxs-lookup"><span data-stu-id="99209-686">Set the property to `false` to hide all field buttons.</span></span>  
  
 <span data-ttu-id="99209-687"><xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowAllFieldButtons%2A>属性对应于**全部隐藏**命令**字段按钮**的下拉列表**分析**在 Excel 中，这是可用的选项卡选定数据透视图。</span><span class="sxs-lookup"><span data-stu-id="99209-687">The <xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowAllFieldButtons%2A> property corresponds to the **Hide All** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99209-688">此属性显示在面向 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 的 Excel 2007 项目中的 IntelliSense 中。但是，此属性无法用于 Excel 2007 项目中。</span><span class="sxs-lookup"><span data-stu-id="99209-688">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="99209-689">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-689">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShowAxisFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAxisFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAxisFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ShowAxisFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-690">获取或设置是否在显示在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 上的数据透视图上显示轴字段按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-690">Gets or sets whether to display axis field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-691">若要在指定的数据透视图上显示轴字段按钮，请使用 <see langword="true" />；否则使用 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-691">
              <see langword="true" /> to display axis field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-692">设置<xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowAxisFieldButtons%2A>属性`true`显示轴字段按钮上显示的指定数据透视图<xref:Microsoft.Office.Tools.Excel.ChartSheet>。</span><span class="sxs-lookup"><span data-stu-id="99209-692">Set the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowAxisFieldButtons%2A> property to `true` to display axis field buttons on the specified PivotChart that is displayed on the <xref:Microsoft.Office.Tools.Excel.ChartSheet>.</span></span> <span data-ttu-id="99209-693">将属性设置为`false`隐藏按钮。</span><span class="sxs-lookup"><span data-stu-id="99209-693">Set the property to `false` to hide the buttons.</span></span>  
  
 <span data-ttu-id="99209-694"><xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowAxisFieldButtons%2A>属性对应于**显示轴字段****按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，它在选定的数据透视图时才可用的选项卡。</span><span class="sxs-lookup"><span data-stu-id="99209-694">The <xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowAxisFieldButtons%2A> property corresponds to the **Show Axis Field** **Buttons** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99209-695">此属性将出现在 IntelliSense Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="99209-695">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="99209-696">但是，不能在 Excel 2007 项目中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="99209-696">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="99209-697">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-697">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShowDataLabelsOverMaximum">
      <MemberSignature Language="C#" Value="public bool ShowDataLabelsOverMaximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDataLabelsOverMaximum" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ShowDataLabelsOverMaximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-698">获取或设置一个值，该值指示当值大于数值轴上的最大值时是否显示数据标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-698">Gets or sets a value that indicates whether to show the data labels when the value is greater than the maximum value on the value axis.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-699">如果当值大于数值轴上的最大值时显示数据标签，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-699">
              <see langword="true" /> to show the data labels when the value is greater than the maximum value on the value axis; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-700">如果你更改中变得比的数据点的大小小数值轴，你可以使用此属性设置是否显示数据标签。</span><span class="sxs-lookup"><span data-stu-id="99209-700">If you change the value axis in such a way that it became smaller than the size of the data points, you can use this property to set whether to show the data labels.</span></span> <span data-ttu-id="99209-701">此属性适用于仅二维图表。</span><span class="sxs-lookup"><span data-stu-id="99209-701">This property applies to 2-D charts only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowLegendFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowLegendFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLegendFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ShowLegendFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-702">获取或设置是否在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 中显示的数据透视图上显示图例字段按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-702">Gets or sets whether to display legend field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-703">如果要在指定的数据透视图上显示所有图例字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-703">
              <see langword="true" /> to display all legend field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-704">设置<xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowLegendFieldButtons%2A>属性`true`以显示图例字段按钮上显示的指定数据透视图<xref:Microsoft.Office.Tools.Excel.ChartSheet>。</span><span class="sxs-lookup"><span data-stu-id="99209-704">Set the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowLegendFieldButtons%2A> property to `true` to display legend field buttons on the specified PivotChart that is displayed on the <xref:Microsoft.Office.Tools.Excel.ChartSheet>.</span></span> <span data-ttu-id="99209-705">将属性设置为`false`隐藏按钮。</span><span class="sxs-lookup"><span data-stu-id="99209-705">Set the property to `false` to hide the buttons.</span></span>  
  
 <span data-ttu-id="99209-706"><xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowLegendFieldButtons%2A>属性对应于**显示图例字段按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，这是选项卡在选中某个数据透视图才可用。</span><span class="sxs-lookup"><span data-stu-id="99209-706">The <xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowLegendFieldButtons%2A> property corresponds to the **Show Legend Field Buttons** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99209-707">此属性将出现在 IntelliSense Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="99209-707">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="99209-708">但是，不能在 Excel 2007 项目中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="99209-708">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="99209-709">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-709">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShowReportFilterFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowReportFilterFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReportFilterFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ShowReportFilterFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-710">获取或设置是否在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 中显示的数据透视图上显示报告筛选器字段按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-710">Gets or sets whether to display the report filter field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-711">如果要在指定的数据透视图上显示报告筛选器字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-711">
              <see langword="true" /> to display the report filter field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-712">设置<xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowReportFilterFieldButtons%2A>属性`true`无法显示报表筛选器字段按钮上显示的指定数据透视图<xref:Microsoft.Office.Tools.Excel.ChartSheet>。</span><span class="sxs-lookup"><span data-stu-id="99209-712">Set the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowReportFilterFieldButtons%2A> property to `true` to display the Report Filter Field buttons on the specified PivotChart that is displayed on the <xref:Microsoft.Office.Tools.Excel.ChartSheet>.</span></span> <span data-ttu-id="99209-713">将属性设置为`false`隐藏按钮。</span><span class="sxs-lookup"><span data-stu-id="99209-713">Set the property to `false` to hide the buttons.</span></span>  
  
 <span data-ttu-id="99209-714"><xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowReportFilterFieldButtons%2A>属性对应于**显示报表筛选器字段按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，选项卡的当选定数据透视图才可用。</span><span class="sxs-lookup"><span data-stu-id="99209-714">The <xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowReportFilterFieldButtons%2A> property corresponds to the **Show Report Filter Field Buttons** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99209-715">此属性将出现在 IntelliSense Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="99209-715">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="99209-716">但是，不能在 Excel 2007 项目中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="99209-716">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="99209-717">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-717">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShowValueFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowValueFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowValueFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.ShowValueFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-718">获取或设置是否在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 中显示的数据透视图上显示值字段按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-718">Gets or sets whether to display the value field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-719">如果要在指定的数据透视图上显示值字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-719">
              <see langword="true" /> to display the value field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-720">设置<xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowValueFieldButtons%2A>属性`true`来显示值`field`按钮上显示的指定数据透视图<xref:Microsoft.Office.Tools.Excel.ChartSheet>。</span><span class="sxs-lookup"><span data-stu-id="99209-720">Set the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowValueFieldButtons%2A> property to `true` to display the Value `field` buttons on the specified PivotChart that is displayed on the <xref:Microsoft.Office.Tools.Excel.ChartSheet>.</span></span> <span data-ttu-id="99209-721">将属性设置为`false`隐藏按钮。</span><span class="sxs-lookup"><span data-stu-id="99209-721">Set the property to `false` to hide the button.</span></span>  
  
 <span data-ttu-id="99209-722"><xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowValueFieldButtons%2A>属性对应于**显示值字段按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，这是选项卡在选中某个数据透视图才可用。</span><span class="sxs-lookup"><span data-stu-id="99209-722">The <xref:Microsoft.Office.Tools.Excel.ChartSheet.ShowValueFieldButtons%2A> property corresponds to the **Show Value Field Buttons** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99209-723">此属性将出现在 IntelliSense Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="99209-723">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="99209-724">但是，不能在 Excel 2007 项目中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="99209-724">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="99209-725">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-725">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public event EventHandler Shutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Shutdown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheet.Shutdown" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-726">在准备卸载程序集的应用程序域时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-726">Occurs when the application domain for the assembly is about to unload.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-727">要在中调用的最后一步<xref:Microsoft.Office.Tools.Excel.ChartSheet>接口用作<xref:Microsoft.Office.Tools.Excel.ChartSheet>接口卸载。</span><span class="sxs-lookup"><span data-stu-id="99209-727">The last thing to be called in the <xref:Microsoft.Office.Tools.Excel.ChartSheet> interface as the <xref:Microsoft.Office.Tools.Excel.ChartSheet> interface unloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SideWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls SideWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls SideWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.SideWall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-728">获取一个对象，该对象表示三维图表的侧面墙。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-728">Gets an object that represents the side wall of a 3-D chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-729">一个 <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，表示三维图表的侧面墙。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-729">A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the side wall of a 3-D chart.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-730">使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.SideWall%2A>端三维图表的墙进行格式设置的属性。</span><span class="sxs-lookup"><span data-stu-id="99209-730">Use the <xref:Microsoft.Office.Tools.Excel.ChartSheet.SideWall%2A> property to format the side wall of a 3-D chart.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-731">下面的代码示例指定墙和现有的三维图表工作表下限的颜色，并设置样式为样式 4 的图表。</span><span class="sxs-lookup"><span data-stu-id="99209-731">The following code example specifies the colors of the walls and floor of an existing 3-D chart sheet and sets the chart style to style 4.</span></span> <span data-ttu-id="99209-732">若要运行此代码示例，该工作簿必须包含图表工作表调用`Chart1`的三维类型。</span><span class="sxs-lookup"><span data-stu-id="99209-732">To run this code example, the workbook must contain a chart sheet called `Chart1` of a 3-D type.</span></span>  
  
 [!code-csharp[Trin_Excelworkbook_Additional#38](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#38)]
 [!code-vb[Trin_Excelworkbook_Additional#38](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Spinners(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Spinners(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public event EventHandler Startup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Startup" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheet.Startup" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-733">在文档正在运行并且该程序集中的所有初始化代码都已运行之后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-733">Occurs after the document is running and all the initialization code in the assembly has been run.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubType">
      <MemberSignature Language="C#" Value="public int SubType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.SubType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfaceGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.SurfaceGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Tab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-734">获取 <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> 的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-734">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-735">
            <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> 的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-735">A <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-736">获取或设置包含有关 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-736">Gets or sets the object that contains data about the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-737">包含有关 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-737">The object that contains data about the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-738">Tag 属性的一个常见用途是存储与紧密关联的数据<xref:Microsoft.Office.Tools.Excel.ChartSheet>。</span><span class="sxs-lookup"><span data-stu-id="99209-738">A common use for the Tag property is to store data that is closely associated with the <xref:Microsoft.Office.Tools.Excel.ChartSheet>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextBoxes(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.TextBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect(object Password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.Unprotect(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="99209-739">用于取消保护工作表或工作簿的区分大小写的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-739">The case-sensitive password to use to unprotect the sheet or workbook.</span>
          </span>
          <span data-ttu-id="99209-740">如果未用密码保护工作表或工作簿，则省略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-740">If the sheet or workbook is not protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="99209-741">如果对使用密码进行保护的工作表省略此参数，则您将被提示输入密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-741">If you omit this argument for a sheet that is protected with a password, you will be prompted for the password.</span>
          </span>
          <span data-ttu-id="99209-742">如果对使用密码进行保护的工作簿省略此参数，则该方法将失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-742">If you omit this argument for a workbook that is protected with a password, the method fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99209-743">从 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 中移除保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-743">Removes protection from a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
          <span data-ttu-id="99209-744">如果工作表或工作簿不受保护，则此方法无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-744">This method has no effect if the sheet or workbook is not protected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99209-745">如果你忘记了密码，则无法取消保护<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-745">If you forget the password, you cannot unprotect the <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span> <span data-ttu-id="99209-746">最好将密码及其对应文档名的列表保存在安全的位置。</span><span class="sxs-lookup"><span data-stu-id="99209-746">It is a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="99209-747">可选参数</span><span class="sxs-lookup"><span data-stu-id="99209-747">Optional Parameters</span></span>  
 <span data-ttu-id="99209-748">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="99209-748">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99209-749">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Protect%2A>方法以保护所有当前内容<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-749">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Protect%2A> method to protect all contents of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span> <span data-ttu-id="99209-750">然后该示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.ProtectContents%2A>属性以验证该图表工作表受到保护，且然后将提示用户使用从该图表工作表中删除保护<xref:Microsoft.Office.Tools.Excel.ChartSheet.Unprotect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="99209-750">The example then uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.ProtectContents%2A> property to verify that the chart sheet is protected, and then prompts the user to remove protection from the chart sheet by using the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Unprotect%2A> method.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#124](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#124)]
 [!code-vb[Trin_ExcelChartSheet#124](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#124)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-751">确定该对象是否可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-751">Determines whether the object is visible.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-752">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Visible%2A>属性来隐藏当前<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-752">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Visible%2A> property to hide the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#26](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#26)]
 [!code-vb[Trin_ExcelChartSheet#26](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Walls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls Walls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls Walls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.Walls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99209-753">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，该对象表示三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的墙纸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-753">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99209-754">
            <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，表示三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 的墙纸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99209-754">A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99209-755">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheet.Walls%2A>属性设置权重和当前的墙的颜色<xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="99209-755">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheet.Walls%2A> property to set the weight and color of the walls of the current <xref:Microsoft.Office.Tools.Excel.ChartSheet?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#27](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#27)]
 [!code-vb[Trin_ExcelChartSheet#27](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WallsAndGridlines2D">
      <MemberSignature Language="C#" Value="public bool WallsAndGridlines2D { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WallsAndGridlines2D" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheet.WallsAndGridlines2D" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XYGroups">
      <MemberSignature Language="C#" Value="public object XYGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object XYGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheet.XYGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>