<Type Name="WorksheetBase" FullName="Microsoft.Office.Tools.Excel.WorksheetBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2aca535c24a4ab50f64fbb6047ec5d4355e9998a" />
    <Meta Name="ms.sourcegitcommit" Value="66ccc1ab172558cdfd2b9ffb616a60e4c9105be3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/19/2018" />
    <Meta Name="ms.locfileid" Value="46459856" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WorksheetBase : IDisposable, Microsoft.Office.Tools.Excel.IWorksheetExtension, System.ComponentModel.IComponent, System.ComponentModel.ISupportInitialize, System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorksheetBase extends System.Object implements class Microsoft.Office.Tools.EntryPoint, class Microsoft.Office.Tools.Excel.IWorksheetExtension, class Microsoft.Office.Tools.IExtension, class System.ComponentModel.IComponent, class System.ComponentModel.ISupportInitialize, class System.IDisposable, class System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Tools.Excel.WorksheetBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Tools.Excel.IWorksheetExtension</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IBindableComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fdc2b-101">提供 Microsoft Office Excel 的文档级项目中 Sheetn 类的基类<c></c>。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fdc2b-101">Provides the base class for the <c>Sheet</c>*n* classes in document-level projects for Microsoft Office Excel.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-102"><xref:Microsoft.Office.Tools.Excel.WorksheetBase>类是类的基类`Sheet` *n*使用 Visual Studio 创建的文档级 Excel 项目中的类。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-102">The <xref:Microsoft.Office.Tools.Excel.WorksheetBase> class is the base class for the `Sheet`*n* classes in document-level Excel projects created by using Visual Studio.</span></span> <span data-ttu-id="fdc2b-103">使用`Sheet` *n*类以编程方式访问你的项目中的工作表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-103">Use the `Sheet`*n* classes to programmatically access the worksheets in your project.</span></span> <span data-ttu-id="fdc2b-104"><xref:Microsoft.Office.Tools.Excel.WorksheetBase>类是*宿主项*，表示文档级项目中的工作表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-104">The <xref:Microsoft.Office.Tools.Excel.WorksheetBase> class is a *host item* that represents a worksheet in document-level projects.</span></span> <span data-ttu-id="fdc2b-105">有关详细信息，请参阅[主机项和主机控件概述](/visualstudio/vsto/host-items-and-host-controls-overview)并[工作表主机项](/visualstudio/vsto/worksheet-host-item)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-105">For more information, see [Host Items and Host Controls Overview](/visualstudio/vsto/host-items-and-host-controls-overview) and [Worksheet Host Item](/visualstudio/vsto/worksheet-host-item).</span></span>  
  
 <span data-ttu-id="fdc2b-106"><xref:Microsoft.Office.Tools.Excel.WorksheetBase>类提供了相同的成员<xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName>中 Excel 主互操作程序集，但它的类添加了以下功能：</span><span class="sxs-lookup"><span data-stu-id="fdc2b-106">The <xref:Microsoft.Office.Tools.Excel.WorksheetBase> class provides the same members as the <xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName> class in the Excel primary interop assembly, but it adds the following features:</span></span>  
  
-   <span data-ttu-id="fdc2b-107"><xref:Microsoft.Office.Tools.Excel.WorksheetBase.Controls%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-107"><xref:Microsoft.Office.Tools.Excel.WorksheetBase.Controls%2A> property.</span></span> <span data-ttu-id="fdc2b-108">若要将托管的控件添加到 Excel 工作表，或删除控件，在运行时，请使用此属性。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-108">Use this property to add managed controls to an Excel worksheet, or to remove controls, at run time.</span></span>  
  
-   <span data-ttu-id="fdc2b-109"><xref:Microsoft.Office.Tools.Excel.WorksheetBase.InnerObject%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-109"><xref:Microsoft.Office.Tools.Excel.WorksheetBase.InnerObject%2A> property.</span></span> <span data-ttu-id="fdc2b-110">使用此属性来获取基础<xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName>工作表主机项的对象。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-110">Use this property to get the underlying <xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName> object for a worksheet host item.</span></span>  
  
-   <span data-ttu-id="fdc2b-111"><xref:Microsoft.Office.Tools.Excel.WorksheetBase.GetAutomationObject%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-111"><xref:Microsoft.Office.Tools.Excel.WorksheetBase.GetAutomationObject%2A> method.</span></span> <span data-ttu-id="fdc2b-112">重写此方法以将向工作表中的 VBA 代码项目中的类公开。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-112">Override this method to expose a class in your project to VBA code in the worksheet.</span></span>  
  
-   <span data-ttu-id="fdc2b-113">文档级事件，如<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ActivateEvent>和<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Change>，仅在 Excel 对象模型中的应用程序级别提供。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-113">Document-level events, such as <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ActivateEvent> and <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Change>, that are provided only at the application level in the Excel object model.</span></span> <span data-ttu-id="fdc2b-114">也就是说，在 Excel 对象模型中，这些事件定义中<xref:Microsoft.Office.Interop.Excel.Application?displayProperty=fullName>类而不是<xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName>类。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-114">That is, in the Excel object model, these events are defined in the <xref:Microsoft.Office.Interop.Excel.Application?displayProperty=fullName> class rather than the <xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName> class.</span></span>  
  
## <a name="creating-worksheet-host-items"></a><span data-ttu-id="fdc2b-115">创建工作表主机项</span><span class="sxs-lookup"><span data-stu-id="fdc2b-115">Creating Worksheet Host Items</span></span>  
 <span data-ttu-id="fdc2b-116">无法创建<xref:Microsoft.Office.Tools.Excel.WorksheetBase>以编程方式在 Office 项目中的对象。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-116">You cannot create <xref:Microsoft.Office.Tools.Excel.WorksheetBase> objects programmatically in Office projects.</span></span>  
  
 <span data-ttu-id="fdc2b-117">在文档级项目中， `Sheet` *n*类 (从其派生<xref:Microsoft.Office.Tools.Excel.WorksheetBase>) 自动实例化[!INCLUDE[vsto_runtime](~/includes/vsto-runtime-md.md)]当最终用户打开工作簿。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-117">In document-level projects, the `Sheet`*n* classes (which derive from <xref:Microsoft.Office.Tools.Excel.WorksheetBase>) are instantiated automatically by the [!INCLUDE[vsto_runtime](~/includes/vsto-runtime-md.md)] when the end user opens the workbook.</span></span> <span data-ttu-id="fdc2b-118">有关详细信息，请参阅[Programming Document-level Customizations](/visualstudio/vsto/programming-document-level-customizations)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-118">For more information, see [Programming Document-Level Customizations](/visualstudio/vsto/programming-document-level-customizations).</span></span>  
  
 <span data-ttu-id="fdc2b-119">在应用程序级项目中，您可以创建工作表主机项以编程方式使用`GetVstoObject`方法。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-119">In application-level projects, you can create worksheet host items programmatically by using the `GetVstoObject` method.</span></span> <span data-ttu-id="fdc2b-120">创建工作表宿主项这<xref:Microsoft.Office.Tools.Excel.Worksheet?displayProperty=fullName>对象，而非<xref:Microsoft.Office.Tools.Excel.WorksheetBase>对象。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-120">The worksheet host item you create is a <xref:Microsoft.Office.Tools.Excel.Worksheet?displayProperty=fullName> object, rather than a <xref:Microsoft.Office.Tools.Excel.WorksheetBase> object.</span></span> <span data-ttu-id="fdc2b-121">有关更多信息，请参见 [在运行时在 VSTO 外接程序中扩展 Word 文档和 Excel 工作簿](/visualstudio/vsto/extending-word-documents-and-excel-workbooks-in-vsto-add-ins-at-run-time)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-121">For more information, see [Extending Word Documents and Excel Workbooks in VSTO Add-ins at Run Time](/visualstudio/vsto/extending-word-documents-and-excel-workbooks-in-vsto-add-ins-at-run-time).</span></span>  
  
## <a name="usage"></a><span data-ttu-id="fdc2b-122">用法</span><span class="sxs-lookup"><span data-stu-id="fdc2b-122">Usage</span></span>  
 [!INCLUDE[vsto_net4utilities](~/includes/vsto-net4utilities-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorksheetBase (Microsoft.Office.Tools.Excel.Factory factory, IServiceProvider serviceProvider, string primaryCookie, string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.Office.Tools.Excel.Factory factory, class System.IServiceProvider serviceProvider, string primaryCookie, string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.#ctor(Microsoft.Office.Tools.Excel.Factory,System.IServiceProvider,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Office.Tools.Excel.Factory" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="primaryCookie" Type="System.String" />
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <param name="serviceProvider">To be added.</param>
        <param name="primaryCookie">To be added.</param>
        <param name="identifier">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase._CodeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public int _DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 _DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase._DisplayRightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Activate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateEvent">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_ActivateEventHandler ActivateEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_ActivateEventHandler ActivateEvent" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.ActivateEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_ActivateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-123">在激活工作表时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-123">Occurs when the worksheet is activated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-124">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ActivateEvent>激活时显示的工作表名称的事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-124">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ActivateEvent> event that displays the name of the worksheet when it is activated.</span></span>  
  
 <span data-ttu-id="fdc2b-125">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-125">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#200](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#200)]
 [!code-vb[Trin_ExcelWorkSheet#200](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#200)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-126">获取一个表示 Microsoft Office Excel 应用程序的 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-126">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Office Excel application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-127">一个表示 Excel 应用程序的 <see cref="T:Microsoft.Office.Interop.Excel.Application" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-127">A <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Excel application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-128">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Application%2A>属性来重新排列应用程序窗口。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-128">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Application%2A> property to rearrange the application windows.</span></span>  
  
 <span data-ttu-id="fdc2b-129">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-129">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#1](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#1)]
 [!code-vb[Trin_ExcelWorkSheet#1](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Arcs(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Arcs(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoFilter AutoFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoFilter AutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-130">如果启用了筛选功能，则获取一个 <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" />，它提供工作表上的筛选列表的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-130">Gets a <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> that provides information about filtered lists on the worksheet if filtering is enabled.</span>
          </span>
          <span data-ttu-id="fdc2b-131">如果关闭了筛选功能，则获取 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-131">Gets <see langword="null" /> if filtering is off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-132">一个 <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" />，它提供工作表上的筛选列表的相关信息（如果启用了筛选功能）；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-132">A <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> that provides information about filtered lists on the worksheet if filtering is enabled; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-133">若要以编程方式启用筛选，请使用<xref:Microsoft.Office.Interop.Excel.Range.AutoFilter%2A>方法<xref:Microsoft.Office.Interop.Excel.Range>对象或<xref:Microsoft.Office.Tools.Excel.NamedRange.AutoFilter%2A>方法的<xref:Microsoft.Office.Tools.Excel.NamedRange>对象。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-133">To programmatically enable filtering, use the <xref:Microsoft.Office.Interop.Excel.Range.AutoFilter%2A> method of the <xref:Microsoft.Office.Interop.Excel.Range> object or the <xref:Microsoft.Office.Tools.Excel.NamedRange.AutoFilter%2A> method of a <xref:Microsoft.Office.Tools.Excel.NamedRange> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-134">下面的代码示例创建的筛选的列表中的水果<xref:Microsoft.Office.Interop.Excel.Range>，然后使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilter%2A>属性来显示列表的筛选条件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-134">The following code example creates a filtered list of fruits in a <xref:Microsoft.Office.Interop.Excel.Range>, and then uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilter%2A> property to display the filter criteria for the list.</span></span> <span data-ttu-id="fdc2b-135">该示例然后会提示用户关闭筛选器，通过使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilterMode%2A>属性，并最后使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.FilterMode%2A>属性来显示工作表是否可以筛选的列表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-135">The example then prompts the user to turn off the filter by using the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilterMode%2A> property, and finally uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.FilterMode%2A> property to display whether the worksheet has a filtered list.</span></span>  
  
 <span data-ttu-id="fdc2b-136">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-136">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#2)]
 [!code-vb[Trin_ExcelWorkSheet#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilterMode">
      <MemberSignature Language="C#" Value="public bool AutoFilterMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilterMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-137">获取或设置一个值，该值指示当前是否在工作表上启用了筛选功能（即，当前是否显示了筛选器下拉箭头）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-137">Gets or sets a value that indicates whether filtering is currently enabled on the worksheet (that is, whether the filter drop-down arrows are currently displayed).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-138">如果当前已在工作表上启用筛选功能，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-138">
              <see langword="true" /> if filtering is currently enabled on the worksheet; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-139">可以将此属性设置为`false`若要禁用筛选 (也就是说，若要删除筛选器下拉箭头)，但不能将其设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-139">You can set this property to `false` to disable filtering (that is, to remove the filter drop-down arrows), but you cannot set it to `true`.</span></span> <span data-ttu-id="fdc2b-140">若要启用筛选并创建已筛选的列表，请使用<xref:Microsoft.Office.Interop.Excel.Range.AutoFilter%2A>方法<xref:Microsoft.Office.Interop.Excel.Range>对象，或使用<xref:Microsoft.Office.Tools.Excel.NamedRange.AutoFilter%2A>方法的<xref:Microsoft.Office.Tools.Excel.NamedRange>对象。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-140">To enable filtering and create a filtered list, use the <xref:Microsoft.Office.Interop.Excel.Range.AutoFilter%2A> method of a <xref:Microsoft.Office.Interop.Excel.Range> object, or use the <xref:Microsoft.Office.Tools.Excel.NamedRange.AutoFilter%2A> method of a <xref:Microsoft.Office.Tools.Excel.NamedRange> object.</span></span>  
  
 <span data-ttu-id="fdc2b-141">此属性仅指示是否启用筛选;它不指示是否正在筛选的任何数据。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-141">This property indicates only whether filtering is enabled; it does not indicate whether any data is being filtered.</span></span> <span data-ttu-id="fdc2b-142">若要确定是否在工作表正在主动筛选数据，请使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.FilterMode%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-142">To determine whether the worksheet is actively filtering data, use the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.FilterMode%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-143">下面的代码示例创建的筛选的列表中的水果<xref:Microsoft.Office.Interop.Excel.Range>，然后使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilter%2A>属性来显示列表的筛选条件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-143">The following code example creates a filtered list of fruits in a <xref:Microsoft.Office.Interop.Excel.Range>, and then uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilter%2A> property to display the filter criteria for the list.</span></span> <span data-ttu-id="fdc2b-144">该示例然后会提示用户关闭筛选器，通过使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilterMode%2A>属性，并最后使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.FilterMode%2A>属性来显示工作表是否可以筛选的列表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-144">The example then prompts the user to turn off the filter by using the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilterMode%2A> property, and finally uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.FilterMode%2A> property to display whether the worksheet has a filtered list.</span></span>  
  
 <span data-ttu-id="fdc2b-145">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-145">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#2)]
 [!code-vb[Trin_ExcelWorkSheet#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="fdc2b-146">此属性设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-146">This property is set to <see langword="true" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Base">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Excel.Worksheet Base { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Excel.Worksheet Base" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Base" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Worksheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-147">获取此 <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> 对象扩展的 <see cref="T:Microsoft.Office.Tools.Excel.WorksheetBase" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-147">Gets the <see cref="T:Microsoft.Office.Tools.Excel.Worksheet" /> object that this <see cref="T:Microsoft.Office.Tools.Excel.WorksheetBase" /> object extends.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-148">此 <see cref="T:Microsoft.Office.Tools.Excel.WorksheetBase" /> 对象扩展的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-148">The object that this <see cref="T:Microsoft.Office.Tools.Excel.WorksheetBase" /> object extends.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-149"><xref:Microsoft.Office.Tools.Excel.WorksheetBase>类用于扩展<xref:Microsoft.Office.Tools.Excel.Worksheet>通过实现对象<xref:Microsoft.Office.Tools.Excel.IWorksheetExtension>接口。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-149">The <xref:Microsoft.Office.Tools.Excel.WorksheetBase> class extends <xref:Microsoft.Office.Tools.Excel.Worksheet> objects by implementing the <xref:Microsoft.Office.Tools.Excel.IWorksheetExtension> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeDoubleClick">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_BeforeDoubleClickEventHandler BeforeDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_BeforeDoubleClickEventHandler BeforeDoubleClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.BeforeDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_BeforeDoubleClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-150">在双击工作表之后，默认的双击操作之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-150">Occurs when the worksheet is double-clicked, before the default double-click action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-151">当用户双击单元格的边框不会发生此事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-151">This event does not occur when the user double-clicks the border of a cell.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-152">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.WorksheetBase.BeforeDoubleClick>取消当前工作表上的双击操作的事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-152">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.BeforeDoubleClick> event that cancels the double-click action on the current worksheet.</span></span> <span data-ttu-id="fdc2b-153">事件处理程序会通知用户双击不允许对工作表，然后设置`Cancel`的参数<xref:Microsoft.Office.Interop.Excel.DocEvents_BeforeDoubleClickEventHandler>事件处理程序`true`，以便 Microsoft Office Excel 取消双击操作。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-153">The event handler informs the user that double-clicking is not allowed for the worksheet, and then sets the `Cancel` parameter of the <xref:Microsoft.Office.Interop.Excel.DocEvents_BeforeDoubleClickEventHandler> event handler to `true` so that Microsoft Office Excel cancels the double-click action.</span></span>  
  
 <span data-ttu-id="fdc2b-154">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-154">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#201](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#201)]
 [!code-vb[Trin_ExcelWorkSheet#201](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#201)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeRightClick">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_BeforeRightClickEventHandler BeforeRightClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_BeforeRightClickEventHandler BeforeRightClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.BeforeRightClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_BeforeRightClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-155">在右击工作表之后，默认的右击操作之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-155">Occurs when the worksheet is right-clicked, before the default right-click action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-156">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.WorksheetBase.BeforeRightClick>取消当前工作表上的右键单击操作的事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-156">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.BeforeRightClick> event that cancels the right-click action on the current worksheet.</span></span> <span data-ttu-id="fdc2b-157">事件处理程序将通知用户，右键单击不允许对工作表，然后设置`Cancel`的参数<xref:Microsoft.Office.Interop.Excel.DocEvents_BeforeRightClickEventHandler>事件处理程序`true`，以便 Microsoft Office Excel 取消右键单击操作。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-157">The event handler informs the user that right-clicking is not allowed for the worksheet, and then sets the `Cancel` parameter of the <xref:Microsoft.Office.Interop.Excel.DocEvents_BeforeRightClickEventHandler> event handler to `true` so that Microsoft Office Excel cancels the right-click action.</span></span>  
  
 <span data-ttu-id="fdc2b-158">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-158">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#202](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#202)]
 [!code-vb[Trin_ExcelWorkSheet#202](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#202)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public virtual void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContext">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingContext BindingContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingContext BindingContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.BindingContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.BindingContextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Buttons(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Buttons(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_CalculateEventHandler Calculate;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_CalculateEventHandler Calculate" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.Calculate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_CalculateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-159">在重新计算工作表之后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-159">Occurs after the worksheet is recalculated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-160">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Calculate>时计算出它显示的工作表名称的事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-160">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Calculate> event that displays the name of the worksheet when it is calculated.</span></span>  
  
 <span data-ttu-id="fdc2b-161">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-161">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#203](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#203)]
 [!code-vb[Trin_ExcelWorkSheet#203](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#203)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateMethod">
      <MemberSignature Language="C#" Value="public void CalculateMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CalculateMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.CalculateMethod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-162">计算工作表中的公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-162">Calculates the formulas in the worksheet.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Cells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-163">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，该对象表示工作表上的所有单元格（不仅仅是当前正在使用的单元格）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-163">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the worksheet (not just the cells that are currently in use).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-164">一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，表示工作表上的所有单元格（不仅仅是当前正在使用的单元格）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-164">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the worksheet (not just the cells that are currently in use).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-165">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Cells%2A>属性工作表上每个单元格中设置名称、 大小和的字体。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-165">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Cells%2A> property to set the name, size, and boldness of the font in every cell on the worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-166">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-166">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#3](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#3)]
 [!code-vb[Trin_ExcelWorkSheet#3](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_ChangeEventHandler Change;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_ChangeEventHandler Change" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.Change" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_ChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-167">在 <see cref="T:Microsoft.Office.Tools.Excel.WorksheetBase" /> 单元格中的某些内容发生更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-167">Occurs when something changes in the <see cref="T:Microsoft.Office.Tools.Excel.WorksheetBase" /> cells.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-168">不会触发重新计算的单元格更改此事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-168">This event does not occur when cells change during a recalculation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-169">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Change>显示工作表的名称和已更改的单元格的范围的事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-169">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Change> event that displays the name of the worksheet and the range of cells that were changed.</span></span>  
  
 <span data-ttu-id="fdc2b-170">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-170">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#204](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#204)]
 [!code-vb[Trin_ExcelWorkSheet#204](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#204)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ChartObjects(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.ChartObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="fdc2b-171">图表的名称或编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-171">The name or number of the chart.</span>
          </span>
          <span data-ttu-id="fdc2b-172">此参数可以是一个数组，以指定多个图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-172">This argument can be an array, to specify more than one chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-173">获取一个对象，该对象表示工作表上的单个嵌入式图表（一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" />）或所有嵌入式图表的集合（一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-173">Gets an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" />) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" />) on the worksheet.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdc2b-174">一个对象，表示工作表上的单个嵌入式图表（一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" />）或所有嵌入式图表的集合（一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-174">An object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" />) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" />) on the worksheet.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-175">此方法不是等效于<xref:Microsoft.Office.Tools.Excel.Workbook.Charts%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-175">This method is not equivalent to the <xref:Microsoft.Office.Tools.Excel.Workbook.Charts%2A> property.</span></span> <span data-ttu-id="fdc2b-176">此方法返回嵌入式的图表;<xref:Microsoft.Office.Tools.Excel.Workbook.Charts%2A>属性返回图表工作表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-176">This method returns embedded charts; the <xref:Microsoft.Office.Tools.Excel.Workbook.Charts%2A> property returns chart sheets.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-177">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-177">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-178">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-178">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-179">下面的代码示例演示如何使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ChartObjects%2A>方法以获取嵌入式的图表和的单个嵌入式的图表的集合。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-179">The following code example demonstrates how to use the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ChartObjects%2A> method to get the collection of embedded charts and a single embedded chart.</span></span> <span data-ttu-id="fdc2b-180">该示例首先使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ChartObjects%2A>方法以获取<xref:Microsoft.Office.Interop.Excel.ChartObjects?displayProperty=fullName>的当前工作表集合并创建新的<xref:Microsoft.Office.Interop.Excel.ChartObject?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-180">The example first uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ChartObjects%2A> method to get the <xref:Microsoft.Office.Interop.Excel.ChartObjects?displayProperty=fullName> collection of the current worksheet and create a new <xref:Microsoft.Office.Interop.Excel.ChartObject?displayProperty=fullName>.</span></span> <span data-ttu-id="fdc2b-181">设置格式的新后<xref:Microsoft.Office.Interop.Excel.ChartObject?displayProperty=fullName>并给予<xref:Microsoft.Office.Interop.Excel.ChartObject?displayProperty=fullName>名称，该示例然后使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ChartObjects%2A>方法以获取新<xref:Microsoft.Office.Interop.Excel.ChartObject?displayProperty=fullName>（按其名称进行索引），并显示在图表的打印预览。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-181">After formatting the new <xref:Microsoft.Office.Interop.Excel.ChartObject?displayProperty=fullName> and giving the <xref:Microsoft.Office.Interop.Excel.ChartObject?displayProperty=fullName> a name, the example then uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ChartObjects%2A> method to get the new <xref:Microsoft.Office.Interop.Excel.ChartObject?displayProperty=fullName> (indexed by its name) and displays a print preview of the chart.</span></span>  
  
 <span data-ttu-id="fdc2b-182">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-182">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#100](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#100)]
 [!code-vb[Trin_ExcelWorkSheet#100](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CheckBoxes(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.CheckBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object customDictionary, object ignoreUppercase, object alwaysSuggest, object spellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSpelling(object customDictionary, object ignoreUppercase, object alwaysSuggest, object spellLang) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customDictionary" Type="System.Object" />
        <Parameter Name="ignoreUppercase" Type="System.Object" />
        <Parameter Name="alwaysSuggest" Type="System.Object" />
        <Parameter Name="spellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="customDictionary">To be added.</param>
        <param name="ignoreUppercase">To be added.</param>
        <param name="alwaysSuggest">To be added.</param>
        <param name="spellLang">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CircleInvalid">
      <MemberSignature Language="C#" Value="public void CircleInvalid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CircleInvalid() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.CircleInvalid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-183">圈释工作表上的无效条目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-183">Circles invalid entries on the worksheet.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CircularReference">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CircularReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CircularReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.CircularReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-184">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，该对象表示包含表上第一个循环引用的范围，或者，如果表上不存在循环引用，则获取 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-184">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the first circular reference on the sheet, or gets <see langword="null" /> if there is no circular reference on the sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-185">一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，表示包含表上第一个循环引用的范围，或者，如果表上不存在循环引用，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-185">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the first circular reference on the sheet; <see langword="null" /> if there is no circular reference on the sheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-186">计算可以继续操作之前，必须删除循环引用。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-186">The circular reference must be removed before calculation can proceed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-187">下面的代码示例通过设置单元格 A1 和 B1 解析为每个其他的值的公式创建循环引用。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-187">The following code example creates a circular reference by setting the formulas of cells A1 and B1 to resolve to the value of each other.</span></span> <span data-ttu-id="fdc2b-188">该示例然后使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.CircularReference%2A>属性来报告工作表是否具有循环引用。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-188">The example then uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.CircularReference%2A> property to report whether the worksheet has a circular reference.</span></span>  
  
 <span data-ttu-id="fdc2b-189">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-189">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#4)]
 [!code-vb[Trin_ExcelWorkSheet#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearArrows">
      <MemberSignature Language="C#" Value="public void ClearArrows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearArrows() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.ClearArrows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-190">从工作表清除跟踪箭头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-190">Clears the tracer arrows from the worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-191">跟踪器箭头是通过使用审核功能添加的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-191">Tracer arrows are added by using the auditing feature.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCircles">
      <MemberSignature Language="C#" Value="public void ClearCircles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearCircles() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.ClearCircles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-192">清除工作表中无效条目上的标识圈。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-192">Clears circles from invalid entries on the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-193">使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.CircleInvalid%2A>到圆形的单元格包含无效数据的方法。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-193">Use the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.CircleInvalid%2A> method to circle cells that contain invalid data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.CodeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-194">获取一个表示工作表上一个或多个列的 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-194">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents one or more columns on the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-195">一个表示工作表上一个或多个列的 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-195">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents one or more columns on the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-196">如果使用不带参数，该属性返回<xref:Microsoft.Office.Interop.Excel.Range>对象，其中包含工作表上的所有列。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-196">When used without parameters, this property returns a <xref:Microsoft.Office.Interop.Excel.Range> object that contains all the columns on the worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-197">此属性可以使用以下可选参数，用于在工作表上获取特定的列。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-197">This property can be used with the following optional parameters to get specific columns on the worksheet.</span></span> <span data-ttu-id="fdc2b-198">如果参数中使用此属性，返回值是必须强制转换为对象<xref:Microsoft.Office.Interop.Excel.Range>。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-198">If you use this property with parameters, the return value is an object that must be cast to a <xref:Microsoft.Office.Interop.Excel.Range>.</span></span>  
  
|<span data-ttu-id="fdc2b-199">参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-199">Parameter</span></span>|<span data-ttu-id="fdc2b-200">描述</span><span class="sxs-lookup"><span data-stu-id="fdc2b-200">Description</span></span>|  
|---------------|-----------------|  
|`RowIndex`|<span data-ttu-id="fdc2b-201">若要获取的一个或多个列的索引。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-201">The index of one or more columns to get.</span></span><br /><br /> <span data-ttu-id="fdc2b-202">若要获取的单个列，请将下列对象之一传递给此参数：</span><span class="sxs-lookup"><span data-stu-id="fdc2b-202">To get a single column, pass one of the following objects to this parameter:</span></span><br /><br /> <span data-ttu-id="fdc2b-203">-一个整数，指定你想要获取的列的索引。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-203">-   An integer that specifies the index of the column you want to get.</span></span> <span data-ttu-id="fdc2b-204">列索引从 1 开始。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-204">The column indexes begin at 1.</span></span><br /><span data-ttu-id="fdc2b-205">的你想要获取的列的字母组成字符串。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-205">-   A string that consists of the letter of the column you want to get.</span></span><br /><br /> <span data-ttu-id="fdc2b-206">若要获取多个相邻的列，请将传递格式的字符串"`first column letter`:`last column letter`"。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-206">To get multiple contiguous columns, pass a string with the format "`first column letter`:`last column letter`".</span></span> <span data-ttu-id="fdc2b-207">例如，若要获取列 A 到 E，传递"A:E"。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-207">For example, to get columns A through E, pass "A:E".</span></span> <span data-ttu-id="fdc2b-208">**注意：** 此参数的名称会令人误解; 此参数指定你想要获取，不是行的列的索引。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-208">**Note:**  The name of this parameter is misleading; this parameter specifies the indexes of the columns you want to get, not the rows.</span></span>|  
|`ColumnIndex`|<span data-ttu-id="fdc2b-209">不使用此参数。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-209">Do not use this parameter.</span></span> <span data-ttu-id="fdc2b-210">此属性将引发<xref:System.Runtime.InteropServices.COMException>如果尝试将值传递给此参数。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-210">This property will throw a <xref:System.Runtime.InteropServices.COMException> if you try to pass a value to this parameter.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-211">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Columns%2A>要在工作表上第一列中设置颜色、 名称、 大小和的所有单元格的字体属性。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-211">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Columns%2A> property to set the color, name, size, and boldness of the font of all the cells in the first column on the worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-212">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-212">This example is for a document-level customization.</span></span> <span data-ttu-id="fdc2b-213">若要运行此代码，请将其复制到你的项目中的工作表类之一。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-213">To run this code, copy it into one of the worksheet classes in your project.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#5](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#5)]
 [!code-vb[Trin_ExcelWorkSheet#5](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comments Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comments Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Comments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-214">获取一个表示工作表的所有注释的 <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-214">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-215">一个表示工作表的所有注释的 <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-215">A <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-216">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Comments%2A>属性之前和之后将注释添加到单元格 A1 当前工作表上显示的评论数。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-216">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Comments%2A> property to display the number of comments on the current worksheet before and after adding a comment to cell A1.</span></span>  
  
 <span data-ttu-id="fdc2b-217">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-217">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#6](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#6)]
 [!code-vb[Trin_ExcelWorkSheet#6](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.ConsolidationFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConsolidationFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-218">获取用于当前合并的函数代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-218">Gets the function code used for the current consolidation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-219">
            <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-219">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-220">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ConsolidationFunction%2A>属性来确定哪一个函数由合并工作表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-220">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ConsolidationFunction%2A> property to determine which function is used by the worksheet for consolidation.</span></span>  
  
 <span data-ttu-id="fdc2b-221">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-221">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#7](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#7)]
 [!code-vb[Trin_ExcelWorkSheet#7](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationOptions">
      <MemberSignature Language="C#" Value="public object ConsolidationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.ConsolidationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-222">获取合并选项的三元素 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-222">Gets a three-element <see cref="T:System.Array" /> of consolidation options.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-223">合并选项的三元素 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-223">A three-element <see cref="T:System.Array" /> of consolidation options.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-224">如果返回的数组中的元素是`true`，则设置相应的选项。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-224">If an element in the returned array is `true`, then the corresponding option is set.</span></span> <span data-ttu-id="fdc2b-225">数组中的三个元素是：</span><span class="sxs-lookup"><span data-stu-id="fdc2b-225">The three elements in the array are:</span></span>  
  
|<span data-ttu-id="fdc2b-226">元素</span><span class="sxs-lookup"><span data-stu-id="fdc2b-226">Element</span></span>|<span data-ttu-id="fdc2b-227">含义</span><span class="sxs-lookup"><span data-stu-id="fdc2b-227">Meaning</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="fdc2b-228">1</span><span class="sxs-lookup"><span data-stu-id="fdc2b-228">1</span></span>|<span data-ttu-id="fdc2b-229">在顶部行中使用标签</span><span class="sxs-lookup"><span data-stu-id="fdc2b-229">Use labels in top row</span></span>|  
|<span data-ttu-id="fdc2b-230">2</span><span class="sxs-lookup"><span data-stu-id="fdc2b-230">2</span></span>|<span data-ttu-id="fdc2b-231">在左侧列中使用标签</span><span class="sxs-lookup"><span data-stu-id="fdc2b-231">Use labels in left column</span></span>|  
|<span data-ttu-id="fdc2b-232">3</span><span class="sxs-lookup"><span data-stu-id="fdc2b-232">3</span></span>|<span data-ttu-id="fdc2b-233">创建链接到源数据</span><span class="sxs-lookup"><span data-stu-id="fdc2b-233">Create links to source data</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-234">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ConsolidationOptions%2A>属性来显示当前工作表的合并选项的值。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-234">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ConsolidationOptions%2A> property to display the values of the consolidation options for the current worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-235">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-235">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#8](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#8)]
 [!code-vb[Trin_ExcelWorkSheet#8](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationSources">
      <MemberSignature Language="C#" Value="public object ConsolidationSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationSources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.ConsolidationSources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-236">获取字符串的 <see cref="T:System.Array" />，这些字符串指定工作表的当前合并的源表和范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-236">Gets an <see cref="T:System.Array" /> of strings that name the source sheets and ranges for the worksheet's current consolidation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-237">指定工作表的当前合并的源表和范围的字符串值的 <see cref="T:System.Array" />；如果表上不存在合并，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-237">An <see cref="T:System.Array" /> of string values that name the source sheets and ranges for the worksheet's current consolidation; <see langword="null" /> if there is no consolidation on the sheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-238">下面的代码示例在当前表中，创建一个合并，然后使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ConsolidationSources%2A>属性来显示合并的源。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-238">The following code example creates a consolidation on the current worksheet, and then uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ConsolidationSources%2A> property to display the sources of the consolidation.</span></span>  
  
 <span data-ttu-id="fdc2b-239">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-239">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#9)]
 [!code-vb[Trin_ExcelWorkSheet#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Excel.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Excel.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-240">获取工作表中包含的托管控件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-240">Gets the collection of managed controls that are contained on the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-241">一个 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" />，其中包含工作表上的所有托管控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-241">A <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> that contains all the managed controls on the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-242">Office 解决方案中的工作表可以包含 Windows 窗体控件和宿主控件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-242">A worksheet in an Office solution can contain Windows Forms controls and host controls.</span></span> <span data-ttu-id="fdc2b-243">有关详细信息，请参阅[Office 文档上的控件](/visualstudio/vsto/controls-on-office-documents)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-243">For more information, see [Controls on Office Documents](/visualstudio/vsto/controls-on-office-documents).</span></span>  
  
 <span data-ttu-id="fdc2b-244">若要在运行时管理的工作表上的控件，使用的方法和属性<xref:Microsoft.Office.Tools.Excel.ControlCollection>返回对象<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Controls%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-244">To manage the controls on a worksheet at run time, use the methods and properties of the <xref:Microsoft.Office.Tools.Excel.ControlCollection> object returned by the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Controls%2A> property.</span></span> <span data-ttu-id="fdc2b-245">有关详细信息，请参阅[在运行时向 Office 文档添加控件](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)</span><span class="sxs-lookup"><span data-stu-id="fdc2b-245">For more information, see [Adding Controls to Office Documents at Run Time](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-246">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Controls%2A>属性来添加<xref:System.Windows.Forms.Button>到当前工作表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-246">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Controls%2A> property to add a <xref:System.Windows.Forms.Button> to the current worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-247">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-247">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#10](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#10)]
 [!code-vb[Trin_ExcelWorkSheet#10](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object before, object after);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy(object before, object after) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Copy(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="before" Type="System.Object" />
        <Parameter Name="after" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="before">
          <span data-ttu-id="fdc2b-248">将在其之前放置复制表的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-248">The sheet before which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="fdc2b-249">如果指定 <c>After</c>，则不能指定 <c>Before</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-249">You cannot specify <c>Before</c> if you specify <c>After</c>.</span>
          </span>
        </param>
        <param name="after">
          <span data-ttu-id="fdc2b-250">将在其之后放置复制表的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-250">The sheet after which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="fdc2b-251">如果指定 <c>Before</c>，则不能指定 <c>After</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-251">You cannot specify <c>After</c> if you specify <c>Before</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-252">将工作表复制到工作簿中的另一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-252">Copies the worksheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-253">新工作表是<xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName>对象并不具有工作表宿主项具有的代码或数据绑定功能。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-253">The new worksheet is a <xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName> object and does not have the code or data binding capability that worksheet host items have.</span></span>  
  
 <span data-ttu-id="fdc2b-254">如果未指定`Before`或`After`，Microsoft Office Excel 将创建包含复制表的表的新工作簿。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-254">If you do not specify either `Before` or `After`, Microsoft Office Excel creates a new workbook that contains the copied sheet.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-255">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-255">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-256">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-256">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-257">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Copy%2A>方法来创建副本的当前工作表之前`Sheet1`及`Sheet3`。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-257">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Copy%2A> method to create copies of the current worksheet before `Sheet1` and after `Sheet3`.</span></span> <span data-ttu-id="fdc2b-258">该示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.InnerObject%2A>属性来访问基础<xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName>有关`Sheet1`和`Sheet3`。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-258">The example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.InnerObject%2A> property to access the underlying <xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName> for `Sheet1` and `Sheet3`.</span></span>  
  
 <span data-ttu-id="fdc2b-259">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-259">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#102](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#102)]
 [!code-vb[Trin_ExcelWorkSheet#102](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-260">获取一个值，该值指示在其中创建工作表的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-260">Gets a value that indicates the application in which the worksheet was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-261">如果工作表是在 Excel 中创建的，则此属性返回字符串“XCEL”，该字符串与十六进制数 5843454C 等效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-261">If the worksheet was created in Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-262">此属性用于在 Microsoft Office Excel 中用于的 Macintosh 上，其中每个应用程序具有四个字符创建者代码。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-262">This property is designed to be used in Microsoft Office Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="fdc2b-263">例如，Excel 具有 XCEL 的创建者代码。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-263">For example, Excel has the creator code XCEL.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-264">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Creator%2A>属性来显示是否在 Microsoft Office Excel 中创建的当前工作表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-264">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Creator%2A> property to display whether the current worksheet was created in Microsoft Office Excel.</span></span>  
  
 <span data-ttu-id="fdc2b-265">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-265">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#11](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#11)]
 [!code-vb[Trin_ExcelWorkSheet#11](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomProperties CustomProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomProperties CustomProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.CustomProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-266">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> 对象，该对象表示与工作表关联的标识符信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-266">Gets a <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> object representing the identifier information associated with a worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-267">一个 <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> 对象，表示与工作表关联的标识符信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-267">A <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> object representing the identifier information associated with a worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-268">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.CustomProperties%2A>添加自定义属性的属性名为"Microsoft"值为"MSFT"到当前工作表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-268">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.CustomProperties%2A> property to add a custom property named "Microsoft" with the value "MSFT" to the current worksheet.</span></span> <span data-ttu-id="fdc2b-269">直到找到"Microsoft"属性，并将此属性的值设置为单元格 A1，该示例然后循环访问的自定义属性的集合。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-269">The example then iterates through the collection of custom properties until it finds the "Microsoft" property, and sets the value of this property to the cell A1.</span></span>  
  
 <span data-ttu-id="fdc2b-270">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-270">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#12](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#12)]
 [!code-vb[Trin_ExcelWorkSheet#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ControlBindingsCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ControlBindingsCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlBindingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataHost">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.ICachedDataProvider DataHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.ICachedDataProvider DataHost" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.DataHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.ICachedDataProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_DeactivateEventHandler Deactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_DeactivateEventHandler Deactivate" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.Deactivate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_DeactivateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-271">当工作表失去焦点时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-271">Occurs when the worksheet loses focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-272">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Deactivate>停用后显示的工作表名称的事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-272">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Deactivate> event that displays the name of the worksheet when it is deactivated.</span></span>  
  
 <span data-ttu-id="fdc2b-273">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-273">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#205](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#205)]
 [!code-vb[Trin_ExcelWorkSheet#205](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#205)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Delete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-274">删除基础 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象，但不删除主机项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-274">Deletes the underlying <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object, but does not delete the host item.</span>
          </span>
          <span data-ttu-id="fdc2b-275">强烈建议不要使用此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-275">It is highly recommended that this method not be used.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAutomaticPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayAutomaticPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAutomaticPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.DisplayAutomaticPageBreaks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.DisplayPageBreaks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-276">获取或设置一个值，该值指示分页符（自动和手动）是否显示在工作表上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-276">Gets or sets a value that indicates whether page breaks (both automatic and manual) on the worksheet are displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-277">如果分页符（自动和手动）显示在表上，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-277">
              <see langword="true" /> if page breaks (both automatic and manual) on the worksheet are displayed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-278">如果没有安装打印机，不能设置此属性。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-278">You cannot set this property if you do not have a printer installed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.DisplayRightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-279">获取或设置一个值，该值指示是否是从右向左，而不是从左向右显示工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-279">Gets or sets a value that indicates whether the worksheet is displayed from right to left instead of from left to right.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-280">如果工作表是从右向左，而不是从左向右显示，则为 <see langword="true" />；如果该对象是从左向右显示，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-280">
              <see langword="true" /> if the worksheet is displayed from right to left instead of from left to right; <see langword="false" /> if the object is displayed from left to right.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-281">释放 <see cref="T:Microsoft.Office.Tools.Excel.WorksheetBase" /> 类的当前实例所使用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-281">Releases all resources used by the current instance of the <see cref="T:Microsoft.Office.Tools.Excel.WorksheetBase" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-282">不要调用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Dispose%2A>方法自己。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-282">Do not call the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Dispose%2A> method yourself.</span></span> <span data-ttu-id="fdc2b-283">关闭文档级自定义项中的文档时，[!INCLUDE[vsto_runtime](~/includes/vsto-runtime-md.md)]清理使用自定义项的所有资源。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-283">When the document in a document-level customization is closed, the [!INCLUDE[vsto_runtime](~/includes/vsto-runtime-md.md)] cleans up all resources used by the customization.</span></span>  
  
 <span data-ttu-id="fdc2b-284">有关详细信息<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Dispose%2A>方法，请参阅[清理了非托管资源](http://msdn.microsoft.com/library/a17b0066-71c2-4ba4-9822-8e19332fc213)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-284">For more information about the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Dispose%2A> method, see [Cleaning Up Unmanaged Resources](http://msdn.microsoft.com/library/a17b0066-71c2-4ba4-9822-8e19332fc213).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.Disposed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DrawingObjects(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.DrawingObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Drawings(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Drawings(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DropDowns(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.DropDowns(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoFilter">
      <MemberSignature Language="C#" Value="public bool EnableAutoFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.EnableAutoFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-285">获取或设置一个值，该值指示当打开仅限用户界面保护时是否启用“自动筛选”箭头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-285">Gets or sets a value that indicates whether AutoFilter arrows are enabled when user-interface-only protection is turned on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-286">如果在打开仅限用户界面保护时启用“自动筛选”箭头，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-286">
              <see langword="true" /> if AutoFilter arrows are enabled when user-interface-only protection is turned on; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-287">此属性适用于每个工作表，并且不与工作表或会话一起保存。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-287">This property applies to each worksheet and is not saved with the worksheet or session.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCalculation">
      <MemberSignature Language="C#" Value="public bool EnableCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.EnableCalculation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-288">获取或设置一个值，该值指示 Microsoft Office Excel 是否在必要时自动重新计算工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-288">Gets or set a value that indicates whether Microsoft Office Excel automatically recalculates the worksheet when necessary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-289">如果 Excel 在必要时自动重新计算工作表，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-289">
              <see langword="true" /> if Excel automatically recalculates the worksheet when necessary; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-290">当此属性的值是`false`，不能请求重新计算。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-290">When the value of this property is `false`, you cannot request a recalculation.</span></span> <span data-ttu-id="fdc2b-291">当将值从`false`到`true`，Excel 重新计算工作表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-291">When you change the value from `false` to `true`, Excel recalculates the worksheet.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFormatConditionsCalculation">
      <MemberSignature Language="C#" Value="public bool EnableFormatConditionsCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFormatConditionsCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.EnableFormatConditionsCalculation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-292">获取或设置一个值，该值确定条件格式是否将自动发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-292">Gets or sets a value that determines whether conditional formats will occur automatically.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-293">如果条件格式的计算将自动发生，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-293">
              <see langword="true" /> if evaluation of conditional formats will occur automatically; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fdc2b-294">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-294">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-295">当<xref:Microsoft.Office.Tools.Excel.WorksheetBase.EnableFormatConditionsCalculation%2A>属性设置为`false`，现有的条件格式不会重新计算。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-295">When the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.EnableFormatConditionsCalculation%2A> property is set to `false`, existing conditional formats will not be re-evaluated.</span></span> <span data-ttu-id="fdc2b-296">任何以前应用的条件格式设置仍将可见，但将不会更新为单元格的值或更改 AppliesTo 范围。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-296">Any previously applied conditional formatting will still be visible, but will not be updated as cell values or AppliesTo ranges are changed.</span></span>  
  
 <span data-ttu-id="fdc2b-297">将此属性设置为`true`以对其进行评估之前完全配置一个规则。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-297">Set this property to `true` to configure a rule completely before evaluating it.</span></span> <span data-ttu-id="fdc2b-298">如果对其应用条件的范围很大，这可能导致性能提升。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-298">This can result in a performance increase if the range over which the condition is applied is large.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableOutlining">
      <MemberSignature Language="C#" Value="public bool EnableOutlining { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableOutlining" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.EnableOutlining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-299">获取或设置一个值，该值指示当打开仅限用户界面保护时是否启用大纲显示符号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-299">Gets or sets a value that indicates whether outlining symbols are enabled when user-interface-only protection is turned on.</span>
          </span> [!INCLUDE[vsto_smart_tags](~/includes/vsto-smart-tags-md.md)]<span data-ttu-id="fdc2b-300">。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-300">.</span></span> [!INCLUDE[vsto_smart_tags](~/includes/vsto-smart-tags-md.md)]<span data-ttu-id="fdc2b-301">。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-301">.</span></span></summary>
        <value>
          <span data-ttu-id="fdc2b-302">如果在打开仅限用户界面保护时启用大纲显示符号，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-302">
              <see langword="true" /> if outlining symbols are enabled when user-interface-only protection is turned on; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-303">此属性适用于每个工作表，并且不与工作表或会话一起保存。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-303">This property applies to each worksheet and is not saved with the worksheet or session.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePivotTable">
      <MemberSignature Language="C#" Value="public bool EnablePivotTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.EnablePivotTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-304">获取或设置一个值，该值指示当打开仅限用户界面保护时是否启用数据透视表控件及操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-304">Gets or sets a value that indicates whether PivotTable controls and actions are enabled when user-interface-only protection is turned on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-305">如果在打开仅限用户界面保护时启用数据透视表控件及操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-305">
              <see langword="true" /> if PivotTable controls and actions are enabled when user-interface-only protection is turned on; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-306">此属性适用于每个工作表，并且不与工作表或会话一起保存。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-306">This property applies to each worksheet and is not saved with the worksheet or session.</span></span>  
  
 <span data-ttu-id="fdc2b-307">必须有足够数量的未锁定单元格下面以及 Microsoft Office Excel 重新计算和显示数据透视表报告的透视表的右侧。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-307">There must be a sufficient number of unlocked cells below and to the right of the PivotTable report for Microsoft Office Excel to recalculate and display the PivotTable report.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSelection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.EnableSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-308">获取或设置一个值，该值指示在工作表上可以选择哪些单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-308">Gets or sets a value indicating which cells can be selected on the sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-309">
            <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-309">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-310">此属性仅当在工作表保护时，才会生效：<xref:Microsoft.Office.Interop.Excel.XlEnableSelection.xlNoSelection>会阻止任何在表中，选择<xref:Microsoft.Office.Interop.Excel.XlEnableSelection.xlUnlockedCells>允许未锁定要选择这些单元格和<xref:Microsoft.Office.Interop.Excel.XlEnableSelection.xlNoRestrictions>允许要选择任何单元格。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-310">This property takes effect only when the worksheet is protected: <xref:Microsoft.Office.Interop.Excel.XlEnableSelection.xlNoSelection> prevents any selection on the sheet, <xref:Microsoft.Office.Interop.Excel.XlEnableSelection.xlUnlockedCells> allows only those cells that are not locked to be selected, and <xref:Microsoft.Office.Interop.Excel.XlEnableSelection.xlNoRestrictions> allows any cell to be selected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-311">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A>方法来保护工作表，然后使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.EnableSelection%2A>属性以防止在工作表上的任何单元格被选中。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-311">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A> method to protect the worksheet, and then uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.EnableSelection%2A> property to prevent any cell on the worksheet from being selected.</span></span>  
  
 <span data-ttu-id="fdc2b-312">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-312">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#13](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#13)]
 [!code-vb[Trin_ExcelWorkSheet#13](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public virtual void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Evaluate(object name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Evaluate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fdc2b-313">对象的名称（使用 Excel 的命名约定）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-313">The name of the object, using the naming convention of Excel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-314">将 Microsoft Office Excel 名称转换为对象或值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-314">Converts a Microsoft Office Excel name to an object or a value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-315">可以使用此方法使用的名称在 Excel 中的以下类型：</span><span class="sxs-lookup"><span data-stu-id="fdc2b-315">The following types of names in Excel can be used with this method:</span></span>  
  
-   <span data-ttu-id="fdc2b-316">定义的名称。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-316">Defined names.</span></span> <span data-ttu-id="fdc2b-317">您可以指定任何名称。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-317">You can specify any name.</span></span>  
  
-   <span data-ttu-id="fdc2b-318">外部引用。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-318">External references.</span></span> <span data-ttu-id="fdc2b-319">可以使用 ！</span><span class="sxs-lookup"><span data-stu-id="fdc2b-319">You can use the !</span></span> <span data-ttu-id="fdc2b-320">若要引用另一个工作簿中定义的工作表的运算符。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-320">operator to refer to a worksheet defined in another workbook.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-321">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Evaluate%2A>方法计算单元格 A1 的值作为输入到 Excel`SIN`函数。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-321">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Evaluate%2A> method to evaluate the value of cell A1 as an input into the Excel `SIN` function.</span></span>  
  
 <span data-ttu-id="fdc2b-322">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-322">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#103](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#103)]
 [!code-vb[Trin_ExcelWorkSheet#103](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType type, object filename, object quality, object includeDocProperties, object ignorePrintAreas, object from, object to, object openAfterPublish, object fixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportAsFixedFormat(valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType type, object filename, object quality, object includeDocProperties, object ignorePrintAreas, object from, object to, object openAfterPublish, object fixedFormatExtClassPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="filename" Type="System.Object" />
        <Parameter Name="quality" Type="System.Object" />
        <Parameter Name="includeDocProperties" Type="System.Object" />
        <Parameter Name="ignorePrintAreas" Type="System.Object" />
        <Parameter Name="from" Type="System.Object" />
        <Parameter Name="to" Type="System.Object" />
        <Parameter Name="openAfterPublish" Type="System.Object" />
        <Parameter Name="fixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fdc2b-323">其中一个 <see langword="Microsoft.Office.Interop.Excel.XlFixedFormatType" /> 值，该值指定是否要将工作簿保存为 PDF 或 XPS 格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-323">One of the <see langword="Microsoft.Office.Interop.Excel.XlFixedFormatType" /> values that specifies whether to save the workbook in PDF or XPS format.</span>
          </span>
        </param>
        <param name="filename">
          <span data-ttu-id="fdc2b-324">新 PDF 或 XPS 文件的完整路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-324">The full path of the new PDF or XPS file.</span>
          </span>
          <span data-ttu-id="fdc2b-325">如果省略此参数，Excel 会将文件保存在当前文件夹中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-325">If you omit this parameter, Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="quality">
          <span data-ttu-id="fdc2b-326">其中一个 <see langword="Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> 值，该值指定导出文件的质量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-326">One of the <see langword="Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> values that specifies the quality of the exported file.</span>
          </span>
        </param>
        <param name="includeDocProperties">
          <span data-ttu-id="fdc2b-327">如果要在导出的文件中包含文档属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-327">
              <see langword="true" /> to include document properties in the exported file; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="ignorePrintAreas">
          <span data-ttu-id="fdc2b-328">若要在导出时忽略任何打印区域设置，请使用 <see langword="true" />；否则使用 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-328">
              <see langword="true" /> to ignore any print areas set when exporting; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="from">
          <span data-ttu-id="fdc2b-329">要从其处开始导出的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-329">The number of the page at which to start exporting.</span>
          </span>
          <span data-ttu-id="fdc2b-330">若忽略此参数，则从第一页开始导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-330">If this argument is omitted, exporting starts at the first page.</span>
          </span>
        </param>
        <param name="to">
          <span data-ttu-id="fdc2b-331">要导出的最后一页的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-331">The number of the last page to export.</span>
          </span>
          <span data-ttu-id="fdc2b-332">若忽略此参数，则导出至最后一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-332">If this argument is omitted, exporting ends with the last page.</span>
          </span>
        </param>
        <param name="openAfterPublish">
          <span data-ttu-id="fdc2b-333">如果立即在查看器中显示文件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-333">
              <see langword="true" /> to display the file in the viewer immediately; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="fixedFormatExtClassPtr">
          <span data-ttu-id="fdc2b-334">一个指向 <see langword="IMsoDocExporter" /> 接口的实现的指针，可使工作簿保存为另一种固定格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-334">A pointer to an implementation of the <see langword="IMsoDocExporter" /> interface that enables the workbook to be saved in a different fixed format.</span>
          </span>
          <span data-ttu-id="fdc2b-335">有关详细信息，请参阅“扩展 Office (2007) 固定格式导出功能”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-335">For more information, see Extending the Office (2007) Fixed-Format Export Feature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-336">导出到指定格式的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-336">Exports to a file of the specified format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-337">此方法还支持外接程序以固定格式文件导出的文件初始化。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-337">This method also supports initializing an add-in to export a file to a fixed-format file.</span></span> <span data-ttu-id="fdc2b-338">例如，如果存在转换器，则 Excel 将执行文件格式转换。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-338">For example, Excel will perform file format conversion if the converters are present.</span></span> <span data-ttu-id="fdc2b-339">通常由用户启动转换。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-339">The conversion is usually initiated by the user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-340">下面的代码示例将工作表的内容保存`Sheet1`以 PDF 格式，最多前四个页 （忽略打印区域）。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-340">The following code example saves the content of the worksheet `Sheet1` in PDF format, up to the first four pages (ignoring print areas).</span></span> <span data-ttu-id="fdc2b-341">PDF 文件将保存到指定的文件路径和文件名使用标准质量解析。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-341">The PDF file is saved to the specified file path and file name using the standard quality resolution.</span></span> <span data-ttu-id="fdc2b-342">该文件包括工作簿属性。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-342">The file includes the workbook properties.</span></span> <span data-ttu-id="fdc2b-343">若要运行此代码示例，您的工作簿必须包含名为 Sheet1，一些数据的表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-343">To run this code example, your workbook must include a sheet named Sheet1 with some data.</span></span>  
  
 <span data-ttu-id="fdc2b-344">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-344">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkbook_Additional#9](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#9)]
 [!code-vb[Trin_ExcelWorkbook_Additional#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterMode">
      <MemberSignature Language="C#" Value="public bool FilterMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.FilterMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-345">获取一个值，该值指示工作表是否正在主动筛选数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-345">Gets a value that indicates whether the worksheet is actively filtering data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-346">如果工作表正在主动筛选数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-346">
              <see langword="true" /> if the worksheet is actively filtering data; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-347">若要确定是否筛选当前已启用 （即，是否在工作表上显示筛选器下拉箭头），请使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilterMode%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-347">To determine whether filtering is currently enabled (that is, whether the filter drop-down arrows are displayed on the worksheet), use the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilterMode%2A> property.</span></span>  
  
 <span data-ttu-id="fdc2b-348">若要启用筛选并创建已筛选的列表，请使用<xref:Microsoft.Office.Interop.Excel.Range.AutoFilter%2A>方法<xref:Microsoft.Office.Interop.Excel.Range>对象，或使用<xref:Microsoft.Office.Tools.Excel.NamedRange.AutoFilter%2A>方法的<xref:Microsoft.Office.Tools.Excel.NamedRange>对象。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-348">To enable filtering and create a filtered list, use the <xref:Microsoft.Office.Interop.Excel.Range.AutoFilter%2A> method of a <xref:Microsoft.Office.Interop.Excel.Range> object, or use the <xref:Microsoft.Office.Tools.Excel.NamedRange.AutoFilter%2A> method of a <xref:Microsoft.Office.Tools.Excel.NamedRange> object.</span></span>  
  
 <span data-ttu-id="fdc2b-349">此属性是`true`如果工作表包含在隐藏的行的筛选后的列表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-349">This property is `true` if the worksheet contains a filtered list in which there are hidden rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-350">下面的代码示例创建的筛选的列表中的水果<xref:Microsoft.Office.Interop.Excel.Range>，然后使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilter%2A>属性来显示列表的筛选条件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-350">The following code example creates a filtered list of fruits in a <xref:Microsoft.Office.Interop.Excel.Range>, and then uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilter%2A> property to display the filter criteria for the list.</span></span> <span data-ttu-id="fdc2b-351">该示例然后会提示用户关闭筛选器，通过使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilterMode%2A>属性，并最后使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.FilterMode%2A>属性来显示工作表是否可以筛选的列表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-351">The example then prompts the user to turn off the filter by using the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.AutoFilterMode%2A> property, and finally uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.FilterMode%2A> property to display whether the worksheet has a filtered list.</span></span>  
  
 <span data-ttu-id="fdc2b-352">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-352">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#2)]
 [!code-vb[Trin_ExcelWorkSheet#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishInitialization">
      <MemberSignature Language="C#" Value="protected virtual void FinishInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FinishInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.FinishInitialization" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FollowHyperlink">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_FollowHyperlinkEventHandler FollowHyperlink;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_FollowHyperlinkEventHandler FollowHyperlink" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.FollowHyperlink" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_FollowHyperlinkEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-353">在单击工作表上的任意超链接时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-353">Occurs when you click any hyperlink on a worksheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-354">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.WorksheetBase.FollowHyperlink>已单击当前工作簿中保留的所有超链接列表的事件以及包含这些超链接，在工作表的名称<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-354">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.FollowHyperlink> event that keeps a list of all the hyperlinks in the current workbook that have been clicked, plus the names of the worksheets that contain these hyperlinks, in a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 <span data-ttu-id="fdc2b-355">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-355">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#206](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#206)]
 [!code-vb[Trin_ExcelWorkSheet#206](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#206)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationObject">
      <MemberSignature Language="C#" Value="protected virtual object GetAutomationObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetAutomationObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.GetAutomationObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-356">由 [!INCLUDE[vsto_runtime](~/includes/vsto-runtime-md.md)] 调用，用于获取可由工作表中的 VBA 代码使用的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-356">Called by the [!INCLUDE[vsto_runtime](~/includes/vsto-runtime-md.md)] to get an object that can be used by VBA code in the worksheet.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdc2b-357">文档级自定义项中的一个对象，可由工作表中的 VBA 代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-357">An object in a document-level customization that can be used by VBA code in the worksheet.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-358">重写此方法以返回到工作表中的 VBA 代码的已公开的类的实例。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-358">Override this method to return an instance of a class that you have exposed to VBA code in the worksheet.</span></span> <span data-ttu-id="fdc2b-359">有关详细信息，请参阅[结合 VBA 和文档级自定义项](/visualstudio/vsto/combining-vba-and-document-level-customizations)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-359">For more information, see [Combining VBA and Document-Level Customizations](/visualstudio/vsto/combining-vba-and-document-level-customizations).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GroupBoxes(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.GroupBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GroupObjects(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.GroupObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public IServiceProvider HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider HostContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.HostContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.HPageBreaks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-360">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> 集合，该集合表示表上的水平分页符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-360">Gets an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-361">一个 <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> 集合，表示表上的水平分页符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-361">An <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-362">没有每张纸打印的 1026年水平分页符的限制。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-362">There is a limit of 1026 horizontal page breaks per sheet.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-363">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.HPageBreaks%2A>属性在单元格 C5 处添加一个水平分页符。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-363">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.HPageBreaks%2A> property to add a horizontal page break at cell C5.</span></span>  
  
 <span data-ttu-id="fdc2b-364">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-364">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#14](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#14)]
 [!code-vb[Trin_ExcelWorkSheet#14](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Hyperlinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-365">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> 集合，该集合表示范围或工作表的超链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-365">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-366">
            <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> 集合，表示范围或工作表的超链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-366">A <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-367">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Hyperlinks%2A>属性添加到超链接<xref:Microsoft.Office.Interop.Excel.Hyperlinks?displayProperty=fullName>工作表的集合。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-367">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Hyperlinks%2A> property to add a hyperlink to the <xref:Microsoft.Office.Interop.Excel.Hyperlinks?displayProperty=fullName> collection of the worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-368">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-368">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#15](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#15)]
 [!code-vb[Trin_ExcelWorkSheet#15](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-369">获取工作表集合中工作表的索引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-369">Gets the index number of the worksheet within the collection of worksheets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-370">工作表集合中工作表的索引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-370">The index number of the worksheet within the collection of worksheets.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-371">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Index%2A>属性来显示当前工作表的索引号之前和之后的最后一个移动工作表来定位工作簿中使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Move%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-371">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Index%2A> property to display the index number of the current worksheet before and after moving the worksheet to the last position in the workbook by using the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Move%2A> method.</span></span>  
  
 <span data-ttu-id="fdc2b-372">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-372">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#16](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#16)]
 [!code-vb[Trin_ExcelWorkSheet#16](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Initialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeDataBindings">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.InitializeDataBindings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Worksheet InnerObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Worksheet InnerObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.InnerObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Worksheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-373">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.WorksheetBase" /> 的基础本机对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-373">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.WorksheetBase" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-374">一个 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.WorksheetBase" /> 的基础本机对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-374">A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.WorksheetBase" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemProvider">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.IHostItemProvider ItemProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.IHostItemProvider ItemProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.ItemProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.IHostItemProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Labels(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Labels(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Lines(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Lines(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ListBoxes(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.ListBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObjects ListObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObjects ListObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.ListObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-375">获取工作表中 <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-375">Gets a collection of <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects in the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-376">工作表的 <see cref="T:Microsoft.Office.Interop.Excel.ListObjects" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-376">The <see cref="T:Microsoft.Office.Interop.Excel.ListObjects" /> collection for the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-377">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ListObjects%2A>属性来添加<xref:Microsoft.Office.Interop.Excel.ListObject?displayProperty=fullName>到当前工作表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-377">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ListObjects%2A> property to add a <xref:Microsoft.Office.Interop.Excel.ListObject?displayProperty=fullName> to the current worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-378">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-378">This example is for a document-level customization.</span></span>  
  
 <span data-ttu-id="fdc2b-379">Trin_ExcelWorkSheet#17</span><span class="sxs-lookup"><span data-stu-id="fdc2b-379">Trin_ExcelWorkSheet#17</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.MailEnvelope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-380">获取工作表的电子邮件头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-380">Gets an e-mail header for the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-381">工作表的电子邮件头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-381">An e-mail header for the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-382">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.MailEnvelope%2A>要分配属性<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Name%2A>的工作表的电子邮件头引入工作表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-382">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.MailEnvelope%2A> property to assign the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Name%2A> of the worksheet to the introduction of an e-mail header for the worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-383">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-383">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#18](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#18)]
 [!code-vb[Trin_ExcelWorkSheet#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.BeginInit">
      <MemberSignature Language="C#" Value="void EntryPoint.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Microsoft#Office#Tools#EntryPoint#BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.EndInit">
      <MemberSignature Language="C#" Value="void EntryPoint.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Microsoft#Office#Tools#EntryPoint#EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.FinishInitialization">
      <MemberSignature Language="C#" Value="void EntryPoint.FinishInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.FinishInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Microsoft#Office#Tools#EntryPoint#FinishInitialization" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.Initialize">
      <MemberSignature Language="C#" Value="void EntryPoint.Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Microsoft#Office#Tools#EntryPoint#Initialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.InitializeDataBindings">
      <MemberSignature Language="C#" Value="void EntryPoint.InitializeDataBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.InitializeDataBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Microsoft#Office#Tools#EntryPoint#InitializeDataBindings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.OnShutdown">
      <MemberSignature Language="C#" Value="void EntryPoint.OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Microsoft#Office#Tools#EntryPoint#OnShutdown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.OnStartup">
      <MemberSignature Language="C#" Value="void EntryPoint.OnStartup ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.OnStartup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Microsoft#Office#Tools#EntryPoint#OnStartup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.Excel.IWorksheetExtension.GetAutomationObject">
      <MemberSignature Language="C#" Value="object IWorksheetExtension.GetAutomationObject ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Microsoft.Office.Tools.Excel.IWorksheetExtension.GetAutomationObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Microsoft#Office#Tools#Excel#IWorksheetExtension#GetAutomationObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.IExtension.ExtensionBase">
      <MemberSignature Language="C#" Value="object Microsoft.Office.Tools.IExtension.ExtensionBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Microsoft.Office.Tools.IExtension.ExtensionBase" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Microsoft#Office#Tools#IExtension#ExtensionBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object before, object after);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Move(object before, object after) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Move(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="before" Type="System.Object" />
        <Parameter Name="after" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="before">
          <span data-ttu-id="fdc2b-384">移动工作表的放置位置之后的工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-384">The sheet before which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="fdc2b-385">如果指定 <c>After</c>，则不能指定 <c>Before</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-385">You cannot specify <c>Before</c> if you specify <c>After</c>.</span>
          </span>
        </param>
        <param name="after">
          <span data-ttu-id="fdc2b-386">移动工作表的放置位置之前的工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-386">The sheet after which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="fdc2b-387">如果指定 <c>Before</c>，则不能指定 <c>After</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-387">You cannot specify <c>After</c> if you specify <c>Before</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-388">将工作表移动到工作簿中的另一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-388">Moves the worksheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-389">如果未指定`Before`或`After`，Microsoft Office Excel 将创建包含移动的工作表的新工作簿。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-389">If you do not specify either `Before` or `After`, Microsoft Office Excel creates a new workbook that contains the moved sheet.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-390">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-390">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-391">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-391">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-392">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Index%2A>属性来显示当前工作表的索引号之前和之后的最后一个移动工作表来定位工作簿中使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Move%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-392">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Index%2A> property to display the index number of the current worksheet before and after moving the worksheet to the last position in the workbook by using the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Move%2A> method.</span></span>  
  
 <span data-ttu-id="fdc2b-393">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-393">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#16](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#16)]
 [!code-vb[Trin_ExcelWorkSheet#16](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-394">获取或设置工作表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-394">Gets or sets the name of the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-395">工作表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-395">The name of the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-396">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.MailEnvelope%2A>要分配属性<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Name%2A>的工作表的电子邮件头引入工作表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-396">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.MailEnvelope%2A> property to assign the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Name%2A> of the worksheet to the introduction of an e-mail header for the worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-397">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-397">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#18](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#18)]
 [!code-vb[Trin_ExcelWorkSheet#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Names" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-398">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Names" /> 集合，该集合表示所有工作表特定的名称（以“WorksheetName!”</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-398">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!"</span>
          </span>
          <span data-ttu-id="fdc2b-399">前缀定义名称）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-399">prefix).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-400">一个<see cref="T:Microsoft.Office.Interop.Excel.Names" />集合，表示所有特定于工作表的名称 （名称以"WorksheetName ！"与已定义</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-400">A <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!"</span>
          </span>
          <span data-ttu-id="fdc2b-401">前缀定义名称）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-401">prefix).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-402">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Names%2A>属性添加到工作表的名称。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-402">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Names%2A> property to add a name to the worksheet.</span></span> <span data-ttu-id="fdc2b-403">该示例然后显示**定义名称**对话框来验证是否已添加该名称。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-403">The example then displays the **Define Name** dialog to verify that the name was added.</span></span>  
  
 <span data-ttu-id="fdc2b-404">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-404">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#19](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#19)]
 [!code-vb[Trin_ExcelWorkSheet#19](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Next" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-405">获取表示下一个表的 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-405">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the next sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-406">表示下一个表的 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />；如果当前工作表是工作簿中的最后一个表，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-406">A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the next sheet; <see langword="null" /> if the current worksheet is the last sheet in the workbook.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-407">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Next%2A>属性来确定是否当前<xref:Microsoft.Office.Tools.Excel.WorksheetBase>是工作簿中的最后一个表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-407">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Next%2A> property to determine whether the current <xref:Microsoft.Office.Tools.Excel.WorksheetBase> is the last sheet in the workbook.</span></span> <span data-ttu-id="fdc2b-408">如果当前<xref:Microsoft.Office.Tools.Excel.WorksheetBase>不是最后一个表，则显示下一步工作表的名称。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-408">If the current <xref:Microsoft.Office.Tools.Excel.WorksheetBase> is not the last sheet, then the name of the next sheet is displayed.</span></span>  
  
 <span data-ttu-id="fdc2b-409">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-409">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#20](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#20)]
 [!code-vb[Trin_ExcelWorkSheet#20](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object OLEObjects(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.OLEObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="fdc2b-410">OLE 对象的名称或编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-410">The name or number of the OLE object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-411">获取一个对象，该对象表示工作表上的单个 OLE 对象（一个 <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />）或所有 OLE 对象的集合（一个 <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> 集合）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-411">Gets an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the worksheet.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdc2b-412">一个对象，表示工作表上的单个 OLE 对象（一个 <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />）或所有 OLE 对象的集合（一个 <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> 集合）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-412">An object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the worksheet.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-413">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-413">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-414">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-414">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-415">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.OLEObjects%2A>方法来显示 OLE 数当前工作表中的对象。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-415">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.OLEObjects%2A> method to display the number of OLE objects in the current worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-416">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-416">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#104](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#104)]
 [!code-vb[Trin_ExcelWorkSheet#104](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.OnCalculate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.OnData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.OnDoubleClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.OnEntry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.OnSheetActivate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.OnSheetDeactivate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShutdown">
      <MemberSignature Language="C#" Value="protected virtual void OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.OnShutdown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStartup">
      <MemberSignature Language="C#" Value="protected virtual void OnStartup ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStartup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.OnStartup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object OptionButtons(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.OptionButtons(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Outline Outline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Outline Outline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Outline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Outline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-417">获取一个表示工作表大纲的 <see cref="T:Microsoft.Office.Interop.Excel.Outline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-417">Gets an <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> that represents the outline for the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-418">一个表示工作表大纲的 <see cref="T:Microsoft.Office.Interop.Excel.Outline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-418">An <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> that represents the outline for the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-419">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Outline%2A>属性以使当前工作表大纲使用自动设置样式。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-419">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Outline%2A> property to make the outline for the current worksheet use automatic styles.</span></span>  
  
 <span data-ttu-id="fdc2b-420">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-420">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#21](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#21)]
 [!code-vb[Trin_ExcelWorkSheet#21](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Ovals(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Ovals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.PageSetup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-421">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" />，其中包含工作表的页面设置的所有设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-421">Gets a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> that contains all the page setup settings for the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-422">一个 <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" />，其中包含工作表的页面设置的所有设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-422">A <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> that contains all the page setup settings for the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-423">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.PageSetup%2A>属性来设置下边框和标头边距、 第一页号，和中心标头和工作表的页脚。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-423">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.PageSetup%2A> property to set the bottom and header margins, the first page number, and the center headers and footers of the worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-424">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-424">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#22](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#22)]
 [!code-vb[Trin_ExcelWorkSheet#22](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-425">获取工作表的父对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-425">Gets the parent object for the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-426">工作表的父对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-426">The parent object for the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-427">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Parent%2A>属性来确定是否当前<xref:Microsoft.Office.Tools.Excel.WorksheetBase>具有一个父级。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-427">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Parent%2A> property to determine whether the current <xref:Microsoft.Office.Tools.Excel.WorksheetBase> has a parent.</span></span> <span data-ttu-id="fdc2b-428">如果当前<xref:Microsoft.Office.Tools.Excel.WorksheetBase>具有父级，则会显示父工作簿的名称。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-428">If the current <xref:Microsoft.Office.Tools.Excel.WorksheetBase> has a parent, then name of the parent workbook is displayed.</span></span>  
  
 <span data-ttu-id="fdc2b-429">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-429">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#23](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#23)]
 [!code-vb[Trin_ExcelWorkSheet#23](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object destination, object link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(object destination, object link) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Paste(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Object" />
        <Parameter Name="link" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="fdc2b-430">一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，指定应粘贴剪贴板内容的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-430">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where the Clipboard contents should be pasted.</span>
          </span>
          <span data-ttu-id="fdc2b-431">如果省略此参数，则使用当前选择。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-431">If this argument is omitted, the current selection is used.</span>
          </span>
          <span data-ttu-id="fdc2b-432">仅当可将剪贴板的内容粘贴到范围中时，才能指定此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-432">This argument can be specified only if the contents of the Clipboard can be pasted into a range.</span>
          </span>
          <span data-ttu-id="fdc2b-433">如果指定了此参数，则无法使用 <c>Link</c> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-433">If this argument is specified, the <c>Link</c> argument cannot be used.</span>
          </span>
        </param>
        <param name="link">
          <span data-ttu-id="fdc2b-434">为 <see langword="true" /> 可建立指向粘贴数据的源的链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-434">
              <see langword="true" /> to establish a link to the source of the pasted data.</span>
          </span>
          <span data-ttu-id="fdc2b-435">如果指定了此参数，则无法使用 <c>Destination</c> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-435">If this argument is specified, the <c>Destination</c> argument cannot be used.</span>
          </span>
          <span data-ttu-id="fdc2b-436">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-436">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-437">将剪贴板的内容粘贴到工作表上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-437">Pastes the contents of the Clipboard onto the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-438">如果未指定`Destination`参数，您必须选择目标范围才能使用此方法。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-438">If you do not specify the `Destination` argument, you must select the destination range before you use this method.</span></span>  
  
 <span data-ttu-id="fdc2b-439">此方法可能会修改表的选定区域，具体取决于剪贴板的内容。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-439">This method might modify the sheet selection, depending on the contents of the Clipboard.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-440">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-440">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-441">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-441">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-442">下面的代码示例将文本到剪贴板上的"粘贴示例"，然后使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Paste%2A>方法以将剪贴板的内容粘贴到单元格 A1。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-442">The following code example places the text "Paste Example" onto the Clipboard, and then uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Paste%2A> method to paste the contents of the Clipboard into cell A1.</span></span>  
  
 <span data-ttu-id="fdc2b-443">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-443">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#105](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#105)]
 [!code-vb[Trin_ExcelWorkSheet#105](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public void PasteSpecial (object format, object link, object displayAsIcon, object iconFileName, object iconIndex, object iconLabel, object noHTMLFormatting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PasteSpecial(object format, object link, object displayAsIcon, object iconFileName, object iconIndex, object iconLabel, object noHTMLFormatting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Object" />
        <Parameter Name="link" Type="System.Object" />
        <Parameter Name="displayAsIcon" Type="System.Object" />
        <Parameter Name="iconFileName" Type="System.Object" />
        <Parameter Name="iconIndex" Type="System.Object" />
        <Parameter Name="iconLabel" Type="System.Object" />
        <Parameter Name="noHTMLFormatting" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="fdc2b-444">一个字符串，指定数据的剪贴板格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-444">A string that specifies the Clipboard format of the data.</span>
          </span>
          <span data-ttu-id="fdc2b-445">常见格式字符串包括“HTML”、“位图”、“超链接”、“Unicode 文本”和“文本”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-445">Common format strings include "HTML", "Bitmap", "Hyperlink", "Unicode Text", and "Text".</span>
          </span>
        </param>
        <param name="link">
          <span data-ttu-id="fdc2b-446">为 <see langword="true" /> 可建立指向粘贴数据的源的链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-446">
              <see langword="true" /> to establish a link to the source of the pasted data.</span>
          </span>
          <span data-ttu-id="fdc2b-447">如果源数据不适合链接或源应用程序不支持链接，则忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-447">If the source data is not suitable for linking or the source application does not support linking, this parameter is ignored.</span>
          </span>
          <span data-ttu-id="fdc2b-448">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-448">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="displayAsIcon">
          <span data-ttu-id="fdc2b-449">为 <see langword="true" /> 可以图标形式显示粘贴的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-449">
              <see langword="true" /> to display the pasted object as an icon.</span>
          </span>
          <span data-ttu-id="fdc2b-450">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-450">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="iconFileName">
          <span data-ttu-id="fdc2b-451">如果 <c>DisplayAsIcon</c> 为 <see langword="true" />，则为包含要使用的图标的文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-451">The name of the file that contains the icon to use if <c>DisplayAsIcon</c> is <see langword="true" />.</span>
          </span>
        </param>
        <param name="iconIndex">
          <span data-ttu-id="fdc2b-452">图标文件中该图标的索引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-452">The index number of the icon within the icon file.</span>
          </span>
        </param>
        <param name="iconLabel">
          <span data-ttu-id="fdc2b-453">图标的文本标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-453">The text label of the icon.</span>
          </span>
        </param>
        <param name="noHTMLFormatting">
          <span data-ttu-id="fdc2b-454">为 <see langword="true" /> 可从 HTML 移除所有格式设置、超链接和图像；为 <see langword="false" /> 可按原样粘贴 HTML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-454">
              <see langword="true" /> to remove all formatting, hyperlinks, and images from HTML; <see langword="false" /> to paste HTML as is.</span>
          </span>
          <span data-ttu-id="fdc2b-455">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-455">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-456">使用指定的格式将剪贴板的内容粘贴到工作表上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-456">Pastes the contents of the Clipboard onto the worksheet, using a specified format.</span>
          </span>
          <span data-ttu-id="fdc2b-457">使用此方法可粘贴来自其他应用程序的数据或以特定格式粘贴数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-457">Use this method to paste data from other applications or to paste data in a specific format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-458">如果不知道哪些字符串将传递给的格式参数，则可以查看通过尝试在 Excel 中的粘贴命令与剪贴板上的数据兼容的字符串。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-458">If you do not know which string to pass to the Format parameter, you can view the strings that are compatible with the data on the Clipboard by trying the paste command in Excel .</span></span> <span data-ttu-id="fdc2b-459">将数据复制到剪贴板中，使用**选择性粘贴**在 Excel 中，命令，然后查看中列出的格式**选择性粘贴**对话框。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-459">Copy the data to the Clipboard, use the **Paste Special** command in Excel, and then view the formats listed in the **Paste Special** dialog box.</span></span>  
  
 <span data-ttu-id="fdc2b-460">`NoHTMLFormatting` 将仅就时`Format`="HTML"。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-460">`NoHTMLFormatting` will only matter when `Format` = "HTML".</span></span> <span data-ttu-id="fdc2b-461">在所有其他情况下，`NoHTMLFormatting`将被忽略。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-461">In all other cases, `NoHTMLFormatting` will be ignored.</span></span>  
  
 <span data-ttu-id="fdc2b-462">使用此方法之前，必须选择目标范围。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-462">You must select the destination range before you use this method.</span></span>  
  
 <span data-ttu-id="fdc2b-463">此方法可能会修改表的选定区域，具体取决于剪贴板的内容。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-463">This method might modify the sheet selection, depending on the contents of the Clipboard.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-464">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-464">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-465">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-465">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-466">下面的代码示例将 HTML 放置到剪贴板，然后使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.PasteSpecial%2A>方法以将剪贴板的内容粘贴到单元格 A1。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-466">The following code example places HTML onto the Clipboard and then uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.PasteSpecial%2A> method to paste the contents of the Clipboard into cell A1.</span></span> <span data-ttu-id="fdc2b-467">请注意示例选择之前调用范围<xref:Microsoft.Office.Tools.Excel.WorksheetBase.PasteSpecial%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-467">Note that the example selects the range before calling the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.PasteSpecial%2A> method.</span></span>  
  
 <span data-ttu-id="fdc2b-468">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-468">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#106](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#106)]
 [!code-vb[Trin_ExcelWorkSheet#106](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Pictures(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Pictures(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableAfterValueChange">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_PivotTableAfterValueChangeEventHandler PivotTableAfterValueChange;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_PivotTableAfterValueChangeEventHandler PivotTableAfterValueChange" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableAfterValueChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_PivotTableAfterValueChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-469">在对数据透视表内的单元格或单元格范围进行编辑或重新计算（针对包含公式的单元格）后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-469">Occurs after a cell or range of cells inside a PivotTable are edited or recalculated (for cells that contain formulas).</span>
          </span>
          <span data-ttu-id="fdc2b-470">此事件只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 项目中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-470">This event can be used only in [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] projects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-471"><xref:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableAfterValueChange>事件编辑或重新计算的单元格以外的任何条件下不会出现。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-471">The <xref:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableAfterValueChange> event does not occur under any conditions other than editing or recalculating cells.</span></span> <span data-ttu-id="fdc2b-472">例如，它不会在数据透视表进行刷新、 排序、 筛选，或向下钻取，即使这些操作移动单元格，并可能从 OLAP 数据源中检索新值。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-472">For example, it will not occur when the PivotTable is refreshed, sorted, filtered, or drilled down on, even though those operations move cells and potentially retrieve new values from the OLAP data source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdc2b-473">此事件将显示在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-473">This event appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="fdc2b-474">但是，不能在 Excel 2007 项目中使用此事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-474">However, this event cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="fdc2b-475">此事件在 Excel 2007 项目中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-475">This event is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PivotTableBeforeAllocateChanges">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeAllocateChangesEventHandler PivotTableBeforeAllocateChanges;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeAllocateChangesEventHandler PivotTableBeforeAllocateChanges" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableBeforeAllocateChanges" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeAllocateChangesEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-476">在将更改应用于数据透视表之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-476">Occurs before changes are applied to a PivotTable.</span>
          </span>
          <span data-ttu-id="fdc2b-477">此事件只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 项目中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-477">This event can be used only in [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] projects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-478"><xref:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableBeforeAllocateChanges> Excel 立即执行 UPDATE CUBE 语句以应用到数据透视表的 OLAP 数据源，所有更改之前，用户已选择要都应用的用户界面中的更改后立即发生的事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-478">The <xref:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableBeforeAllocateChanges> event occurs immediately before Excel executes an UPDATE CUBE statement to apply all changes to the PivotTable's OLAP data source, and immediately after the user has chosen to apply changes in the user interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdc2b-479">此事件将显示在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-479">This event appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="fdc2b-480">但是，不能在 Excel 2007 项目中使用此事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-480">However, this event cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="fdc2b-481">此事件在 Excel 2007 项目中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-481">This event is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PivotTableBeforeCommitChanges">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeCommitChangesEventHandler PivotTableBeforeCommitChanges;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeCommitChangesEventHandler PivotTableBeforeCommitChanges" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableBeforeCommitChanges" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeCommitChangesEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-482">在针对 OLAP 数据源提交数据透视表的更改之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-482">Occurs before changes are committed against the OLAP data source for a PivotTable.</span>
          </span>
          <span data-ttu-id="fdc2b-483">此事件只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 项目中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-483">This event can be used only in [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] projects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-484"><xref:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableBeforeCommitChanges> Excel 立即执行 COMMIT TRANSACTION 对数据透视表的 OLAP 数据源之前，用户已选择为整个数据透视表中保存更改后立即发生的事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-484">The <xref:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableBeforeCommitChanges> event occurs immediately before Excel executes a COMMIT TRANSACTION against the PivotTable's OLAP data source, and immediately after the user has chosen to save changes for the whole PivotTable.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdc2b-485">此事件将显示在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-485">This event appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="fdc2b-486">但是，不能在 Excel 2007 项目中使用此事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-486">However, this event cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="fdc2b-487">此事件在 Excel 2007 项目中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-487">This event is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PivotTableBeforeDiscardChanges">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeDiscardChangesEventHandler PivotTableBeforeDiscardChanges;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeDiscardChangesEventHandler PivotTableBeforeDiscardChanges" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableBeforeDiscardChanges" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_PivotTableBeforeDiscardChangesEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-488">在放弃对数据透视表的更改之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-488">Occurs before changes to a PivotTable are discarded.</span>
          </span>
          <span data-ttu-id="fdc2b-489">此事件只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 项目中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-489">This event can be used only in [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] projects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-490">Excel 执行 ROLLBACK TRANSACTION 语句，在针对 OLAP 数据源，如果事务仍处于活动状态，并且后用户已选择放弃更改，然后放弃该数据透视表中的所有已编辑的值之前立即发生。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-490">Occurs immediately before Excel executes a ROLLBACK TRANSACTION statement against the OLAP data source, if a transaction is still active, and then discards all edited values in the PivotTable, after the user has chosen to discard changes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdc2b-491">此事件将显示在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-491">This event appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="fdc2b-492">但是，不能在 Excel 2007 项目中使用此事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-492">However, this event cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="fdc2b-493">此事件在 Excel 2007 项目中使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-493">This event is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PivotTableChangeSync">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_PivotTableChangeSyncEventHandler PivotTableChangeSync;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_PivotTableChangeSyncEventHandler PivotTableChangeSync" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableChangeSync" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_PivotTableChangeSyncEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-494">在对数据透视表进行更改后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-494">Occurs after changes to a PivotTable.</span>
          </span>
          <span data-ttu-id="fdc2b-495">此事件只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 项目中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-495">This event can be used only in [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] projects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-496"><xref:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableChangeSync>过程中发生的大多数更改在数据透视表，以便您可以编写代码来响应用户操作，例如清除、 分组或刷新数据透视表中的项。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-496">The <xref:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableChangeSync> occurs during most changes to a PivotTable, so that you can write code to respond to user actions, such as clearing, grouping, or refreshing items in the PivotTable.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdc2b-497">此事件将显示在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-497">This event appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="fdc2b-498">但是，不能在 Excel 2007 项目中使用此事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-498">However, this event cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="fdc2b-499">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-499">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PivotTables(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTables(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="fdc2b-500">报表的名称或编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-500">The name or number of the report.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-501">获取一个对象，该对象表示工作表上的单个数据透视表（一个 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 对象）或所有数据透视表的集合（一个 <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> 对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-501">Gets an object that represents either a single PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object) or a collection of all the PivotTable reports (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> object) on a worksheet.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdc2b-502">一个对象，表示工作表上的单个数据透视表（一个 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 对象）或所有数据透视表的集合（一个 <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> 对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-502">An object that represents either a single PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object) or a collection of all the PivotTable reports (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> object) on a worksheet.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-503">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-503">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-504">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-504">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-505">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTables%2A>方法以获取<xref:Microsoft.Office.Interop.Excel.PivotTables?displayProperty=fullName>当前工作表的集合，并刷新集合中的每个数据透视表</span><span class="sxs-lookup"><span data-stu-id="fdc2b-505">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTables%2A> method to get the <xref:Microsoft.Office.Interop.Excel.PivotTables?displayProperty=fullName> collection of the current worksheet and refreshes each PivotTable in the collection</span></span>  
  
 <span data-ttu-id="fdc2b-506">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-506">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#107](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#107)]
 [!code-vb[Trin_ExcelWorkSheet#107](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableUpdate">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_PivotTableUpdateEventHandler PivotTableUpdate;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_PivotTableUpdateEventHandler PivotTableUpdate" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableUpdate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_PivotTableUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-507">在工作表上更新数据透视表之后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-507">Occurs after a PivotTable report is updated on a worksheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-508">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableUpdate>已更新数据透视表报表时显示一条消息的事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-508">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableUpdate> event that displays a message when a PivotTable report has been updated.</span></span>  
  
 <span data-ttu-id="fdc2b-509">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-509">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#207](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#207)]
 [!code-vb[Trin_ExcelWorkSheet#207](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#207)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard (object sourceType, object sourceData, object tableDestination, object tableName, object rowGrand, object columnGrand, object saveData, object hasAutoFormat, object autoPage, object reserved, object backgroundQuery, object optimizeCache, object pageFieldOrder, object pageFieldWrapCount, object readData, object connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard(object sourceType, object sourceData, object tableDestination, object tableName, object rowGrand, object columnGrand, object saveData, object hasAutoFormat, object autoPage, object reserved, object backgroundQuery, object optimizeCache, object pageFieldOrder, object pageFieldWrapCount, object readData, object connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Object" />
        <Parameter Name="sourceData" Type="System.Object" />
        <Parameter Name="tableDestination" Type="System.Object" />
        <Parameter Name="tableName" Type="System.Object" />
        <Parameter Name="rowGrand" Type="System.Object" />
        <Parameter Name="columnGrand" Type="System.Object" />
        <Parameter Name="saveData" Type="System.Object" />
        <Parameter Name="hasAutoFormat" Type="System.Object" />
        <Parameter Name="autoPage" Type="System.Object" />
        <Parameter Name="reserved" Type="System.Object" />
        <Parameter Name="backgroundQuery" Type="System.Object" />
        <Parameter Name="optimizeCache" Type="System.Object" />
        <Parameter Name="pageFieldOrder" Type="System.Object" />
        <Parameter Name="pageFieldWrapCount" Type="System.Object" />
        <Parameter Name="readData" Type="System.Object" />
        <Parameter Name="connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sourceType">
          <span data-ttu-id="fdc2b-510">一个 <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-510">An <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" /> value.</span>
          </span>
          <span data-ttu-id="fdc2b-511">报表数据的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-511">The source of the report data.</span>
          </span>
        </param>
        <param name="sourceData">
          <span data-ttu-id="fdc2b-512">新报表的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-512">The data for the new report.</span>
          </span>
          <span data-ttu-id="fdc2b-513">可以是 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象、范围数组或表示其他报表的名称的文本常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-513">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, an array of ranges, or a text constant that represents the name of another report.</span>
          </span>
          <span data-ttu-id="fdc2b-514">对于外部数据库，<c>SourceData</c> 是包含 SQL 查询字符串的字符串数组，其中每个元素的最大长度为 255 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-514">For an external database, <c>SourceData</c> is an array of strings containing the SQL query string, where each element is up to 255 characters in length.</span>
          </span>
          <span data-ttu-id="fdc2b-515">应使用 <c>Connection</c> 参数指定 ODBC 连接字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-515">You should use the <c>Connection</c> argument to specify the ODBC connection string.</span>
          </span>
          <span data-ttu-id="fdc2b-516">为了与较早版本的 Excel 兼容，<c>SourceData</c> 可以是二元素数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-516">For compatibility with earlier versions of Excel, <c>SourceData</c> can be a two-element array.</span>
          </span>
          <span data-ttu-id="fdc2b-517">第一个元素是指定数据的 ODBC 源的连接字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-517">The first element is the connection string specifying the ODBC source for the data.</span>
          </span>
          <span data-ttu-id="fdc2b-518">第二个元素是用于获取数据的 SQL 查询字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-518">The second element is the SQL query string used to get the data.</span>
          </span>
          <span data-ttu-id="fdc2b-519">如果指定 <c>SourceData</c>，还必须指定 <c>SourceType</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-519">If you specify <c>SourceData</c>, you must also specify <c>SourceType</c>.</span>
          </span>
          <span data-ttu-id="fdc2b-520">如果活动单元格在 <c>SourceData</c> 范围内，则还必须指定 <c>TableDestination</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-520">If the active cell is inside the <c>SourceData</c> range, you must specify <c>TableDestination</c> as well.</span>
          </span>
        </param>
        <param name="tableDestination">
          <span data-ttu-id="fdc2b-521">一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，指定应在工作表上放置报表的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-521">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying where the report should be placed on the worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-522">如果省略此参数，则报表将放置在活动单元格上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-522">If this argument is omitted, the report is placed at the active cell.</span>
          </span>
        </param>
        <param name="tableName">
          <span data-ttu-id="fdc2b-523">新报表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-523">The name of the new report.</span>
          </span>
        </param>
        <param name="rowGrand">
          <span data-ttu-id="fdc2b-524">为 <see langword="true" /> 可显示报表中的总行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-524">
              <see langword="true" /> to show grand totals for rows in the report.</span>
          </span>
        </param>
        <param name="columnGrand">
          <span data-ttu-id="fdc2b-525">为 <see langword="true" /> 可显示报表中的总列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-525">
              <see langword="true" /> to show grand totals for columns in the report.</span>
          </span>
        </param>
        <param name="saveData">
          <span data-ttu-id="fdc2b-526">为 <see langword="true" />，则保存报表数据；为 <see langword="false" />，则仅保存报表定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-526">
              <see langword="true" /> to save data with the report; <see langword="false" /> to save only the report definition.</span>
          </span>
        </param>
        <param name="hasAutoFormat">
          <span data-ttu-id="fdc2b-527">如果为 <see langword="true" />，则 Microsoft Office Excel 可在刷新报表或移动字段后自动设置报表格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-527">
              <see langword="true" /> to have Microsoft Office Excel automatically format the report when it is refreshed or when fields are moved.</span>
          </span>
        </param>
        <param name="autoPage">
          <span data-ttu-id="fdc2b-528">仅当 <c>SourceType</c> 为 <see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlConsolidation" /> 时才有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-528">Valid only if <c>SourceType</c> is <see cref="F:Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlConsolidation" />.</span>
          </span>
          <span data-ttu-id="fdc2b-529">如果让 Excel 创建一个用于合并的页字段，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-529">
              <see langword="true" /> to have Excel create a page field for the consolidation.</span>
          </span>
          <span data-ttu-id="fdc2b-530">如果 <c>AutoPage</c> 为 <see langword="false" />，则必须创建一个或多个页字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-530">If <c>AutoPage</c> is <see langword="false" />, you must create the page field or fields.</span>
          </span>
        </param>
        <param name="reserved">
          <span data-ttu-id="fdc2b-531">Excel 不使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-531">Not used by Excel.</span>
          </span>
        </param>
        <param name="backgroundQuery">
          <span data-ttu-id="fdc2b-532">如果为 <see langword="true" />，则 Excel 可异步执行（在后台）报表查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-532">
              <see langword="true" /> to have Excel perform queries for the report asynchronously (in the background).</span>
          </span>
          <span data-ttu-id="fdc2b-533">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-533">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="optimizeCache">
          <span data-ttu-id="fdc2b-534">如果为 <see langword="true" />，则可在构造数据透视表时对其缓存进行优化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-534">
              <see langword="true" /> to optimize the PivotTable cache when it is constructed.</span>
          </span>
          <span data-ttu-id="fdc2b-535">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-535">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="pageFieldOrder">
          <span data-ttu-id="fdc2b-536">向数据透视表的布局添加页字段的顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-536">The order in which page fields are added to the PivotTable report’s layout.</span>
          </span>
          <span data-ttu-id="fdc2b-537">可以是下列 <see cref="T:Microsoft.Office.Interop.Excel.XlOrder" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlOrder.xlDownThenOver" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlOrder.xlOverThenDown" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-537">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlOrder" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlOrder.xlDownThenOver" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlOrder.xlOverThenDown" />.</span>
          </span>
          <span data-ttu-id="fdc2b-538">默认值为 <see cref="F:Microsoft.Office.Interop.Excel.XlOrder.xlDownThenOver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-538">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlOrder.xlDownThenOver" />.</span>
          </span>
        </param>
        <param name="pageFieldWrapCount">
          <span data-ttu-id="fdc2b-539">数据透视表中每列或每行中的页字段数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-539">The number of page fields in each column or row in the PivotTable report.</span>
          </span>
          <span data-ttu-id="fdc2b-540">默认值为 0（零）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-540">The default value is 0 (zero).</span>
          </span>
        </param>
        <param name="readData">
          <span data-ttu-id="fdc2b-541">如果为 <see langword="true" />，则可创建包含外部数据库所有记录的数据透视表缓存；此缓存可能很大。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-541">
              <see langword="true" /> to create a PivotTable cache that contains all records from the external database; this cache can be very large.</span>
          </span>
          <span data-ttu-id="fdc2b-542">如果 <c>ReadData</c> 为 <see langword="false" />，则可以在实际读取数据前，将某些字段设置为基于服务器的页字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-542">If <c>ReadData</c> is <see langword="false" />, you can set some of the fields as server-based page fields before the data is actually read.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="fdc2b-543">一个字符串，包含使 Excel 连接到 ODBC 数据源的 ODBC 设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-543">A string that contains ODBC settings that allow Excel to connect to an ODBC data source.</span>
          </span>
          <span data-ttu-id="fdc2b-544">连接字符串具有格式“ODBC;&lt;连接字符串&gt;”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-544">The connection string has the form "ODBC;&lt;connection string&gt;".</span>
          </span>
          <span data-ttu-id="fdc2b-545">此参数重写 <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> 对象的 <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> 属性的所有以前的设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-545">This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-546">创建一个 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-546">Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdc2b-547">
            <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-547">The <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-548">此方法不显示该数据透视表向导。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-548">This method does not display the PivotTable Wizard.</span></span> <span data-ttu-id="fdc2b-549">此方法不是可用于 OLE DB 数据源。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-549">This method is not available for OLE DB data sources.</span></span> <span data-ttu-id="fdc2b-550">使用<xref:Microsoft.Office.Interop.Excel.Worksheets.Add%2A>方法以添加数据透视表的缓存，然后创建数据透视表报表基于缓存。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-550">Use the <xref:Microsoft.Office.Interop.Excel.Worksheets.Add%2A> method to add a PivotTable cache, and then create a PivotTable report based on the cache.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-551">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-551">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-552">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-552">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-553">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableWizard%2A>方法来创建数据透视表报表基于 A1 至 C4 当前工作表的单元格的范围的内容。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-553">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.PivotTableWizard%2A> method to create a PivotTable report based on the contents of the range of cells from A1 to C4 of the current worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-554">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-554">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#108](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#108)]
 [!code-vb[Trin_ExcelWorkSheet#108](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Previous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-555">获取表示上一个表的 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-555">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the previous sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-556">表示上一个表的 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />；如果当前工作表是工作簿中的第一个表，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-556">A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> that represents the previous sheet; <see langword="null" /> if the current worksheet is the first sheet in the workbook.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-557">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Previous%2A>属性来确定是否当前<xref:Microsoft.Office.Tools.Excel.WorksheetBase>是工作簿中的第一个表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-557">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Previous%2A> property to determine whether the current <xref:Microsoft.Office.Tools.Excel.WorksheetBase> is the first sheet in the workbook.</span></span> <span data-ttu-id="fdc2b-558">如果当前<xref:Microsoft.Office.Tools.Excel.WorksheetBase>不是第一个表，则显示前一个工作表的名称。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-558">If the current <xref:Microsoft.Office.Tools.Excel.WorksheetBase> is not the first sheet, then the name of the previous sheet is displayed.</span></span>  
  
 <span data-ttu-id="fdc2b-559">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-559">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#24](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#24)]
 [!code-vb[Trin_ExcelWorkSheet#24](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.PrintedCommentPages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-560">获取要为当前工作表打印的注释页的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-560">Gets the number of comment pages that will be printed for the current worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-561">此属性只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-561">This property can be used only in [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] projects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-562">要为当前工作表打印的注释页的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-562">The number of comment pages that will be printed for the current worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-563"><xref:Microsoft.Office.Tools.Excel.WorksheetBase.PrintedCommentPages%2A>属性仅将返回一个数字大于零 if**注释**上设置**表**选项卡**页面设置**对话框的设置为**在表的末尾**。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-563">The <xref:Microsoft.Office.Tools.Excel.WorksheetBase.PrintedCommentPages%2A> property will only return a number greater than zero if the **Comments** setting on the **Sheet** tab of the **Page Setup** dialog box is set to **At end of sheet**.</span></span> <span data-ttu-id="fdc2b-564">如果表是图表工作表或 MS Excel 5.0 对话框工作表，此属性将返回零。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-564">This property will return zero if the sheet is a Chart sheet or a MS Excel 5.0 Dialog sheet.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdc2b-565">此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-565">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="fdc2b-566">但是，此属性不能使用 Excel 2007 项目中。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-566">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="fdc2b-567">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-567">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Object" />
        <Parameter Name="to" Type="System.Object" />
        <Parameter Name="copies" Type="System.Object" />
        <Parameter Name="preview" Type="System.Object" />
        <Parameter Name="activePrinter" Type="System.Object" />
        <Parameter Name="printToFile" Type="System.Object" />
        <Parameter Name="collate" Type="System.Object" />
        <Parameter Name="prToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="from">To be added.</param>
        <param name="to">To be added.</param>
        <param name="copies">To be added.</param>
        <param name="preview">To be added.</param>
        <param name="activePrinter">To be added.</param>
        <param name="printToFile">To be added.</param>
        <param name="collate">To be added.</param>
        <param name="prToFileName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName, object ignorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintOutEx(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName, object ignorePrintAreas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Object" />
        <Parameter Name="to" Type="System.Object" />
        <Parameter Name="copies" Type="System.Object" />
        <Parameter Name="preview" Type="System.Object" />
        <Parameter Name="activePrinter" Type="System.Object" />
        <Parameter Name="printToFile" Type="System.Object" />
        <Parameter Name="collate" Type="System.Object" />
        <Parameter Name="prToFileName" Type="System.Object" />
        <Parameter Name="ignorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="from">
          <span data-ttu-id="fdc2b-568">要从其处开始打印的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-568">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="fdc2b-569">如果省略此参数，则打印从第一页开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-569">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="to">
          <span data-ttu-id="fdc2b-570">要打印的最后一页的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-570">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="fdc2b-571">若忽略此参数，则打印至最后一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-571">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="copies">
          <span data-ttu-id="fdc2b-572">要打印的份数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-572">The number of copies to print.</span>
          </span>
          <span data-ttu-id="fdc2b-573">如果忽略此参数，则打印一份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-573">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="preview">
          <span data-ttu-id="fdc2b-574">若要在打印对象前让 Microsoft Office Excel 调用打印预览，请使用 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-574">
              <see langword="true" /> to have Microsoft Office Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="fdc2b-575">若要立即打印对象，请使用 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-575">
              <see langword="false" /> to print the object immediately.</span>
          </span>
        </param>
        <param name="activePrinter">
          <span data-ttu-id="fdc2b-576">设置活动打印机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-576">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="printToFile">
          <span data-ttu-id="fdc2b-577">若要打印到文件，请使用 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-577">
              <see langword="true" /> to print to a file.</span>
          </span>
          <span data-ttu-id="fdc2b-578">若未指定 <c>PrToFileName</c>，则 Excel 会提示用户输入输出文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-578">If <c>PrToFileName</c> is not specified, Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="collate">
          <span data-ttu-id="fdc2b-579">若逐份打印多个副本，请使用 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-579">
              <see langword="true" /> to collate multiple copies.</span>
          </span>
        </param>
        <param name="prToFileName">
          <span data-ttu-id="fdc2b-580">如果 <c>PrintToFile</c> 设为 <see langword="true" />，则此参数指定要打印到的文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-580">If <c>PrintToFile</c> is set to <see langword="true" />, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <param name="ignorePrintAreas">
          <span data-ttu-id="fdc2b-581">如果要忽略打印区域并打印整个工作簿，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-581">
              <see langword="true" /> to ignore print areas and print the entire workbook; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-582">打印工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-582">Prints the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-583">"页"中的说明`From`和`To`指打印的页面，不适用于表或工作簿中的所有页。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-583">"Pages" in the descriptions of `From` and `To` refers to printed pages, not to overall pages in the sheet or workbook.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-584">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-584">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-585">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-585">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-586">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.PrintOutEx%2A>方法打印两个逐的份打印到默认打印机工作表的前两个页。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-586">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.PrintOutEx%2A> method to print two collated copies of the first two pages of the worksheet to the default printer.</span></span> <span data-ttu-id="fdc2b-587">若要运行此代码示例，您的工作簿必须包含名为`Sheet1`一些数据。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-587">To run this code example, your workbook must contain a worksheet named `Sheet1` with some data.</span></span>  
  
 <span data-ttu-id="fdc2b-588">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-588">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkBook_Additional#13](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#13)]
 [!code-vb[Trin_ExcelWorkBook_Additional#13](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object enableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintPreview(object enableChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.PrintPreview(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enableChanges">To be added.</param>
        <summary>
          <span data-ttu-id="fdc2b-589">显示工作表打印效果的预览。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-589">Shows a preview of the worksheet as it would look when printed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-590">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-590">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-591">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-591">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-592">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.PrintPreview%2A>方法来显示当前工作表的打印预览。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-592">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.PrintPreview%2A> method to display a print preview of the current worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-593">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-593">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#110](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#110)]
 [!code-vb[Trin_ExcelWorkSheet#110](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object password, object drawingObjects, object contents, object scenarios, object userInterfaceOnly, object allowFormattingCells, object allowFormattingColumns, object allowFormattingRows, object allowInsertingColumns, object allowInsertingRows, object allowInsertingHyperlinks, object allowDeletingColumns, object allowDeletingRows, object allowSorting, object allowFiltering, object allowUsingPivotTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Protect(object password, object drawingObjects, object contents, object scenarios, object userInterfaceOnly, object allowFormattingCells, object allowFormattingColumns, object allowFormattingRows, object allowInsertingColumns, object allowInsertingRows, object allowInsertingHyperlinks, object allowDeletingColumns, object allowDeletingRows, object allowSorting, object allowFiltering, object allowUsingPivotTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.Object" />
        <Parameter Name="drawingObjects" Type="System.Object" />
        <Parameter Name="contents" Type="System.Object" />
        <Parameter Name="scenarios" Type="System.Object" />
        <Parameter Name="userInterfaceOnly" Type="System.Object" />
        <Parameter Name="allowFormattingCells" Type="System.Object" />
        <Parameter Name="allowFormattingColumns" Type="System.Object" />
        <Parameter Name="allowFormattingRows" Type="System.Object" />
        <Parameter Name="allowInsertingColumns" Type="System.Object" />
        <Parameter Name="allowInsertingRows" Type="System.Object" />
        <Parameter Name="allowInsertingHyperlinks" Type="System.Object" />
        <Parameter Name="allowDeletingColumns" Type="System.Object" />
        <Parameter Name="allowDeletingRows" Type="System.Object" />
        <Parameter Name="allowSorting" Type="System.Object" />
        <Parameter Name="allowFiltering" Type="System.Object" />
        <Parameter Name="allowUsingPivotTables" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="fdc2b-594">工作表的密码，区分大小写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-594">A case-sensitive password for the worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-595">如果省略此参数，则无需使用密码即可取消对工作表的保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-595">If this argument is omitted, you can unprotect the worksheet without using a password.</span>
          </span>
          <span data-ttu-id="fdc2b-596">否则，您必须指定密码才能取消对工作表的保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-596">Otherwise, you must specify the password to unprotect the worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-597">如果忘记密码，则无法取消对工作表的保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-597">If you forget the password, you cannot unprotect the worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-598">最好将密码及其对应文档名的列表保存在安全的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-598">It is a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="drawingObjects">
          <span data-ttu-id="fdc2b-599">为 <see langword="true" /> 时保护形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-599">
              <see langword="true" /> to protect shapes.</span>
          </span>
          <span data-ttu-id="fdc2b-600">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-600">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="contents">
          <span data-ttu-id="fdc2b-601">为 <see langword="true" /> 可保护锁定单元格中的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-601">
              <see langword="true" /> to protect contents in the locked cells.</span>
          </span>
          <span data-ttu-id="fdc2b-602">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-602">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <param name="scenarios">
          <span data-ttu-id="fdc2b-603">为 <see langword="true" /> 时保护方案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-603">
              <see langword="true" /> to protect scenarios.</span>
          </span>
          <span data-ttu-id="fdc2b-604">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-604">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <param name="userInterfaceOnly">
          <span data-ttu-id="fdc2b-605">为 <see langword="true" /> 可保护用户界面，但不保护宏。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-605">
              <see langword="true" /> to protect the user interface, but not macros.</span>
          </span>
          <span data-ttu-id="fdc2b-606">如果省略此参数，则同时对宏和用户界面应用保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-606">If this argument is omitted, protection applies both to macros and to the user interface.</span>
          </span>
        </param>
        <param name="allowFormattingCells">
          <span data-ttu-id="fdc2b-607">为 <see langword="true" />，则允许用户格式化受保护的工作表上的任何单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-607">
              <see langword="true" /> allows the user to format any cell on a protected worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-608">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-608">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="allowFormattingColumns">
          <span data-ttu-id="fdc2b-609">为 <see langword="true" />，则允许用户格式化受保护的工作表上的任何列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-609">
              <see langword="true" /> allows the user to format any column on a protected worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-610">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-610">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="allowFormattingRows">
          <span data-ttu-id="fdc2b-611">为 <see langword="true" />，则允许用户格式化受保护的工作表上的任何行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-611">
              <see langword="true" /> allows the user to format any row on a protected worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-612">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-612">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="allowInsertingColumns">
          <span data-ttu-id="fdc2b-613">为 <see langword="true" />，则允许用户在受保护的工作表上插入列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-613">
              <see langword="true" /> allows the user to insert columns on the protected worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-614">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-614">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="allowInsertingRows">
          <span data-ttu-id="fdc2b-615">为 <see langword="true" />，则允许用户在受保护的工作表上插入行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-615">
              <see langword="true" /> allows the user to insert rows on the protected worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-616">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-616">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="allowInsertingHyperlinks">
          <span data-ttu-id="fdc2b-617">为 <see langword="true" />，则允许用户在工作表上插入超链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-617">
              <see langword="true" /> allows the user to insert hyperlinks on the worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-618">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-618">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="allowDeletingColumns">
          <span data-ttu-id="fdc2b-619">为 <see langword="true" />，则允许用户在受保护的工作表上删除列，此处要删除的列中的每个单元格都已被解除锁定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-619">
              <see langword="true" /> allows the user to delete columns on the protected worksheet, where every cell in the column to be deleted is unlocked.</span>
          </span>
          <span data-ttu-id="fdc2b-620">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-620">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="allowDeletingRows">
          <span data-ttu-id="fdc2b-621">为 <see langword="true" />，则允许用户在受保护的工作表上删除行，此处要删除的行中的每个单元格都已被解除锁定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-621">
              <see langword="true" /> allows the user to delete rows on the protected worksheet, where every cell in the row to be deleted is unlocked.</span>
          </span>
          <span data-ttu-id="fdc2b-622">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-622">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="allowSorting">
          <span data-ttu-id="fdc2b-623">为 <see langword="true" />，则允许用户在受保护的工作表上进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-623">
              <see langword="true" /> allows the user to sort on the protected worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-624">排序范围中的每个单元格都必须已解除锁定或不受保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-624">Every cell in the sort range must be unlocked or unprotected.</span>
          </span>
          <span data-ttu-id="fdc2b-625">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-625">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="allowFiltering">
          <span data-ttu-id="fdc2b-626">为 <see langword="true" />，则允许用户在受保护的工作表上设置筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-626">
              <see langword="true" /> allows the user to set filters on the protected worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-627">用户可以更改筛选条件，但不能启用或禁用自动筛选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-627">Users can change filter criteria but can not enable or disable an autofilter.</span>
          </span>
          <span data-ttu-id="fdc2b-628">用户可以在现有的自动筛选上设置筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-628">Users can set filters on an existing autofilter.</span>
          </span>
          <span data-ttu-id="fdc2b-629">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-629">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="allowUsingPivotTables">
          <span data-ttu-id="fdc2b-630">为 <see langword="true" />，则允许用户在受保护的工作表上使用数据透视表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-630">
              <see langword="true" /> allows the user to use pivot table reports on the protected worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-631">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-631">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-632">保护工作表使其无法修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-632">Protects a worksheet so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-633">如果应用使用此方法`UserInterfaceOnly`参数设置为`true`，然后保存该工作簿，整个工作表 （而不仅仅是接口） 将完全受到保护时重新打开工作簿。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-633">If you apply this method with the `UserInterfaceOnly` argument set to `true` and then save the workbook, the entire worksheet (not just the interface) will be fully protected when you reopen the workbook.</span></span> <span data-ttu-id="fdc2b-634">若要打开该工作簿后，重新启用用户界面保护，必须再次应用使用此方法`UserInterfaceOnly`设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-634">To re-enable the user interface protection after the workbook is opened, you must again apply this method with `UserInterfaceOnly` set to `true`.</span></span>  
  
 <span data-ttu-id="fdc2b-635">就可以对受保护工作表进行更改，如果提供密码。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-635">It is possible to make changes to a protected worksheet if the password is supplied.</span></span> <span data-ttu-id="fdc2b-636">此外，另一个方法是： 取消保护工作表，进行必要的更改，然后再次保护工作表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-636">Also, another method would be to unprotect the worksheet, make the necessary changes, and then protect the worksheet again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdc2b-637">未受保护，则表示可能会锁定该单元格 (**单元格格式**对话框)，但包含在中定义的范围**允许用户编辑范围**对话框中，并且用户已取消保护具有密码的范围或已通过 NT 权限验证。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-637">'Unprotected' means the cell may be locked (**Format Cells** dialog) but is included in a range defined in the **Allow Users to Edit Ranges** dialog, and the user has unprotected the range with a password or been validated via NT permissions.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-638">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-638">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-639">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-639">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-640">下面的代码示例获取的值<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ProtectContents%2A>属性来确定是否受保护工作表的内容。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-640">The following code example gets the value of the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ProtectContents%2A> property to determine whether the contents of the worksheet are protected.</span></span> <span data-ttu-id="fdc2b-641">如果内容未受保护，则<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A>与调用方法`Contents`参数设置为`true`，以便将受保护的内容。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-641">If the contents are unprotected, then the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A> method is called with the `Contents` parameter set to `true` so that the contents are protected.</span></span>  
  
 <span data-ttu-id="fdc2b-642">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-642">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#25](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#25)]
 [!code-vb[Trin_ExcelWorkSheet#25](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.ProtectContents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-643">获取一个值，该值指示工作表的内容（单个单元格）是否受保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-643">Gets a value that indicates whether the contents of the worksheet (the individual cells) are protected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-644">如果表的内容受保护，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-644">
              <see langword="true" /> if the contents of the sheet are protected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-645">下面的代码示例获取的值<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ProtectContents%2A>属性来确定是否受保护工作表的内容。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-645">The following code example gets the value of the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ProtectContents%2A> property to determine whether the contents of the worksheet are protected.</span></span> <span data-ttu-id="fdc2b-646">如果内容未受保护，则<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A>与调用方法`Contents`参数设置为`true`，以便将受保护的内容。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-646">If the contents are unprotected, then the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A> method is called with the `Contents` parameter set to `true` so that the contents are protected.</span></span>  
  
 <span data-ttu-id="fdc2b-647">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-647">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#25](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#25)]
 [!code-vb[Trin_ExcelWorkSheet#25](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.ProtectDrawingObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-648">获取一个值，该值指示形状是否受保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-648">Gets a value that indicates whether shapes are protected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-649">如果形状受保护，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-649">
              <see langword="true" /> if shapes are protected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-650">下面的代码示例获取的值<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ProtectDrawingObjects%2A>属性来确定是否受保护工作表上的形状。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-650">The following code example gets the value of the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ProtectDrawingObjects%2A> property to determine whether shapes on the worksheet are protected.</span></span> <span data-ttu-id="fdc2b-651">如果形状未受保护，则<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A>与调用方法`DrawingObjects`参数设置为`true`以便形状是否受保护。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-651">If shapes are unprotected, then the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A> method is called with the `DrawingObjects` parameter set to `true` so that shapes are protected.</span></span>  
  
 <span data-ttu-id="fdc2b-652">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-652">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#26](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#26)]
 [!code-vb[Trin_ExcelWorkSheet#26](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Protection Protection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Protection Protection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Protection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Protection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-653">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> 对象，该对象表示工作表的保护选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-653">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> object that represents the protection options of the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-654">一个 <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> 对象，表示工作表的保护选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-654">A <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> object that represents the protection options of the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-655">下面的代码示例获取的值<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protection%2A>属性以确定是否当前允许单元格格式设置。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-655">The following code example gets the value of the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protection%2A> property to determine whether cell formatting is currently allowed.</span></span> <span data-ttu-id="fdc2b-656">如果不允许单元格格式设置，则<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A>与调用方法`AllowFormattingCells`参数设置为`true`，以便可以设置格式的单元格。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-656">If cell formatting is not allowed, then the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A> method is called with the `AllowFormattingCells` parameter set to `true` so that cells can be formatted.</span></span>  
  
 <span data-ttu-id="fdc2b-657">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-657">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#27](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#27)]
 [!code-vb[Trin_ExcelWorkSheet#27](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.ProtectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-658">获取一个值，该值指示是否打开仅限用户界面保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-658">Gets a value that indicates whether user interface-only protection is turned on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-659">如果打开仅限用户界面保护，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-659">
              <see langword="true" /> if user interface-only protection is turned on; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-660">若要启用用户界面保护，使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A>方法替换`UserInterfaceOnly`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-660">To turn on user interface protection, use the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A> method with the `UserInterfaceOnly` argument set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-661">下面的代码示例获取的值<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ProtectionMode%2A>属性来确定是否受保护的用户界面。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-661">The following code example gets the value of the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ProtectionMode%2A> property to determine whether the user interface is protected.</span></span> <span data-ttu-id="fdc2b-662">如果用户界面未受保护，则<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A>与调用方法`UserInterfaceOnly`参数设置为`true`这样的用户界面会受到保护。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-662">If the user interface is unprotected, then the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A> method is called with the `UserInterfaceOnly` parameter set to `true` so that the user interface is protected.</span></span>  
  
 <span data-ttu-id="fdc2b-663">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-663">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#28](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#28)]
 [!code-vb[Trin_ExcelWorkSheet#28](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectScenarios">
      <MemberSignature Language="C#" Value="public bool ProtectScenarios { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectScenarios" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.ProtectScenarios" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-664">获取一个值，该值指示工作表方案是否受保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-664">Gets a value that indicates whether worksheet scenarios are protected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-665">如果工作表方案受保护，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-665">
              <see langword="true" /> if the worksheet scenarios are protected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-666">下面的代码示例获取的值<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ProtectScenarios%2A>属性来确定工作表方案是否受保护。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-666">The following code example gets the value of the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ProtectScenarios%2A> property to determine whether worksheet scenarios are protected.</span></span> <span data-ttu-id="fdc2b-667">如果方案不受保护，则<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A>与调用方法`Scenarios`参数设置为`true`以便方案是否受保护。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-667">If scenarios are unprotected, then the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Protect%2A> method is called with the `Scenarios` parameter set to `true` so that scenarios are protected.</span></span>  
  
 <span data-ttu-id="fdc2b-668">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-668">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#29](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#29)]
 [!code-vb[Trin_ExcelWorkSheet#29](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTables QueryTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTables QueryTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.QueryTables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-669">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> 集合，该集合表示工作表上的所有查询表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-669">Gets the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection that represents all the query tables on the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-670">
            <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> 集合，表示工作表上的所有查询表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-670">The <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection that represents all the query tables on the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-671">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.QueryTables%2A>属性来刷新中的数据每隔<xref:Microsoft.Office.Interop.Excel.QueryTable?displayProperty=fullName>当前工作表上。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-671">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.QueryTables%2A> property to refresh the data in every <xref:Microsoft.Office.Interop.Excel.QueryTable?displayProperty=fullName> on the current worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-672">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-672">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#30](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#30)]
 [!code-vb[Trin_ExcelWorkSheet#30](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Excel.Worksheet_RangeType Range { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Excel.Worksheet_RangeType Range" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Range" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Worksheet_RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-673">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，该对象表示一个单元格或一定单元格范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-673">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-674">一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，表示一个单元格或单元格范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-674">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents a cell or a range of cells.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-675"><xref:Microsoft.Office.Tools.Excel.WorksheetBase.Range%2A>属性应与以下参数一起使用。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-675">The <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Range%2A> property is intended to be used with the following parameters.</span></span>  
  
|<span data-ttu-id="fdc2b-676">参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-676">Parameter</span></span>|<span data-ttu-id="fdc2b-677">描述</span><span class="sxs-lookup"><span data-stu-id="fdc2b-677">Description</span></span>|  
|---------------|-----------------|  
|`Cell1`|<span data-ttu-id="fdc2b-678">采用应用程序语言的以 A1 样式表示法表示的范围名称。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-678">The name of the range in A1-style notation in the language of the application.</span></span> <span data-ttu-id="fdc2b-679">范围名称可以包括范围运算符（冒号）、交集运算符（空格）或并集运算符（逗号）。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-679">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="fdc2b-680">范围名称还可以包括货币符号，但是这些符号被忽略。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-680">It can also include dollar signs, but they are ignored.</span></span> <span data-ttu-id="fdc2b-681">可以在范围的任何部分中使用本地定义的名称。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-681">You can use a local defined name in any part of the range.</span></span> <span data-ttu-id="fdc2b-682">如果使用一个名称，则假定该名称使用的是应用程序的语言。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-682">If you use a name, the name is assumed to be in the language of the application.</span></span> <span data-ttu-id="fdc2b-683">此参数是必需的。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-683">This parameter is required.</span></span>|  
|`Cell2`|<span data-ttu-id="fdc2b-684">范围右下角的单元格。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-684">The cell in the lower-right corner of the range.</span></span> <span data-ttu-id="fdc2b-685">可以是一个包含单个单元格、整列、整行的 <xref:Microsoft.Office.Interop.Excel.Range?displayProperty=fullName>，或者可以是一个以应用程序的语言命名单个单元格的字符串。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-685">Can be a <xref:Microsoft.Office.Interop.Excel.Range?displayProperty=fullName> that contains a single cell, an entire column, an entire row, or it can be a string that names a single cell in the language of the application.</span></span> <span data-ttu-id="fdc2b-686">此参数在 Visual Basic 中是可选的。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-686">This parameter is optional in Visual Basic.</span></span>|  
  
 <span data-ttu-id="fdc2b-687">如果尝试使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Range%2A>而无需指定任何参数，<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Range%2A>将获取<xref:Microsoft.Office.Tools.Excel.Worksheet._RangeType>对象，它是 Visual Studio 基础结构的一部分，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-687">If you attempt to use <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Range%2A> without specifying any parameters, <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Range%2A> will get a <xref:Microsoft.Office.Tools.Excel.Worksheet._RangeType> object that is part of the Visual Studio infrastructure and is not intended to be used directly from your code.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-688">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-688">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-689">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-689">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-690">下面的代码示例演示如何使用不同方式<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Range%2A>属性来访问单个或多个单元格。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-690">The following code example demonstrates different ways to use the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Range%2A> property to access a single cell or multiple cells.</span></span>  
  
 <span data-ttu-id="fdc2b-691">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-691">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#42](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#42)]
 [!code-vb[Trin_ExcelWorkSheet#42](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Rectangles(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Rectangles(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAllPageBreaks">
      <MemberSignature Language="C#" Value="public void ResetAllPageBreaks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAllPageBreaks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.ResetAllPageBreaks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-692">重置指定工作表上的所有分页符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-692">Resets all page breaks on the specified worksheet.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-693">获取一个表示工作表上一个或多个行的 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-693">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents one or more rows on the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-694">一个表示工作表上一个或多个行的 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-694">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents one or more rows on the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-695">如果使用不带参数，该属性返回<xref:Microsoft.Office.Interop.Excel.Range>对象，其中包含工作表上的所有行。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-695">When used without parameters, this property returns a <xref:Microsoft.Office.Interop.Excel.Range> object that contains all the rows on the worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-696">此属性可以使用以下可选参数，用于在工作表上获取特定行。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-696">This property can be used with the following optional parameters to get specific rows on the worksheet.</span></span> <span data-ttu-id="fdc2b-697">如果参数中使用此属性，返回值是必须强制转换为对象<xref:Microsoft.Office.Interop.Excel.Range>。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-697">If you use this property with parameters, the return value is an object that must be cast to a <xref:Microsoft.Office.Interop.Excel.Range>.</span></span>  
  
|<span data-ttu-id="fdc2b-698">参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-698">Parameter</span></span>|<span data-ttu-id="fdc2b-699">描述</span><span class="sxs-lookup"><span data-stu-id="fdc2b-699">Description</span></span>|  
|---------------|-----------------|  
|`RowIndex`|<span data-ttu-id="fdc2b-700">若要获取的一个或多个行的索引。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-700">The index of one or more rows to get.</span></span><br /><br /> <span data-ttu-id="fdc2b-701">若要获取的单个行，请将传递一个整数，指定你想要获取的行的索引。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-701">To get a single row, pass an integer that specifies the index of the row you want to get.</span></span> <span data-ttu-id="fdc2b-702">行索引从 1 开始。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-702">The row indexes begin at 1.</span></span><br /><br /> <span data-ttu-id="fdc2b-703">若要获取多个连续的行，请将传递格式的字符串"`first row`:`last row`"。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-703">To get multiple contiguous rows, pass a string with the format "`first row`:`last row`".</span></span> <span data-ttu-id="fdc2b-704">例如，若要获取行 1 至 5，传递"1:5"。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-704">For example, to get rows 1 through 5, pass "1:5".</span></span>|  
|`ColumnIndex`|<span data-ttu-id="fdc2b-705">不使用此参数。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-705">Do not use this parameter.</span></span> <span data-ttu-id="fdc2b-706">此属性将引发<xref:System.Runtime.InteropServices.COMException>如果尝试将值传递给此参数。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-706">This property will throw a <xref:System.Runtime.InteropServices.COMException> if you try to pass a value to this parameter.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-707">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Rows%2A>属性工作表上的前五个行中设置颜色、 名称、 大小和的所有单元格的字体。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-707">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Rows%2A> property to set the color, name, size, and boldness of the font of all the cells in the first five rows on the worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-708">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-708">This example is for a document-level customization.</span></span> <span data-ttu-id="fdc2b-709">若要运行此代码，请将其复制到你的项目中的工作表类之一。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-709">To run this code, copy it into one of the worksheet classes in your project.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#31](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#31)]
 [!code-vb[Trin_ExcelWorkSheet#31](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, object fileFormat, object password, object writeResPassword, object readOnlyRecommended, object createBackup, object addToMru, object textCodepage, object textVisualLayout, object local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, object fileFormat, object password, object writeResPassword, object readOnlyRecommended, object createBackup, object addToMru, object textCodepage, object textVisualLayout, object local) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="fileFormat" Type="System.Object" />
        <Parameter Name="password" Type="System.Object" />
        <Parameter Name="writeResPassword" Type="System.Object" />
        <Parameter Name="readOnlyRecommended" Type="System.Object" />
        <Parameter Name="createBackup" Type="System.Object" />
        <Parameter Name="addToMru" Type="System.Object" />
        <Parameter Name="textCodepage" Type="System.Object" />
        <Parameter Name="textVisualLayout" Type="System.Object" />
        <Parameter Name="local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="fdc2b-710">要保存的文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-710">The name of the file to be saved.</span>
          </span>
          <span data-ttu-id="fdc2b-711">可以包含完整路径；否则，Microsoft Office Excel 将文件保存在当前文件夹中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-711">You can include a full path; if you do not, Microsoft Office Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="fileFormat">
          <span data-ttu-id="fdc2b-712">保存文件时要使用的文件格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-712">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="fdc2b-713">有关有效选项的列表，请参见 <see cref="P:Microsoft.Office.Tools.Excel.Workbook.FileFormat" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-713">For a list of valid choices, see the <see cref="P:Microsoft.Office.Tools.Excel.Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="fdc2b-714">对于现有文件，默认格式为最后一种指定文件格式；对于新文件，默认格式为所用 Excel 版本的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-714">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="fdc2b-715">一个区分大小写的字符串（不超过 15 个字符），指示为文件指定的保护密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-715">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="writeResPassword">
          <span data-ttu-id="fdc2b-716">文件的写保护密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-716">The write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="fdc2b-717">如果保存文件时指定了密码，但打开文件时没有提供密码，则该文件以只读方式打开。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-717">If a file is saved with the password and the password is not supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="readOnlyRecommended">
          <span data-ttu-id="fdc2b-718">如果为 <see langword="true" />，则在打开该文件时显示一条消息，建议以只读方式打开该文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-718">
              <see langword="true" /> to display a message when the file is opened, recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="createBackup">
          <span data-ttu-id="fdc2b-719">如果为 <see langword="true" />，则创建备份文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-719">
              <see langword="true" /> to create a backup file.</span>
          </span>
        </param>
        <param name="addToMru">
          <span data-ttu-id="fdc2b-720">如果为 <see langword="true" />，则将工作簿添加到最近使用的文件列表中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-720">
              <see langword="true" /> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="fdc2b-721">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-721">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="textCodepage">
          <span data-ttu-id="fdc2b-722">不在美国使用英语 Excel。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-722">Not used in U.S. English Excel.</span>
          </span>
        </param>
        <param name="textVisualLayout">
          <span data-ttu-id="fdc2b-723">不在美国使用英语 Excel。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-723">Not used in U.S. English Excel.</span>
          </span>
        </param>
        <param name="local">
          <span data-ttu-id="fdc2b-724">如果为 <see langword="true" />，则针对 Excel 语言保存文件（包括控制面板设置）；如果为 <see langword="false" />（默认），则针对 Visual Basic for Applications (VBA) 语言保存文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-724">
              <see langword="true" /> saves files against the language of Excel (including control panel settings); <see langword="false" /> (default) saves files against the language of Visual Basic for Applications (VBA).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-725">在另一个文件中保存对工作表所做的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-725">Saves changes to the worksheet in a different file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-726">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-726">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-727">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-727">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-728">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.SaveAs%2A>方法以保存当前工作表的新副本。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-728">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.SaveAs%2A> method to save a new copy of the current worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-729">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-729">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#111](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#111)]
 [!code-vb[Trin_ExcelWorkSheet#111](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#111)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scenarios">
      <MemberSignature Language="C#" Value="public object Scenarios (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Scenarios(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Scenarios(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="fdc2b-730">方案的名称或编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-730">The name or number of the scenario.</span>
          </span>
          <span data-ttu-id="fdc2b-731">使用数组可指定多个方案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-731">Use an array to specify more than one scenario.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-732">获取一个对象，该对象表示工作表上的单个方案（一个 <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> 对象）或方案的集合（一个 <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> 对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-732">Gets an object that represents either a single scenario (a <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> object) or a collection of scenarios (a <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> object) on the worksheet.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdc2b-733">一个对象，表示工作表上的单个方案（一个 <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> 对象）或方案的集合（一个 <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> 对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-733">An object that represents either a single scenario (a <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> object) or a collection of scenarios (a <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> object) on the worksheet.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-734">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Scenarios%2A>方法将新方案添加到当前工作表，并显示**方案 Manager**对话框来验证是否添加了该方案。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-734">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Scenarios%2A> method to add a new scenario to the current worksheet, and then displays the **Scenario Manager** dialog to verify that the scenario was added.</span></span>  
  
 <span data-ttu-id="fdc2b-735">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-735">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#112](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#112)]
 [!code-vb[Trin_ExcelWorkSheet#112](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#112)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Scripts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollArea">
      <MemberSignature Language="C#" Value="public string ScrollArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.ScrollArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-736">获取或设置允许滚动的范围，作为 A1 样式范围引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-736">Gets or sets the range where scrolling is allowed, as an A1-style range reference.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-737">允许滚动的范围，作为 A1 样式范围引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-737">The range where scrolling is allowed, as an A1-style range reference.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-738">不能选择滚动区域以外的单元格。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-738">Cells outside the scroll area cannot be selected.</span></span>  
  
 <span data-ttu-id="fdc2b-739">将此属性设置为空字符串 ("") 以允许单元格选定整个工作表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-739">Set this property to an empty string ("") to enable cell selection for the entire sheet.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-740">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ScrollArea%2A>属性从 A1 到 Z100 将当前工作表的滚动区域设置为单元格的范围。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-740">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ScrollArea%2A> property to set the scroll area of the current worksheet to the range of cells from A1 to Z100.</span></span>  
  
 <span data-ttu-id="fdc2b-741">此示例适用于</span><span class="sxs-lookup"><span data-stu-id="fdc2b-741">This example is for</span></span>  
  
 <span data-ttu-id="fdc2b-742">文档级自定义项。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-742">a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#34](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#34)]
 [!code-vb[Trin_ExcelWorkSheet#34](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ScrollBars(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.ScrollBars(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(object replace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Select(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="replace">
          <span data-ttu-id="fdc2b-743">如果设置为 <see langword="true" />，则移除当前选择并转为选择该工作表；如果设置为 <see langword="false" />，则扩展当前选定内容以包括任何之前选定的对象和该工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-743">
              <see langword="true" /> to remove the current selection and select the worksheet instead; <see langword="false" /> to extend the current selection to include any previously selected objects and the worksheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-744">选择工作表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-744">Selects the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-745">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-745">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-746">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-746">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-747">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Select%2A>方法来选择`Sheet1`，然后将其扩展以包含所选内容并`Sheet2`和`Sheet3`。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-747">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Select%2A> method to select `Sheet1`, and then extends the selection to include `Sheet2` and `Sheet3`.</span></span>  
  
 <span data-ttu-id="fdc2b-748">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-748">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#113](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#113)]
 [!code-vb[Trin_ExcelWorkSheet#113](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#113)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChange">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler SelectionChange;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler SelectionChange" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.SelectionChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-749">在工作表上的所选内容发生更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-749">Occurs when the selection changes on a worksheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-750">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.WorksheetBase.SelectionChange>状态栏中显示的工作表名称和所选范围的地址的事件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-750">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.SelectionChange> event that displays the sheet name and address of the selected range in the status bar.</span></span>  
  
 <span data-ttu-id="fdc2b-751">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-751">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#208](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#208)]
 [!code-vb[Trin_ExcelWorkSheet#208](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#208)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackgroundPicture(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.SetBackgroundPicture(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="fdc2b-752">图形文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-752">The name of the graphic file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-753">设置工作表的背景图形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-753">Sets the background graphic for the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-754">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.SetBackgroundPicture%2A>方法将工作表的背景图像设置为一个名为 image1.jpg 文件。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-754">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.SetBackgroundPicture%2A> method to set the background image of the worksheet to a file named image1.jpg.</span></span>  
  
 <span data-ttu-id="fdc2b-755">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-755">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#114](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#114)]
 [!code-vb[Trin_ExcelWorkSheet#114](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#114)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Shapes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-756">获取一个表示工作表上的所有形状的 <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-756">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-757">一个表示工作表上的所有形状的 <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-757">A <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-758">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Shapes%2A>属性将圆环图形状添加到当前工作表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-758">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Shapes%2A> property to add a doughnut shape to the current worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-759">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-759">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#33](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#33)]
 [!code-vb[Trin_ExcelWorkSheet#33](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllData">
      <MemberSignature Language="C#" Value="public void ShowAllData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowAllData() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.ShowAllData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-760">使当前经过筛选的列表的所有行可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-760">Makes all rows of the currently filtered list visible.</span>
          </span>
          <span data-ttu-id="fdc2b-761">如果正在使用自动筛选，则此方法会将箭头更改为“所有”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-761">If AutoFilter is in use, this method changes the arrows to "All."</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDataForm">
      <MemberSignature Language="C#" Value="public void ShowDataForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowDataForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.ShowDataForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-762">显示与工作表关联的数据窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-762">Displays the data form associated with the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-763">使用数据窗体时，将暂停执行。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-763">Execution pauses while you use the data form.</span></span> <span data-ttu-id="fdc2b-764">在之后的行数据窗体关闭时，恢复执行<xref:Microsoft.Office.Tools.Excel.WorksheetBase.ShowDataForm%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-764">When you close the data form, execution resumes at the line following the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.ShowDataForm%2A> method.</span></span>  
  
 <span data-ttu-id="fdc2b-765">如果存在，则此方法运行自定义数据窗体。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-765">This method runs the custom data form, if one exists.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public event EventHandler Shutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Shutdown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.Shutdown" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-766">在工作表宿主项关闭时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-766">Occurs when the worksheet host item shuts down.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-767">这是要在中调用的最后一个事件<xref:Microsoft.Office.Tools.Excel.WorksheetBase>声明为类<xref:Microsoft.Office.Tools.Excel.WorksheetBase>类卸载。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-767">This is the last event to be called in the <xref:Microsoft.Office.Tools.Excel.WorksheetBase> class as the <xref:Microsoft.Office.Tools.Excel.WorksheetBase> class unloads.</span></span> <span data-ttu-id="fdc2b-768">使用此事件的任何其他清理过程。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-768">Use this event for any additional clean up.</span></span>  
  
 <span data-ttu-id="fdc2b-769">文档级自定义项，该程序集的应用程序域卸载时工作表宿主项关闭。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-769">In a document-level customization, the application domain for the assembly unloads when the worksheet host item shuts down.</span></span>  
  
 <span data-ttu-id="fdc2b-770">在应用程序级外接程序，应用程序域不会卸载时工作表宿主项关闭。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-770">In an application-level add-in, the application domain does not unload when the worksheet host item shuts down.</span></span> <span data-ttu-id="fdc2b-771">此外，基础的工作表对象将不再可用。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-771">Also, the underlying worksheet object is no more available.</span></span> <span data-ttu-id="fdc2b-772">若要访问该工作表关闭使用之前<xref:Microsoft.Office.Tools.Excel.Workbook.BeforeClose>相反。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-772">To access the worksheet before it shuts down use <xref:Microsoft.Office.Tools.Excel.Workbook.BeforeClose> instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-773">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Shutdown>显示一条消息的事件时<xref:Microsoft.Office.Tools.Excel.WorksheetBase>类卸载。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-773">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Shutdown> event that displays a message when the <xref:Microsoft.Office.Tools.Excel.WorksheetBase> class unloads.</span></span>  
  
 <span data-ttu-id="fdc2b-774">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-774">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#209](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#209)]
 [!code-vb[Trin_ExcelWorkSheet#209](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#209)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.SmartTags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sort Sort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sort Sort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Sort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-775">获取当前工作表中经过排序的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-775">Gets the sorted values in the current worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-776">当前工作表中经过排序的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-776">The sorted values in the current worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-777">下面的代码示例填充的范围标头和员工名称在当前工作表中。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-777">The following code example fills a range in the current worksheet with a header and employee names.</span></span> <span data-ttu-id="fdc2b-778">接下来，该示例访问<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Sort%2A>包括要作为排序依据的列范围和排序顺序的工作表并设置属性的属性。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-778">Next, the example accesses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Sort%2A> property of the worksheet and sets properties that include the column range to sort by and the sorting order.</span></span> <span data-ttu-id="fdc2b-779">最后，该代码调用`Microsoft.Office.Interop.Excel.Sort.Apply`方法指定的工作表数据进行排序。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-779">Finally, the code calls the `Microsoft.Office.Interop.Excel.Sort.Apply` method to sort the specified worksheet data.</span></span> <span data-ttu-id="fdc2b-780">当您运行此代码时，员工数据将以升序基于雇员的名字进行排序。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-780">When you run this code, the employee data will be sorted in ascending order based on the employee first name.</span></span>  
  
 <span data-ttu-id="fdc2b-781">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-781">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_Excelworkbook_Additional#31](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/Sheet3.cs#31)]
 [!code-vb[Trin_Excelworkbook_Additional#31](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/Sheet3.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Spinners(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Spinners(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardHeight">
      <MemberSignature Language="C#" Value="public double StandardHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.StandardHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-782">获取工作表中所有行的标准（默认）高度（以磅为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-782">Gets the standard (default) height of all the rows in the worksheet, in points.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-783">工作表中所有行的标准（默认）高度（以磅为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-783">The standard (default) height of all the rows in the worksheet, in points.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-784">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.StandardHeight%2A>属性来显示当前工作表中的所有行的默认高度。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-784">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.StandardHeight%2A> property to display the default height of all the rows in the current worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-785">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-785">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#36](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#36)]
 [!code-vb[Trin_ExcelWorkSheet#36](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardWidth">
      <MemberSignature Language="C#" Value="public double StandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.StandardWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-786">获取或设置工作表中所有列的标准（默认）宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-786">Gets or sets the standard (default) width of all the columns in the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-787">工作表中所有列的标准（默认）宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-787">The standard (default) width of all the columns in the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-788">正文样式中的一个字符的宽度相等列宽度的一个单元。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-788">One unit of column width is equal to the width of one character in the Normal style.</span></span> <span data-ttu-id="fdc2b-789">对于非等宽字体，使用 0 （零） 的字符的宽度。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-789">For proportional fonts, the width of the character 0 (zero) is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-790">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.StandardWidth%2A>属性来显示当前工作表中的所有列的默认宽度。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-790">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.StandardWidth%2A> property to display the default width of all the columns in the current worksheet.</span></span>  
  
 <span data-ttu-id="fdc2b-791">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-791">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#37](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#37)]
 [!code-vb[Trin_ExcelWorkSheet#37](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public event EventHandler Startup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Startup" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.WorksheetBase.Startup" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Tab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-792">获取工作表的一个 <see cref="T:Microsoft.Office.Interop.Excel.Tab" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-792">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> for the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-793">工作表的一个 <see cref="T:Microsoft.Office.Interop.Excel.Tab" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-793">A <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> for the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-794">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Tab%2A>属性设置为蓝色的工作表的选项卡的主颜色。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-794">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Tab%2A> property to set the primary color of the worksheet's tab to blue.</span></span>  
  
 <span data-ttu-id="fdc2b-795">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-795">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#38](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#38)]
 [!code-vb[Trin_ExcelWorkSheet#38](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-796">获取或设置包含有关工作表的数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-796">Gets or sets the object that contains data about the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-797">包含有关工作表的数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-797">An object that contains data about the worksheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-798">一个常见用途<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Tag%2A>属性是用于存储与工作表密切关联的数据。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-798">A common use for the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Tag%2A> property is to store data that is closely associated with the worksheet.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object TextBoxes(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.TextBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionExpEval">
      <MemberSignature Language="C#" Value="public bool TransitionExpEval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionExpEval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.TransitionExpEval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-799">获取或设置一个值，该值指示 Microsoft Office Excel 是否对工作表使用 Lotus 1-2-3 表达式计算规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-799">Gets or sets a value that indicates whether Microsoft Office Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-800">如果 Excel 对工作表使用 Lotus 1-2-3 表达式计算规则，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-800">
              <see langword="true" /> if Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-801">执行相同的功能**转换输入公式**选项卡上**过渡**选项卡**选项**对话框。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-801">Performs the same function as the **Transition formula entry** option on the **Transition** tab of the **Options** dialog box.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionFormEntry">
      <MemberSignature Language="C#" Value="public bool TransitionFormEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionFormEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.TransitionFormEntry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-802">获取或设置一个值，该值指示 Microsoft Office Excel 是否对工作表使用 Lotus 1-2-3 公式规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-802">Gets or sets a value that indicates whether Microsoft Office Excel uses Lotus 1-2-3 formula entry rules for the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-803">如果 Excel 对工作表使用 Lotus 1-2-3 公式规则，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-803">
              <see langword="true" /> if Excel uses Lotus 1-2-3 formula entry rules for the worksheet; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-804">获取工作表类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-804">Gets the worksheet type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-805">
            <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-805">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-806">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Type%2A>属性来显示当前工作表是工作表、 对话表，还是一个消息框中的图表。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-806">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Type%2A> property to display whether the current worksheet is a worksheet, a dialog sheet, or a chart in a message box.</span></span>  
  
 <span data-ttu-id="fdc2b-807">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-807">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#40](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#40)]
 [!code-vb[Trin_ExcelWorkSheet#40](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#40)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unprotect(object password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.Unprotect(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="fdc2b-808">用于取消保护工作表的密码，区分大小写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-808">The case-sensitive password to use to unprotect the worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-809">如果工作表未使用密码保护，则忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-809">If the worksheet is not protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="fdc2b-810">如果对有密码保护的工作表忽略此参数，则将提示您输入密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-810">If you omit this argument for a worksheet that is protected with a password, you will be prompted for the password.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-811">移除对工作表的保护。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-811">Removes protection from the worksheet.</span>
          </span>
          <span data-ttu-id="fdc2b-812">此方法在工作表不受保护时无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-812">This method has no effect if the worksheet is not protected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-813">如果忘记密码，则无法取消对工作表的保护。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-813">If you forget the password, you cannot unprotect the worksheet.</span></span> <span data-ttu-id="fdc2b-814">最好将密码及其对应文档名的列表保存在安全的位置。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-814">It is a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-815">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-815">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-816">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-816">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-817">下面的代码示例确定当前的工作表的单元格内容是否受保护。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-817">The following code example determines whether the cell contents of the current worksheet are protected.</span></span> <span data-ttu-id="fdc2b-818">如果单元格内容受到保护，则该示例会提示用户取消单元格内容保护使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Unprotect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-818">If the cell contents are protected, then the example prompts the user to unprotect the cell contents by using the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Unprotect%2A> method.</span></span>  
  
 <span data-ttu-id="fdc2b-819">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-819">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#115](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#115)]
 [!code-vb[Trin_ExcelWorkSheet#115](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range UsedRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range UsedRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.UsedRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-820">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，该对象表示在任何时候都包含值的所有单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-820">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells that have contained a value at any time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-821">一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，表示在任何时候都包含值的所有单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-821">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells that have contained a value at any time.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-822">使用的范围包括曾经使用任何单元格。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-822">A used range includes any cell that has ever been used.</span></span> <span data-ttu-id="fdc2b-823">例如，如果单元格**A1**包含一个值，然后删除值，则单元格**A1**被视为使用。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-823">For example, if cell **A1** contains a value, and then you delete the value, then cell **A1** is considered used.</span></span> <span data-ttu-id="fdc2b-824">在这种情况下，<xref:Microsoft.Office.Tools.Excel.WorksheetBase.UsedRange%2A>属性将返回一系列，包括单元格**A1**。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-824">In this case, the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.UsedRange%2A> property will return a range that includes cell **A1**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-825">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.UsedRange%2A>属性选择的范围使用的工作表上的单元格。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-825">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.UsedRange%2A> property to select the range of used cells on a worksheet.</span></span> <span data-ttu-id="fdc2b-826">该示例首先设置单元格的范围从 A1 到 C3 为 23 的值在当前工作表上。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-826">The example first sets the range of cells from A1 to C3 on the current worksheet to the value 23.</span></span> <span data-ttu-id="fdc2b-827">如果工作表可见，则该示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.UsedRange%2A>属性来选择<xref:Microsoft.Office.Interop.Excel.Range?displayProperty=fullName>使用的单元格。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-827">If the worksheet is visible, then the example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.UsedRange%2A> property to select the <xref:Microsoft.Office.Interop.Excel.Range?displayProperty=fullName> of used cells.</span></span>  
  
 <span data-ttu-id="fdc2b-828">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-828">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#41](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#41)]
 [!code-vb[Trin_ExcelWorkSheet#41](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-829">获取或设置一个 <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" /> 值，该值确定该对象是否可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-829">Gets or sets a <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" /> value that determines whether the object is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-830">
            <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-830">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-831">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Visible%2A>属性以帮助选择的范围使用的工作表上的单元格。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-831">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Visible%2A> property to help select the range of used cells on a worksheet.</span></span> <span data-ttu-id="fdc2b-832">该示例首先设置单元格的范围从 A1 到 C3 为 23 的值在当前工作表上。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-832">The example first sets the range of cells from A1 to C3 on the current worksheet to the value 23.</span></span> <span data-ttu-id="fdc2b-833">如果<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Visible%2A>属性指示工作表可见，则该示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.UsedRange%2A>属性来选择<xref:Microsoft.Office.Interop.Excel.Range?displayProperty=fullName>使用的单元格。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-833">If the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.Visible%2A> property indicates that the worksheet is visible, then the example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.UsedRange%2A> property to select the <xref:Microsoft.Office.Interop.Excel.Range?displayProperty=fullName> of used cells.</span></span>  
  
 <span data-ttu-id="fdc2b-834">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-834">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#41](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#41)]
 [!code-vb[Trin_ExcelWorkSheet#41](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.WorksheetBase.VPageBreaks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fdc2b-835">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> 集合，该集合表示表上的垂直分页符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-835">Gets a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fdc2b-836">一个 <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> 集合，表示表上的垂直分页符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-836">A <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fdc2b-837">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.VPageBreaks%2A>属性在单元格 C5 添加垂直分页符。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-837">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.VPageBreaks%2A> property to add a vertical page break at cell C5.</span></span>  
  
 <span data-ttu-id="fdc2b-838">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-838">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#14](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#14)]
 [!code-vb[Trin_ExcelWorkSheet#14](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDataQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlDataQuery (string xPath, object selectionNamespaces, object map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Office.Interop.Excel.Range XmlDataQuery(string xPath, object selectionNamespaces, object map) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.XmlDataQuery(System.String,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xPath" Type="System.String" />
        <Parameter Name="selectionNamespaces" Type="System.Object" />
        <Parameter Name="map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="xPath">
          <span data-ttu-id="fdc2b-839">要查询的 XPath。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-839">The XPath to query for.</span>
          </span>
        </param>
        <param name="selectionNamespaces">
          <span data-ttu-id="fdc2b-840">一个以空格分隔的字符串，其中包含在 XPath 参数中引用的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-840">A space-delimited string that contains the namespaces referenced in the XPath parameter.</span>
          </span>
          <span data-ttu-id="fdc2b-841">如果无法解析指定的命名空间之一，则产生运行时错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-841">A run-time error is generated if one of the specified namespaces cannot be resolved.</span>
          </span>
        </param>
        <param name="map">
          <span data-ttu-id="fdc2b-842">一个 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-842">An <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="fdc2b-843">如果要在特定映射中查询 XPath，请指定 XML 映射。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-843">Specify an XML map if you want to query for the XPath within a specific map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-844">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，该对象表示映射到特定 XPath 的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-844">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span>
          </span>
          <span data-ttu-id="fdc2b-845">如果指定的 XPath 未映射到工作表，或者如果映射的范围为空，则获取 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-845">Gets <see langword="null" /> if the specified XPath has not been mapped to the worksheet, or if the mapped range is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdc2b-846">一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，表示映射到特定 XPath 的单元格；如果指定的 XPath 未映射到工作表，或者如果映射的范围为空，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-846">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath; <see langword="null" /> if the specified XPath has not been mapped to the worksheet, or if the mapped range is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-847">仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用的 XML 功能，除了将文件保存 XML 电子表格格式。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-847">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span>  
  
 <span data-ttu-id="fdc2b-848">如果在 XML 列表中的列中存在 XPath<xref:Microsoft.Office.Interop.Excel.Range>返回的对象不包含标头行或插入行。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-848">If the XPath exists within a column in an XML list, the <xref:Microsoft.Office.Interop.Excel.Range> object returned does not include the header row or the Insert row.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-849">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-849">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-850">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-850">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-851">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.XmlDataQuery%2A>方法以获取<xref:Microsoft.Office.Interop.Excel.Range>映射到特定 XPath 的单元格。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-851">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.XmlDataQuery%2A> method to get the <xref:Microsoft.Office.Interop.Excel.Range> of cells mapped to a particular XPath.</span></span>  
  
 <span data-ttu-id="fdc2b-852">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-852">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#116](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#116)]
 [!code-vb[Trin_ExcelWorkSheet#116](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#116)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMapQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlMapQuery (string xPath, object selectionNamespaces, object map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Office.Interop.Excel.Range XmlMapQuery(string xPath, object selectionNamespaces, object map) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.WorksheetBase.XmlMapQuery(System.String,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xPath" Type="System.String" />
        <Parameter Name="selectionNamespaces" Type="System.Object" />
        <Parameter Name="map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="xPath">
          <span data-ttu-id="fdc2b-853">要查询的 XPath。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-853">The XPath to query for.</span>
          </span>
        </param>
        <param name="selectionNamespaces">
          <span data-ttu-id="fdc2b-854">一个以空格分隔的字符串，其中包含在 XPath 参数中引用的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-854">A space-delimited string that contains the namespaces referenced in the XPath parameter.</span>
          </span>
          <span data-ttu-id="fdc2b-855">如果无法解析指定的命名空间之一，则产生运行时错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-855">A run-time error is generated if one of the specified namespaces cannot be resolved.</span>
          </span>
        </param>
        <param name="map">
          <span data-ttu-id="fdc2b-856">一个 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-856">An <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="fdc2b-857">如果要在特定映射中查询 XPath，请指定 XML 映射。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-857">Specify an XML map if you want to query for the XPath within a specific map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fdc2b-858">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，该对象表示映射到特定 XPath 的单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-858">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span>
          </span>
          <span data-ttu-id="fdc2b-859">如果指定的 XPath 未映射到工作表，则获取 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-859">Gets <see langword="null" /> if the specified XPath has not been mapped to the worksheet.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fdc2b-860">一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 对象，表示映射到特定 XPath 的单元格；如果指定的 XPath 未映射到工作表，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fdc2b-860">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath; <see langword="null" /> if the specified XPath has not been mapped to the worksheet.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdc2b-861">仅在 Microsoft Office Professional Edition 2003 和 Microsoft Office Excel 2003 中可用的 XML 功能，除了将文件保存 XML 电子表格格式。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-861">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span>  
  
 <span data-ttu-id="fdc2b-862">与不同<xref:Microsoft.Office.Tools.Excel.WorksheetBase.XmlDataQuery%2A>方法，<xref:Microsoft.Office.Tools.Excel.WorksheetBase.XmlMapQuery%2A>方法返回的 XML 列表，包括标题行和插入行的整个列。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-862">Unlike the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.XmlDataQuery%2A> method, the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.XmlMapQuery%2A> method returns the entire column of an XML list, including the header row and the Insert row.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="fdc2b-863">可选参数</span><span class="sxs-lookup"><span data-stu-id="fdc2b-863">Optional Parameters</span></span>  
 <span data-ttu-id="fdc2b-864">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-864">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdc2b-865">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.WorksheetBase.XmlMapQuery%2A>方法以获取<xref:Microsoft.Office.Interop.Excel.Range>映射到特定 XPath 的单元格。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-865">The following code example uses the <xref:Microsoft.Office.Tools.Excel.WorksheetBase.XmlMapQuery%2A> method to get the <xref:Microsoft.Office.Interop.Excel.Range> of cells mapped to a particular XPath.</span></span>  
  
 <span data-ttu-id="fdc2b-866">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="fdc2b-866">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkSheet#117](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/CS/Trin_ExcelWorkSheet.cs#117)]
 [!code-vb[Trin_ExcelWorkSheet#117](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelWorkSheet/VB/Sheet1.vb#117)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>