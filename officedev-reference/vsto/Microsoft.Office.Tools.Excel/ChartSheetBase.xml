<Type Name="ChartSheetBase" FullName="Microsoft.Office.Tools.Excel.ChartSheetBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="617b3e84049e6e534d646afb6f4ab13383cf62e2" />
    <Meta Name="ms.sourcegitcommit" Value="66ccc1ab172558cdfd2b9ffb616a60e4c9105be3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/19/2018" />
    <Meta Name="ms.locfileid" Value="46459843" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ChartSheetBase : IDisposable, Microsoft.Office.Tools.Excel.IChartSheetExtension, System.ComponentModel.IComponent, System.ComponentModel.ISupportInitialize, System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChartSheetBase extends System.Object implements class Microsoft.Office.Tools.EntryPoint, class Microsoft.Office.Tools.Excel.IChartSheetExtension, class Microsoft.Office.Tools.IExtension, class System.ComponentModel.IComponent, class System.ComponentModel.ISupportInitialize, class System.IDisposable, class System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Tools.Excel.IChartSheetExtension</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IBindableComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供 Microsoft Office Excel 的文档级 Office 项目中图表工作表宿主项的基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ChartSheetBase>类是图表工作表的基类*宿主项*使用 Visual Studio 创建的文档级 Office 项目中。  
  
 图表工作表是只包含一个图表工作表。 如果你想要创建嵌入的图表中的工作表还包含其他项，例如单元或其他控件，创建<xref:Microsoft.Office.Tools.Excel.Chart>相反。  
  
 <xref:Microsoft.Office.Tools.Excel.ChartSheetBase>类提供了与图表相关的所有功能本机<xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName>Excel 主互操作程序集中的对象。 但是，<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>还公开了事件。  
  
## <a name="usage"></a>用法  
 [!INCLUDE[vsto_net4utilities](~/includes/vsto-net4utilities-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChartSheetBase (Microsoft.Office.Tools.Excel.Factory factory, IServiceProvider serviceProvider, string primaryCookie, string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.Office.Tools.Excel.Factory factory, class System.IServiceProvider serviceProvider, string primaryCookie, string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.#ctor(Microsoft.Office.Tools.Excel.Factory,System.IServiceProvider,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Office.Tools.Excel.Factory" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="primaryCookie" Type="System.String" />
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <param name="serviceProvider">To be added.</param>
        <param name="primaryCookie">To be added.</param>
        <param name="identifier">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase._CodeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Activate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使当前 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 成为活动图表。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateEvent">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler ActivateEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler ActivateEvent" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.ActivateEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当激活 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ActivateEvent>事件显示一条消息框时当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>激活。  
  
 [!code-csharp[Trin_ExcelChartSheet#200](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#200)]
 [!code-vb[Trin_ExcelChartSheet#200](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#200)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Application" />，它表示 Microsoft Office Excel 应用程序。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.Application" />，表示 Microsoft Office Excel 应用程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Application%2A>属性与当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>要在消息框中显示的应用程序名称。  
  
 [!code-csharp[Trin_ExcelChartSheet#1](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#1)]
 [!code-vb[Trin_ExcelChartSheet#1](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyChartTemplate">
      <MemberSignature Language="C#" Value="public void ApplyChartTemplate (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyChartTemplate(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ApplyChartTemplate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">图表模板的文件名。</param>
        <summary>将标准或自定义图表模板应用于图表。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCustomType">
      <MemberSignature Language="C#" Value="public void ApplyCustomType (Microsoft.Office.Interop.Excel.XlChartType chartType, object typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyCustomType(valuetype Microsoft.Office.Interop.Excel.XlChartType chartType, object typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chartType" Type="Microsoft.Office.Interop.Excel.XlChartType" />
        <Parameter Name="typeName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="chartType">To be added.</param>
        <param name="typeName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDataLabels">
      <MemberSignature Language="C#" Value="public void ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType type, object legendKey, object autoText, object hasLeaderLines, object showSeriesName, object showCategoryName, object showValue, object showPercentage, object showBubbleSize, object separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyDataLabels(valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType type, object legendKey, object autoText, object hasLeaderLines, object showSeriesName, object showCategoryName, object showValue, object showPercentage, object showBubbleSize, object separator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="legendKey" Type="System.Object" />
        <Parameter Name="autoText" Type="System.Object" />
        <Parameter Name="hasLeaderLines" Type="System.Object" />
        <Parameter Name="showSeriesName" Type="System.Object" />
        <Parameter Name="showCategoryName" Type="System.Object" />
        <Parameter Name="showValue" Type="System.Object" />
        <Parameter Name="showPercentage" Type="System.Object" />
        <Parameter Name="showBubbleSize" Type="System.Object" />
        <Parameter Name="separator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">要应用的数据标签的类型。</param>
        <param name="legendKey">为 <see langword="true" /> 时，在点旁边显示图例项标示。 默认值为 <see langword="false" />。</param>
        <param name="autoText">如果对象自动根据内容生成适当的文本，则为 <see langword="true" />。</param>
        <param name="hasLeaderLines">对于 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 和 <see cref="T:Microsoft.Office.Interop.Excel.Series" /> 对象而言，如果系列包含引导线，则为 <see langword="true" />。</param>
        <param name="showSeriesName">数据标签的系列名称。</param>
        <param name="showCategoryName">数据标签的类别名称。</param>
        <param name="showValue">数据标签的值。</param>
        <param name="showPercentage">数据标签的百分比。</param>
        <param name="showBubbleSize">数据标签的气泡大小。</param>
        <param name="separator">数据标签的分隔符。</param>
        <summary>将数据标签应用于 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中的点、系列或所有系列。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ApplyDataLabels%2A>方法在当前显示的数据值<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#101](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#101)]
 [!code-vb[Trin_ExcelChartSheet#101](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyLayout">
      <MemberSignature Language="C#" Value="public void ApplyLayout (int layout, object chartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyLayout(int32 layout, object chartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ApplyLayout(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layout" Type="System.Int32" />
        <Parameter Name="chartType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="layout">1 到 10 之间的一个整数，用于指定要应用于图表的布局的类型。</param>
        <param name="chartType">
          <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> 值之一。</param>
        <summary>将指定的布局应用于图表。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值`Layout`上的参数对应于可用的选项**图表布局**组**设计**功能区上的选项卡。 **设计**时您选择一个图表，选项卡才可用。  
  
 图表的每个类型都有其自己的布局选项集。 例如，饼图的布局选项是不同于柱形图的布局选项。 如果你想要从不同的图表类型来应用布局，则可以使用`ChartType`参数来指定图表键入`Layout`参数引用。 例如，如果有一个柱形图和你想要从折线图应用布局，则传递<xref:Microsoft.Office.Interop.Excel.XlChartType.xlLine?displayProperty=fullName>值设为`ChartType`参数。 布局仅添加适用于该特定图表类型的图表元素。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例应用适用于图表工作表中的图表的图表类型的第十个布局`Chart1`。 此外，该示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetElement%2A>方法应用更多布局更改： 将图表标题为居中且位于图表网格区域内的样式设置、 添加水平轴的标题以及添加垂直轴的旋转的标题。 若要运行此代码示例，您的工作簿必须包含聚集的列二维图表工作表名为`Chart1`。  
  
 [!code-csharp[Trin_ExcelWorkBook_Additional#18](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#18)]
 [!code-vb[Trin_ExcelWorkBook_Additional#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Arcs(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Arcs(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Area3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Area3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreaGroups">
      <MemberSignature Language="C#" Value="public object AreaGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object AreaGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.AreaGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public void AutoFormat (int gallery, object format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoFormat(int32 gallery, object format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.AutoFormat(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gallery" Type="System.Int32" />
        <Parameter Name="format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="gallery">To be added.</param>
        <param name="format">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaling">
      <MemberSignature Language="C#" Value="public bool AutoScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScaling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.AutoScaling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 Microsoft Office Excel 是否缩放三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 以使其大小更接近于等效的二维图表的大小</summary>
        <value>如果 Microsoft Office Excel 缩放三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 以使其大小更接近于等效的二维图表的大小，则为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.RightAngleAxes%2A> 属性必须为 `true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Axes">
      <MemberSignature Language="C#" Value="public object Axes (object type, Microsoft.Office.Interop.Excel.XlAxisGroup axisGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Axes(object type, valuetype Microsoft.Office.Interop.Excel.XlAxisGroup axisGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Axes(System.Object,Microsoft.Office.Interop.Excel.XlAxisGroup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" />
        <Parameter Name="axisGroup" Type="Microsoft.Office.Interop.Excel.XlAxisGroup" />
      </Parameters>
      <Docs>
        <param name="type">指定要返回的轴。 可以为以下 <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlValue" />、<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" />（<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" /> 只对三维图表有效）。</param>
        <param name="axisGroup">指定轴组。 如果省略此参数，则使用主轴组。 三维图表只有一个轴组。</param>
        <summary>获取一个对象，该对象表示图表上的一个轴或一个轴集合。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Axes%2A>方法设置的当前主坐标轴标题<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#103](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#103)]
 [!code-vb[Trin_ExcelChartSheet#103](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls BackWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls BackWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.BackWall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象表示三维图表的背面墙。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，表示三维图表的背面墙。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.BackWall%2A>属性来设置格式的三维图表的背面墙。  
  
   
  
## Examples  
 下面的代码示例指定墙壁和现有的三维图表工作表的最底层的颜色并设置图表样式为样式 4。 若要运行此代码示例，该工作簿必须包含名为图表工作表`Chart1`的三维类型。  
  
 [!code-csharp[Trin_ExcelWorkbook_Additional#38](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#38)]
 [!code-vb[Trin_ExcelWorkbook_Additional#38](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bar3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Bar3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarGroups">
      <MemberSignature Language="C#" Value="public object BarGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object BarGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.BarGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlBarShape BarShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlBarShape BarShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.BarShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlBarShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于三维条形或柱形 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的形状。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.BarShape%2A>属性与当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>条形显示为柱状。  
  
 [!code-csharp[Trin_ExcelChartSheet#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#4)]
 [!code-vb[Trin_ExcelChartSheet#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Base">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Excel.ChartSheet Base { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Excel.ChartSheet Base" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Base" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.ChartSheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 对象扩展的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 对象。</summary>
        <value>此 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 对象扩展的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ChartSheetBase>类用于扩展<xref:Microsoft.Office.Tools.Excel.ChartSheet>通过实现对象<xref:Microsoft.Office.Tools.Excel.IChartSheetExtension>接口。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeDoubleClick">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler BeforeDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler BeforeDoubleClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.BeforeDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在双击 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 时，但在默认双击操作之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Interop.Excel._Application.DoubleClick%2A>方法不会导致发生此事件。  
  
   
  
## Examples  
 下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.BeforeDoubleClick>显示当前的消息框时轴的事件<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>双击。 该示例还设置`Cancel`参数的事件处理程序`true`，以便图表工作表不会接收的双击操作，当用户双击轴。  
  
 [!code-csharp[Trin_ExcelChartSheet#201](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#201)]
 [!code-vb[Trin_ExcelChartSheet#201](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#201)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeRightClick">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler BeforeRightClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler BeforeRightClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.BeforeRightClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在右击 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 时，但在默认右击操作之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.BeforeRightClick>事件显示一条消息框时当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>右键单击。 该示例还设置`Cancel`参数的事件处理程序`true`，以便图表工作表不会接收右键单击操作。  
  
 [!code-csharp[Trin_ExcelChartSheet#202](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#202)]
 [!code-vb[Trin_ExcelChartSheet#202](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#202)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public virtual void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContext">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingContext BindingContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingContext BindingContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.BindingContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.BindingContextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Buttons(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Buttons(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler Calculate;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler Calculate" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.Calculate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 绘制新的或更改的数据后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Calculate>事件显示一条消息框时源数据的当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>更改。  
  
 [!code-csharp[Trin_ExcelChartSheet#203](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#203)]
 [!code-vb[Trin_ExcelChartSheet#203](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#203)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartArea ChartArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartArea ChartArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" />，它表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的完整图表区域。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的完整图表区域。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartArea%2A>属性与当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>要修改的权重和图表区域边框的颜色。  
  
 [!code-csharp[Trin_ExcelChartSheet#5](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#5)]
 [!code-vb[Trin_ExcelChartSheet#5](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartGroups">
      <MemberSignature Language="C#" Value="public object ChartGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ChartGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">图表组编号。</param>
        <summary>获取一个对象，该对象表示单个图表组（<see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> 对象）或图表中所有图表组的集合（<see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> 对象）。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的集合包括所有类型的组。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartGroups%2A>方法以设置当前的条之间的距离<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#105](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#105)]
 [!code-vb[Trin_ExcelChartSheet#105](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ChartObjects(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的名称或编号。 此参数可以是一个数组，以指定多个图表。</param>
        <summary>获取一个对象，该对象表示工作表上的单个嵌入式图表（<see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> 对象）或所有嵌入式图表的集合（<see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> 对象）。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不是等效于<xref:Microsoft.Office.Interop.Excel._Workbook.Charts%2A>属性。 此方法返回嵌入式的图表;<xref:Microsoft.Office.Interop.Excel._Workbook.Charts%2A>属性返回图表工作表。 使用<xref:Microsoft.Office.Interop.Excel.ChartObject.Chart%2A>属性以返回<xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName>嵌入式图表的对象。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartObjects%2A>方法来显示是否由 Microsoft Office Excel 创建的嵌入式图表的集合。  
  
 [!code-csharp[Trin_ExcelChartSheet#106](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#106)]
 [!code-vb[Trin_ExcelChartSheet#106](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartStyle">
      <MemberSignature Language="C#" Value="public object ChartStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChartStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图表的样式。</summary>
        <value>1 到 48 之间的一个整数，用于表示图表的样式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartStyle%2A>上的属性对应于可用的选项**图表样式**组**设计**功能区上的选项卡。 **设计**时您选择一个图表，选项卡才可用。  
  
   
  
## Examples  
 下面的代码示例指定墙壁和现有的三维图表工作表的最底层的颜色并设置图表样式为样式 4。 若要运行此代码示例，该工作簿必须包含名为图表工作表`Chart1`的三维类型。  
  
 [!code-csharp[Trin_ExcelWorkbook_Additional#38](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#38)]
 [!code-vb[Trin_ExcelWorkbook_Additional#38](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartTitle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartTitle ChartTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartTitle ChartTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartTitle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" />，它表示指定 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的标题。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" />，表示指定 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的标题。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartTitle%2A>属性与当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>若要修改的标题的字体颜色。  
  
 [!code-csharp[Trin_ExcelChartSheet#6](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#6)]
 [!code-vb[Trin_ExcelChartSheet#6](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 类型。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 某些图表类型不可用于数据透视图报表。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartType%2A>属性设置的当前类型<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>到三维簇状条形图。  
  
 [!code-csharp[Trin_ExcelChartSheet#7](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#7)]
 [!code-vb[Trin_ExcelChartSheet#7](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartWizard">
      <MemberSignature Language="C#" Value="public void ChartWizard (object source, object gallery, object format, object plotBy, object categoryLabels, object seriesLabels, object hasLegend, object title, object categoryTitle, object valueTitle, object extraTitle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChartWizard(object source, object gallery, object format, object plotBy, object categoryLabels, object seriesLabels, object hasLegend, object title, object categoryTitle, object valueTitle, object extraTitle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="gallery" Type="System.Object" />
        <Parameter Name="format" Type="System.Object" />
        <Parameter Name="plotBy" Type="System.Object" />
        <Parameter Name="categoryLabels" Type="System.Object" />
        <Parameter Name="seriesLabels" Type="System.Object" />
        <Parameter Name="hasLegend" Type="System.Object" />
        <Parameter Name="title" Type="System.Object" />
        <Parameter Name="categoryTitle" Type="System.Object" />
        <Parameter Name="valueTitle" Type="System.Object" />
        <Parameter Name="extraTitle" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">包含新图表的源数据的范围。 如果省略此参数，则 Microsoft Office Excel 编辑活动图表工作表或在活动工作表上所选择的图表。</param>
        <param name="gallery">图表类型。</param>
        <param name="format">内置自动套用格式的选项编号。 可以是一个 1 到 10 之间的数（取决于库类型）。 如果省略此参数，则 Microsoft Office Excel 根据库类型和数据源选择默认值。</param>
        <param name="plotBy">指定每个系列的数据是按行绘制还是按列绘制。 可以是下列 <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" />。</param>
        <param name="categoryLabels">一个整数，指定源范围中包含类别标签的行数或列数。 合法值是从 0（零）到相应类别或系列的最大数减一。</param>
        <param name="seriesLabels">源范围中包含系列标签的行数或列数。 合法值是从 0（零）到相应类别或系列的最大数减一。</param>
        <param name="hasLegend">为 <see langword="true" /> 时包含图例。</param>
        <param name="title">图表标题文本。</param>
        <param name="categoryTitle">分类轴标题文本。</param>
        <param name="valueTitle">数值轴标题文本</param>
        <param name="extraTitle">三维图表的系列轴标题或二维图表的第二个数值轴标题。</param>
        <summary>修改给定 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用此方法来快速设置的格式<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>而无需设置所有单个属性。 此方法是非交互式的，它只更改指定的属性。  
  
 如果`Source`省略和所选内容不是嵌入的图表在活动工作表或活动工作表上不是现有图表，此方法将失败，出现错误。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartWizard%2A>方法以设置数据源和图表类型与当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#107](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#107)]
 [!code-vb[Trin_ExcelChartSheet#107](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CheckBoxes(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.CheckBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object customDictionary, object ignoreUppercase, object alwaysSuggest, object spellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSpelling(object customDictionary, object ignoreUppercase, object alwaysSuggest, object spellLang) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customDictionary" Type="System.Object" />
        <Parameter Name="ignoreUppercase" Type="System.Object" />
        <Parameter Name="alwaysSuggest" Type="System.Object" />
        <Parameter Name="spellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="customDictionary">一个字符串，指示未在主字典中找到单词时要检查的自定义字典的文件名。 如果省略此参数，则使用当前指定的字典。</param>
        <param name="ignoreUppercase">
          <see langword="true" /> 表示使 Microsoft Office Excel 忽略全部大写的单词。 为 <see langword="false" /> 可使 Microsoft Office Excel 检查全部大写的单词。 如果省略此参数，则使用当前设置。</param>
        <param name="alwaysSuggest">
          <see langword="true" /> 表示当发现不正确的拼写时让 Excel 显示建议的替换拼写列表。 如果为 <see langword="false" />，则使 Excel 等待您输入正确的拼写。 如果省略此参数，则使用当前设置。</param>
        <param name="spellLang">所使用的字典的语言。 可以为 <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> 属性使用的 <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> 值之一。</param>
        <summary>检查 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的拼写。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Microsoft Office Excel 显示“拼写检查”对话框  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.CheckSpelling%2A>方法来检查在当前拼写<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>使用美国英语字典。  
  
 [!code-csharp[Trin_ExcelChartSheet#108](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#108)]
 [!code-vb[Trin_ExcelChartSheet#108](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearToMatchStyle">
      <MemberSignature Language="C#" Value="public void ClearToMatchStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearToMatchStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ClearToMatchStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除格式设置为自动的图表元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于重置为自动格式设置的图表元素。 如果使用此方法时，所有格式设置 （包括重写） 将重置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.CodeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Column3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnGroups">
      <MemberSignature Language="C#" Value="public object ColumnGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ColumnGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ColumnGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object before, object after);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy(object before, object after) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Copy(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="before" Type="System.Object" />
        <Parameter Name="after" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="before">将在其之前放置复制表的表。 如果指定 <c>After</c>，则不能指定 <c>Before</c>。</param>
        <param name="after">将在其之后放置复制表的表。 如果指定 <c>Before</c>，则不能指定 <c>After</c>。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 复制到工作簿中的另一位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果未指定`Before`或`After`，Microsoft Office Excel 将创建包含复制表的表的新工作簿。  
  
## <a name="optional-parameters"></a>可选参数  
 新工作表是<xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName>，其中包含一个图表，不具有代码或数据绑定功能的<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>具有。  
  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Copy%2A>方法复制当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>到新工作表之前工作表位于`Sheet3`。  
  
 [!code-csharp[Trin_ExcelChartSheet#110](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#110)]
 [!code-vb[Trin_ExcelChartSheet#110](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyChartBuild">
      <MemberSignature Language="C#" Value="public void CopyChartBuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyChartBuild() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.CopyChartBuild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public void CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance appearance, Microsoft.Office.Interop.Excel.XlCopyPictureFormat format, Microsoft.Office.Interop.Excel.XlPictureAppearance size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyPicture(valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance appearance, valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat format, valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat,Microsoft.Office.Interop.Excel.XlPictureAppearance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
        <Parameter Name="size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
      </Parameters>
      <Docs>
        <param name="appearance">指定复制图片的方法。</param>
        <param name="format">该图片的格式。</param>
        <param name="size">对象为图表工作表上的图表（未嵌入在工作表上）上时复制的图片的大小。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 作为图片复制到剪贴板。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.CopyPicture%2A>方法复制当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>到剪贴板作为位图。  
  
 [!code-csharp[Trin_ExcelChartSheet#111](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#111)]
 [!code-vb[Trin_ExcelChartSheet#111](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#111)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Corners">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Corners Corners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Corners Corners" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Corners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Corners</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public void CreatePublisher (object edition, Microsoft.Office.Interop.Excel.XlPictureAppearance appearance, Microsoft.Office.Interop.Excel.XlPictureAppearance size, object containsPICT, object containsBIFF, object containsRTF, object containsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreatePublisher(object edition, valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance appearance, valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance size, object containsPICT, object containsBIFF, object containsRTF, object containsVALU) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edition" Type="System.Object" />
        <Parameter Name="appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="containsPICT" Type="System.Object" />
        <Parameter Name="containsBIFF" Type="System.Object" />
        <Parameter Name="containsRTF" Type="System.Object" />
        <Parameter Name="containsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="edition">To be added.</param>
        <param name="appearance">To be added.</param>
        <param name="size">To be added.</param>
        <param name="containsPICT">To be added.</param>
        <param name="containsBIFF">To be added.</param>
        <param name="containsRTF">To be added.</param>
        <param name="containsVALU">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 代码，该代码指示在其中创建 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的应用程序。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因为<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>创建在 Microsoft Office Excel，此属性返回字符串 XCEL，这与十六进制数 5843454c。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ControlBindingsCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ControlBindingsCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlBindingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataHost">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.ICachedDataProvider DataHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.ICachedDataProvider DataHost" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.DataHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.ICachedDataProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataTable DataTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataTable DataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.DataTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 数据表。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 数据表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.DataTable%2A>属性与当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>在带有边框边框图表中显示数据的表。  
  
 [!code-csharp[Trin_ExcelChartSheet#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#9)]
 [!code-vb[Trin_ExcelChartSheet#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler Deactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler Deactivate" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.Deactivate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在从 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 移走所选内容以使 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 停用时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Deactivate>事件显示一条消息框时当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>停用。  
  
 [!code-csharp[Trin_ExcelChartSheet#204](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#204)]
 [!code-vb[Trin_ExcelChartSheet#204](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#204)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Delete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>删除 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法删除基础<xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName>对象，但不会删除<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>主机项，因此，建议不要使用此方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthPercent">
      <MemberSignature Language="C#" Value="public int DepthPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DepthPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.DepthPercent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置三维图表的深度（以 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 宽度的百分比形式表示）。</summary>
        <value>三维图表的深度，以 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 宽度的百分比形式（介于 20% 到 2000% 之间）表示</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.DepthPercent%2A>属性设置当前的三维部分的深度<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>宽度的 75%到<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#10](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#10)]
 [!code-vb[Trin_ExcelChartSheet#10](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deselect">
      <MemberSignature Language="C#" Value="public void Deselect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Deselect() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Deselect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayBlanksAs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.DisplayBlanksAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayBlanksAs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上绘制空白单元格的方式。</summary>
        <value>以下 <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlNotPlotted" />、<see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlInterpolated" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlZero" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.DisplayBlanksAs%2A>属性指定的当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>不会绘制数据区域中的空白单元格。  
  
 [!code-csharp[Trin_ExcelChartSheet#11](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#11)]
 [!code-vb[Trin_ExcelChartSheet#11](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 类的当前实例所使用的所有资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不要调用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Dispose%2A>方法自己。 关闭文档级自定义项中的文档时，[!INCLUDE[vsto_runtime](~/includes/vsto-runtime-md.md)]清理使用自定义项的所有资源。  
  
 有关详细信息<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Dispose%2A>方法，请参阅[清理了非托管资源](http://msdn.microsoft.com/library/a17b0066-71c2-4ba4-9822-8e19332fc213)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.Disposed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoughnutGroups">
      <MemberSignature Language="C#" Value="public object DoughnutGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DoughnutGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.DoughnutGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DrawingObjects(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.DrawingObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Drawings(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Drawings(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DropDowns(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.DropDowns(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy24">
      <MemberSignature Language="C#" Value="public bool Dummy24 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy24" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Dummy24" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy25">
      <MemberSignature Language="C#" Value="public bool Dummy25 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy25" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Dummy25" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elevation">
      <MemberSignature Language="C#" Value="public int Elevation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Elevation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Elevation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的仰角（以度为单位）。</summary>
        <value>三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的仰角（以度为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Elevation%2A>属性来设置从其提升的当前视图<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>计算为 75 度。  
  
 [!code-csharp[Trin_ExcelChartSheet#12](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#12)]
 [!code-vb[Trin_ExcelChartSheet#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public virtual void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Evaluate(object name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Evaluate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">对象的名称（使用 Microsoft Office Excel 的命名约定）。</param>
        <summary>将 Microsoft Office Excel 名称转换为对象或值。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public bool Export (string filename, object filterName, object interactive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Export(string filename, object filterName, object interactive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Export(System.String,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="filterName" Type="System.Object" />
        <Parameter Name="interactive" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filename">导出文件的文件名。</param>
        <param name="filterName">与语言无关的图形筛选器名称（如同其在注册表中所显示的那样）。</param>
        <param name="interactive">为 <see langword="true" /> 时，显示包含筛选器特定选项的对话框。 如果此参数为 <see langword="false" />，则 Microsoft Office Excel 使用筛选器的默认值。 默认值为 <see langword="false" />。</param>
        <summary>以图形格式导出 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Export%2A>方法将导出当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>为.gif 文件而不会显示文件选项。  
  
 [!code-csharp[Trin_ExcelChartSheet#114](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#114)]
 [!code-vb[Trin_ExcelChartSheet#114](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#114)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType type, object filename, object quality, object includeDocProperties, object ignorePrintAreas, object from, object to, object openAfterPublish, object fixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportAsFixedFormat(valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType type, object filename, object quality, object includeDocProperties, object ignorePrintAreas, object from, object to, object openAfterPublish, object fixedFormatExtClassPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="filename" Type="System.Object" />
        <Parameter Name="quality" Type="System.Object" />
        <Parameter Name="includeDocProperties" Type="System.Object" />
        <Parameter Name="ignorePrintAreas" Type="System.Object" />
        <Parameter Name="from" Type="System.Object" />
        <Parameter Name="to" Type="System.Object" />
        <Parameter Name="openAfterPublish" Type="System.Object" />
        <Parameter Name="fixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <see langword="Microsoft.Office.Interop.Excel.XlFixedFormatType" /> 值之一，指定是以 PDF 还是 XPS 格式保存图表。</param>
        <param name="filename">新 PDF 或 XPS 文件的完整路径。 如果省略此参数，Excel 会将文件保存在当前文件夹中。</param>
        <param name="quality">其中一个 <see langword="Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> 值，该值指定导出文件的质量。</param>
        <param name="includeDocProperties">如果要在导出的文件中包含文档属性，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="ignorePrintAreas">若要在导出时忽略任何打印区域设置，请使用 <see langword="true" />；否则使用 <see langword="false" />。</param>
        <param name="from">要从其处开始导出的页码。 如果省略此参数，则从第一页开始导出。</param>
        <param name="to">要发布的最后一页的页码。 如果省略此参数，则发布最后一页后停止发布。</param>
        <param name="openAfterPublish">如果立即在查看器中打开新文件，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="fixedFormatExtClassPtr">一个指针，指向使图表能够以其他固定格式保存的 <see langword="IMsoDocExporter" /> 接口的实现。 有关详细信息，请参阅“扩展 Office (2007) 固定格式导出功能”。</param>
        <summary>以 PDF 或 XPS 格式保存 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中显示的图表。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以将保存为 PDF 或 XPS 文件从 Microsoft Office Excel 才提供此功能的外接程序安装。 有关详细信息，搜索"启用支持其他文件格式，如 PDF 和 XPS"Office Online 上。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例将保存图表工作表中的一页`Chart1`以 PDF 格式保存到指定的文件路径和文件名使用标准质量解析。 生成的 PDF 文件包含工作簿属性。 若要运行此代码示例，您的工作簿必须包含名为图表工作表`Chart1`。  
  
 [!code-csharp[Trin_ExcelWorkbook_Additional#12](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#12)]
 [!code-vb[Trin_ExcelWorkbook_Additional#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishInitialization">
      <MemberSignature Language="C#" Value="protected virtual void FinishInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FinishInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.FinishInitialization" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Floor Floor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Floor Floor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Floor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Floor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> 对象，该对象表示三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的基底。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> 对象，表示三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的基底。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Floor%2A>属性来更改当前颜色<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>floor 为绿色。  
  
 [!code-csharp[Trin_ExcelChartSheet#12](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#12)]
 [!code-vb[Trin_ExcelChartSheet#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GapDepth">
      <MemberSignature Language="C#" Value="public int GapDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GapDepth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.GapDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中的数据系列之间的距离（以标记宽度的百分比形式表示）。</summary>
        <value>三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中的数据系列之间的距离（以标记宽度的百分比形式表示）。 此属性的值必须介于 0 到 500 之间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.GapDepth%2A>属性设置在当前的数据系列之间的距离<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>%到 400%标记宽度。  
  
 [!code-csharp[Trin_ExcelChartSheet#13](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#13)]
 [!code-vb[Trin_ExcelChartSheet#13](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationObject">
      <MemberSignature Language="C#" Value="protected virtual object GetAutomationObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetAutomationObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.GetAutomationObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChartElement">
      <MemberSignature Language="C#" Value="public void GetChartElement (int x, int y, ref int elementID, ref int arg1, ref int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetChartElement(int32 x, int32 y, int32 elementID, int32 arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.GetChartElement(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="elementID" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="arg1" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="arg2" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="x">图表元素的 X 坐标。</param>
        <param name="y">图表元素的 Y 坐标。</param>
        <param name="elementID">该方法返回时，此参数包含指定坐标上的图表元素的 <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> 值。 有关更多信息，请参见“备注”部分。</param>
        <param name="arg1">该方法返回时，此参数包含与图表元素有关的信息。 有关更多信息，请参见“备注”部分。</param>
        <param name="arg2">该方法返回时，此参数包含与图表元素有关的信息。 有关更多信息，请参见“备注”部分。</param>
        <summary>获取有关指定 X 和 Y 坐标上的图表元素的信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法比较特殊，，指定只有前两个参数的值。 Microsoft Office Excel 填写其他参数，并在方法返回时，你的代码应检查这些值。  
  
 值`ElementID`确定该方法返回后是否`Arg1`和`Arg2`包含任何信息下, 表中所示。  
  
|`ElementID`|`Arg1`|`Arg2`|  
|-----------------|------------|------------|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlAxis>|AxisIndex|AxisType|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlAxisTitle>|AxisIndex|AxisType|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDisplayUnitLabel>|AxisIndex|AxisType|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlMajorGridlines>|AxisIndex|AxisType|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlMinorGridlines>|AxisIndex|AxisType|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlPivotChartDropZone>|DropZoneType|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlPivotChartFieldButton>|DropZoneType|PivotFieldIndex|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDownBars>|GroupIndex|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDropLines>|GroupIndex|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlHiLoLines>|GroupIndex|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlRadarAxisLabels>|GroupIndex|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlSeriesLines>|GroupIndex|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlUpBars>|GroupIndex|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlChartArea>|无|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlChartTitle>|无|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlCorners>|无|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDataTable>|无|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlFloor>|无|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLeaderLines>|无|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLegend>|无|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlNothing>|无|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlPlotArea>|无|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlWalls>|无|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDataLabel>|SeriesIndex|PointIndex|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlErrorBars>|SeriesIndex|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLegendEntry>|SeriesIndex|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLegendKey>|SeriesIndex|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlSeries>|SeriesIndex|PointIndex|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlShape>|ShapeIndex|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlTrendline>|SeriesIndex|TrendLineIndex|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlXErrorBars>|SeriesIndex|无|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlYErrorBars>|SeriesIndex|无|  
  
 下表介绍的含义`Arg1`和`Arg2`方法返回之后。  
  
|参数|描述|  
|--------------|-----------------|  
|AxisIndex|指定轴是否为主要或辅助。 可以是下列 <xref:Microsoft.Office.Interop.Excel.XlAxisGroup> 常数之一：<xref:Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary> 或 <xref:Microsoft.Office.Interop.Excel.XlAxisGroup.xlSecondary>。|  
|AxisType|指定轴类型。 可以为以下 <xref:Microsoft.Office.Interop.Excel.XlAxisType> 常数之一：<xref:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory>、<xref:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis> 或 <xref:Microsoft.Office.Interop.Excel.XlAxisType.xlValue>。|  
|DropZoneType|指定拖放区域类型： 列、 数据、 页或行字段。 可以是以下值之一<xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation>常量： <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField>， <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField>， <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField>，或<xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField>。 列和行字段常量分别指定序列和类别字段。|  
|GroupIndex|指定的偏移量中<xref:Microsoft.Office.Interop.Excel.ChartGroups?displayProperty=fullName>特定图表组的集合。|  
|PivotFieldIndex|指定特定列 （系列）、 数据、 页或行 （类别） 字段的 T:Microsoft.Office.Interop.Excel.PivotFields 集合内的偏移量。 拖放区域类型则为-1 <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField>。|  
|PointIndex|指定的偏移量中<xref:Microsoft.Office.Interop.Excel.Points>内一系列的特定点的集合。 值为 – 1 指示已选择所有数据点。|  
|SeriesIndex|指定的偏移量中<xref:Microsoft.Office.Interop.Excel.Series>特定系列的集合。|  
|ShapeIndex|指定的偏移量中<xref:Microsoft.Office.Interop.Excel.Shapes>特定形状的集合。|  
|TrendlineIndex|指定的偏移量中<xref:Microsoft.Office.Interop.Excel.Trendlines>一系列中的特定趋势线的集合。|  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.GetChartElement%2A>方法，以便当用户单击该图表显示的图表元素。  
  
 [!code-csharp[Trin_ExcelChartSheet#115](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#115)]
 [!code-vb[Trin_ExcelChartSheet#115](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GroupBoxes(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.GroupBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GroupObjects(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.GroupObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAxis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Excel.ChartSheet_HasAxisType HasAxis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Excel.ChartSheet_HasAxisType HasAxis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.ChartSheet_HasAxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示特定轴是否存在于 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上存在指定的轴，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A>属性以隐藏或显示特定的轴上<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。 <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A>属性应与以下参数一起使用。  
  
|参数|描述|  
|---------------|-----------------|  
|`Index1`|其中一个<xref:Microsoft.Office.Interop.Excel.XlAxisType>值，该值指定轴类型。 系列轴仅应用于三维图表。|  
|`Index2`|其中一个<xref:Microsoft.Office.Interop.Excel.XlAxisGroup>值，该值指定轴组。 三维图表有只有一组轴。|  
  
 如果尝试使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A>无需指定参数，<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A>将获取<xref:Microsoft.Office.Tools.Excel.ChartSheet._HasAxisType>对象，它是 Visual Studio 基础结构的一部分，不应在代码中直接使用。  
  
 Microsoft Office Excel 可能会创建或删除轴，如果更改图表类型或<xref:Microsoft.Office.Interop.Excel.Axis.AxisGroup%2A>属性。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A>属性来隐藏当前的主类别轴<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#29](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#29)]
 [!code-vb[Trin_ExcelChartSheet#29](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDataTable">
      <MemberSignature Language="C#" Value="public bool HasDataTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.HasDataTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 是否包含数据表。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 包含数据表，则为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasDataTable%2A>并<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.DataTable%2A>属性，以显示数据的表在当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>带有边框的边框。  
  
 [!code-csharp[Trin_ExcelChartSheet#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#9)]
 [!code-vb[Trin_ExcelChartSheet#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLegend">
      <MemberSignature Language="C#" Value="public bool HasLegend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLegend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.HasLegend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 是否包含图例。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 包含图例，则为 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPivotFields">
      <MemberSignature Language="C#" Value="public bool HasPivotFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPivotFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.HasPivotFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTitle">
      <MemberSignature Language="C#" Value="public bool HasTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.HasTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 是否包含可见标题。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 包含可见标题，则为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>标题由<xref:Microsoft.Office.Interop.Excel.ChartTitle>对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeightPercent">
      <MemberSignature Language="C#" Value="public int HeightPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HeightPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.HeightPercent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置三维图表的高度（以 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 宽度的百分比形式表示）。</summary>
        <value>三维图表的高度，以 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 宽度的百分比形式（介于 5% 到 500% 之间）表示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HeightPercent%2A>属性设置的当前高度<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>%到 50%的宽度<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#14](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#14)]
 [!code-vb[Trin_ExcelChartSheet#14](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public IServiceProvider HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider HostContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.HostContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Hyperlinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的超链接。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的超链接。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的索引号。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的索引号。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Initialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeDataBindings">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.InitializeDataBindings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart InnerObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart InnerObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.InnerObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Chart" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的基础本机对象。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.Chart" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的基础本机对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemProvider">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.IHostItemProvider ItemProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.IHostItemProvider ItemProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ItemProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.IHostItemProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Labels(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Labels(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Legend Legend { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Legend Legend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Legend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Legend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Legend" />，它表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的图例。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.Legend" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的图例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Legend%2A>属性以修改在当前图例边框的颜色<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#15](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#15)]
 [!code-vb[Trin_ExcelChartSheet#15](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Line3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Line3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineGroups">
      <MemberSignature Language="C#" Value="public object LineGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LineGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.LineGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Lines(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Lines(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ListBoxes(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ListBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Location (Microsoft.Office.Interop.Excel.XlChartLocation where, object name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Office.Interop.Excel.Chart Location(valuetype Microsoft.Office.Interop.Excel.XlChartLocation where, object name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Location(Microsoft.Office.Interop.Excel.XlChartLocation,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="where" Type="Microsoft.Office.Interop.Excel.XlChartLocation" />
        <Parameter Name="name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="where">
          <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" /> 值之一，指定要在何处移动图表。</param>
        <param name="name">图表将嵌入的工作表的名称（<c>Where</c> 为 <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsObject" /> 时），或新工作表的名称（<c>Where</c> 为 <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsNewSheet" /> 时）。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 移至新位置。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Location%2A>方法来移动当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>到名为"NewSheet"的新工作表。  
  
 [!code-csharp[Trin_ExcelChartSheet#117](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#117)]
 [!code-vb[Trin_ExcelChartSheet#117](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#117)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.MailEnvelope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示文档的电子邮件标头。</summary>
        <value>
          <see cref="T:Microsoft.Office.Core.MsoEnvelope" /> 值之一。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.BeginInit">
      <MemberSignature Language="C#" Value="void EntryPoint.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#EntryPoint#BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.EndInit">
      <MemberSignature Language="C#" Value="void EntryPoint.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#EntryPoint#EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.FinishInitialization">
      <MemberSignature Language="C#" Value="void EntryPoint.FinishInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.FinishInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#EntryPoint#FinishInitialization" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.Initialize">
      <MemberSignature Language="C#" Value="void EntryPoint.Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#EntryPoint#Initialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.InitializeDataBindings">
      <MemberSignature Language="C#" Value="void EntryPoint.InitializeDataBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.InitializeDataBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#EntryPoint#InitializeDataBindings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.OnShutdown">
      <MemberSignature Language="C#" Value="void EntryPoint.OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#EntryPoint#OnShutdown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.OnStartup">
      <MemberSignature Language="C#" Value="void EntryPoint.OnStartup ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.OnStartup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#EntryPoint#OnStartup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.Excel.IChartSheetExtension.GetAutomationObject">
      <MemberSignature Language="C#" Value="object IChartSheetExtension.GetAutomationObject ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Microsoft.Office.Tools.Excel.IChartSheetExtension.GetAutomationObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#Excel#IChartSheetExtension#GetAutomationObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.IExtension.ExtensionBase">
      <MemberSignature Language="C#" Value="object Microsoft.Office.Tools.IExtension.ExtensionBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Microsoft.Office.Tools.IExtension.ExtensionBase" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#IExtension#ExtensionBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseDown" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在指针位于 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上而按下鼠标按钮时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseDown>事件时鼠标指针位于当前按下鼠标将显示一个消息框<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。 此示例还使用`x`和`y`事件处理程序，以显示鼠标指针的坐标的参数。  
  
 [!code-csharp[Trin_ExcelChartSheet#205](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#205)]
 [!code-vb[Trin_ExcelChartSheet#205](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#205)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseMove" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在鼠标指针的位置在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseMove>事件时鼠标指针移动到当前显示的消息框<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>时按下主鼠标按钮。  
  
 [!code-csharp[Trin_ExcelChartSheet#206](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#206)]
 [!code-vb[Trin_ExcelChartSheet#206](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#206)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseUp" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在指针位于 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上时释放鼠标按钮时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseUp>事件，当鼠标指针位于当前并释放鼠标按钮时显示一个消息框<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。 此示例还使用`x`和`y`事件处理程序，以显示鼠标指针的坐标的参数。  
  
 [!code-csharp[Trin_ExcelChartSheet#207](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#207)]
 [!code-vb[Trin_ExcelChartSheet#207](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#207)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object before, object after);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Move(object before, object after) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Move(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="before" Type="System.Object" />
        <Parameter Name="after" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="before">移动工作表的放置位置之后的工作表。 如果指定 <c>after</c>，则不能指定 <c>before</c>。</param>
        <param name="after">移动工作表的放置位置之前的工作表。 如果指定 <c>before</c>，则不能指定 <c>after</c>。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 移至工作簿中的另一位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果未指定`Before`或`After`，Microsoft Office Excel 将创建包含移动的工作表的新工作簿。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Move%2A>方法来移动当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>到工作表之前`Sheet3`。  
  
 [!code-csharp[Trin_ExcelChartSheet#118](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#118)]
 [!code-vb[Trin_ExcelChartSheet#118](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#118)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的名称。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Name%2A>属性设置的当前名称<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>到"WidgetSales"。  
  
 [!code-csharp[Trin_ExcelChartSheet#17](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#17)]
 [!code-vb[Trin_ExcelChartSheet#17](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Next" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象，该对象表示下一个工作表。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象，表示下一个工作表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Next%2A>并<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Previous%2A>属性，以显示当前的下一步和上一个工作表名称<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#28](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#28)]
 [!code-vb[Trin_ExcelChartSheet#28](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object OLEObjects(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.OLEObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">OLE 对象的名称或编号。</param>
        <summary>获取一个对象，该对象表示图表或工作表上的单个 OLE 对象（<see cref="T:Microsoft.Office.Interop.Excel.OLEObject" /> 对象）或所有 OLE 对象的集合（<see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> 集合）。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.OLEObjects%2A>方法以获取 OLE 的集合对象上当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#119](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#119)]
 [!code-vb[Trin_ExcelChartSheet#119](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#119)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.OnDoubleClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.OnSheetActivate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.OnSheetDeactivate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShutdown">
      <MemberSignature Language="C#" Value="protected virtual void OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.OnShutdown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStartup">
      <MemberSignature Language="C#" Value="protected virtual void OnStartup ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStartup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.OnStartup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object OptionButtons(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.OptionButtons(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Ovals(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Ovals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.PageSetup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" />，它包含 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的所有页面设置。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" />，包含 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的所有页面设置。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的父对象。</summary>
        <value>
          <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的父对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Paste(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">如果图表位于剪贴板上，则指定要粘贴的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 信息。 可以为以下 <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormats" />、<see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulas" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />。 默认值为 <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />。 如果剪贴板上有图表之外的数据，则不能使用此参数。</param>
        <summary>将图表数据从剪贴板粘贴到指定的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Paste%2A>方法以将其他范围数据从剪贴板粘贴到当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#120](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#120)]
 [!code-vb[Trin_ExcelChartSheet#120](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Perspective">
      <MemberSignature Language="C#" Value="public int Perspective { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Perspective" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的透视系数。</summary>
        <value>三维图表视图的透视系数。 必须介于 0 到 100 之间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果忽略此属性<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.RightAngleAxes%2A>属性是`true`。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A>属性设置的当前视图角度<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>为 45 度。 该示例设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.RightAngleAxes%2A>属性设置为`false`之前设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A>属性。  
  
 [!code-csharp[Trin_ExcelChartSheet#18](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#18)]
 [!code-vb[Trin_ExcelChartSheet#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Pictures(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Pictures(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pie3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Pie3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PieGroups">
      <MemberSignature Language="C#" Value="public object PieGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PieGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.PieGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotLayout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotLayout PivotLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotLayout PivotLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.PivotLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" />，它表示数据透视图中字段的位置和数据透视图中轴的位置。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" />，表示数据透视图中字段的位置和数据透视图中轴的位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>不是数据透视图报表，此属性的值是`null`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PlotArea PlotArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PlotArea PlotArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.PlotArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PlotArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的绘图区。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的绘图区。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.PlotArea%2A>属性与当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>更改图表的绘图区周围边框的颜色。  
  
 [!code-csharp[Trin_ExcelChartSheet#20](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#20)]
 [!code-vb[Trin_ExcelChartSheet#20](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotBy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlRowCol PlotBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlRowCol PlotBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.PlotBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlRowCol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上将列或行用作数据系列的方式。</summary>
        <value>以下 <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于数据透视图报表，此属性是只读的并且始终返回<xref:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns>。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.PlotBy%2A>属性设置当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>可按行显示数据。  
  
 [!code-csharp[Trin_ExcelChartSheet#21](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#21)]
 [!code-vb[Trin_ExcelChartSheet#21](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotVisibleOnly">
      <MemberSignature Language="C#" Value="public bool PlotVisibleOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PlotVisibleOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.PlotVisibleOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否只绘制可见单元格。</summary>
        <value>如果只绘制可见单元格，则为 <see langword="true" />。 如果可见单元格和隐藏单元格都要绘制，则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Previous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象，该对象表示前一个工作表。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象，表示前一个工作表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Next%2A>并<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Previous%2A>属性，以显示当前的下一步和上一个工作表名称<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#28](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#28)]
 [!code-vb[Trin_ExcelChartSheet#28](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.PrintedCommentPages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要为当前图表工作表打印的注释页的数目。 此属性只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 对象。</summary>
        <value>要为当前图表工作表打印的注释页的数目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因为图表和图表工作表不支持注释<xref:Microsoft.Office.Tools.Excel.ChartSheet.PrintedCommentPages%2A>属性的<xref:Microsoft.Office.Tools.Excel.ChartSheet>对象将始终返回零。  
  
> [!NOTE]
>  此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。 但是，此属性不能使用 Excel 2007 项目中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">此属性用于 Excel 2007 项目。</exception>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Object" />
        <Parameter Name="to" Type="System.Object" />
        <Parameter Name="copies" Type="System.Object" />
        <Parameter Name="preview" Type="System.Object" />
        <Parameter Name="activePrinter" Type="System.Object" />
        <Parameter Name="printToFile" Type="System.Object" />
        <Parameter Name="collate" Type="System.Object" />
        <Parameter Name="prToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="from">To be added.</param>
        <param name="to">To be added.</param>
        <param name="copies">To be added.</param>
        <param name="preview">To be added.</param>
        <param name="activePrinter">To be added.</param>
        <param name="printToFile">To be added.</param>
        <param name="collate">To be added.</param>
        <param name="prToFileName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintOutEx(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Object" />
        <Parameter Name="to" Type="System.Object" />
        <Parameter Name="copies" Type="System.Object" />
        <Parameter Name="preview" Type="System.Object" />
        <Parameter Name="activePrinter" Type="System.Object" />
        <Parameter Name="printToFile" Type="System.Object" />
        <Parameter Name="collate" Type="System.Object" />
        <Parameter Name="prToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="from">要从其处开始打印的页码。 如果省略此参数，则打印从第一页开始。</param>
        <param name="to">要打印的最后一页的页码。 若忽略此参数，则打印至最后一页。</param>
        <param name="copies">要打印的份数。 如果忽略此参数，则打印一份。</param>
        <param name="preview">若要在打印对象前让 Microsoft Office Excel 调用打印预览，请使用 <see langword="true" />。 为 <see langword="false" />（或省略）时，立即打印对象。</param>
        <param name="activePrinter">设置活动打印机的名称。</param>
        <param name="printToFile">若要打印到文件，请使用 <see langword="true" />。 若未指定 <c>prToFileName</c>，则 Excel 会提示用户输入输出文件的名称。</param>
        <param name="collate">若逐份打印多个副本，请使用 <see langword="true" />。</param>
        <param name="prToFileName">要打印到的文件的名称。 只有在 <c>printToFile</c> 为 <see langword=" true" /> 时，才使用此参数。</param>
        <summary>打印 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中显示的图表。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 "页"中的说明`From`和`To`打印页面是指 — 不是所有页中表或工作簿。  
  
## <a name="optional-parameters"></a>可选参数  
 有关可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.PrintOutEx%2A>方法以打印一份图表工作表的前两页`Chart1`到默认打印机。 若要运行此代码示例，您的工作簿必须包含名为图表工作表`Chart1`。  
  
 [!code-csharp[Trin_ExcelWorkBook_Additional#16](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#16)]
 [!code-vb[Trin_ExcelWorkBook_Additional#16](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object enableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintPreview(object enableChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.PrintPreview(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enableChanges">To be added.</param>
        <summary>显示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 打印效果的预览。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.PrintPreview%2A>方法以预览当前打印输出<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#123](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#123)]
 [!code-vb[Trin_ExcelChartSheet#123](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object password, object drawingObjects, object contents, object scenarios, object userInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Protect(object password, object drawingObjects, object contents, object scenarios, object userInterfaceOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.Object" />
        <Parameter Name="drawingObjects" Type="System.Object" />
        <Parameter Name="contents" Type="System.Object" />
        <Parameter Name="scenarios" Type="System.Object" />
        <Parameter Name="userInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="password">一个字符串，指定工作表或工作簿的区分大小写的密码。 如果省略此参数，则不使用密码就可以取消对工作表或工作簿的保护。 否则，必须指定用来取消对工作表或工作簿的保护的密码。 如果忘记了密码，则无法取消对工作表或工作簿的保护。 最好将密码及其对应文档名的列表保存在安全的位置。</param>
        <param name="drawingObjects">为 <see langword="true" /> 时保护形状。 默认值为 <see langword="false" />。</param>
        <param name="contents">为 <see langword="true" /> 时保护内容。 对于图表而言，这将保护整个图表。 对于工作表而言，这将保护锁定的单元格。 默认值为 <see langword="true" />。</param>
        <param name="scenarios">为 <see langword="true" /> 时保护方案。 此参数仅对工作表有效。 默认值为 <see langword="true" />。</param>
        <param name="userInterfaceOnly">为 <see langword="true" /> 可保护用户界面，但不保护宏。 如果省略此参数，则同时对宏和用户界面应用保护。</param>
        <summary>保护 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 以便不能对其进行修改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用组合和小写字母、 数字和符号的强密码。 弱密码不混合使用这些元素。 强密码： Y6dh ！ et5。 弱密码： House27。 使用，以便无需将其记下可以记住的强密码。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Protect%2A>方法来保护所有内容的当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。 该示例然后使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectContents%2A>属性以验证图表工作表受到保护，然后会提示用户使用从图表工作表中删除保护<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Unprotect%2A>方法。  
  
 [!code-csharp[Trin_ExcelChartSheet#124](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#124)]
 [!code-vb[Trin_ExcelChartSheet#124](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#124)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectContents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的内容是否受保护。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的内容受保护，则为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这将保护整个<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Protect%2A>方法来保护所有内容的当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。 该示例然后使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectContents%2A>属性以验证图表工作表受到保护，然后会提示用户使用从图表工作表中删除保护<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Unprotect%2A>方法。  
  
 [!code-csharp[Trin_ExcelChartSheet#124](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#124)]
 [!code-vb[Trin_ExcelChartSheet#124](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#124)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectData">
      <MemberSignature Language="C#" Value="public bool ProtectData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示用户是否无法修改系列公式。</summary>
        <value>如果用户不能修改系列公式，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectDrawingObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上的形状是否受保护。</summary>
        <value>如果形状受保护，则为 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectFormatting">
      <MemberSignature Language="C#" Value="public bool ProtectFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示用户是否无法修改 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 格式设置。</summary>
        <value>如果用户无法修改 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 格式设置，则为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当此属性是`true`，则**对象**命令**格式**禁用菜单和<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>不能添加、 移动、 调整大小，或删除元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectGoalSeek">
      <MemberSignature Language="C#" Value="public bool ProtectGoalSeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectGoalSeek" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectGoalSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否开启了只限用户界面的保护。</summary>
        <value>如果开启了只限用户界面的保护，则为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要启用用户界面保护，使用<xref:Microsoft.Office.Interop.Excel._Chart.Protect%2A>方法替换`UserInterfaceOnly`参数设置为`true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSelection">
      <MemberSignature Language="C#" Value="public bool ProtectSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否不能选择 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 元素。</summary>
        <value>如果不能选择 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 元素，则为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当此属性是`true`，无法将形状添加到<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadarGroups">
      <MemberSignature Language="C#" Value="public object RadarGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object RadarGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.RadarGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Rectangles(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Rectangles(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Refresh" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>更新 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的缓存。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler Resize;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler Resize" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.Resize" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的大小更改时发生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightAngleAxes">
      <MemberSignature Language="C#" Value="public object RightAngleAxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RightAngleAxes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.RightAngleAxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 轴是否成直角（与图表旋转角或仰角无关）。</summary>
        <value>如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 轴成直角（与图表旋转角或仰角无关），则为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅适用于三维行、 列或栏<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 如果此属性为`true`，则<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A>属性将被忽略。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A>属性设置的当前视图角度<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>为 45 度。 该示例设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.RightAngleAxes%2A>属性设置为`false`之前设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A>属性。  
  
 [!code-csharp[Trin_ExcelChartSheet#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#9)]
 [!code-vb[Trin_ExcelChartSheet#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public object Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的旋转角。</summary>
        <value>三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的旋转角（绘图区绕 z 轴的旋转角，以度为单位）。 此属性的值必须在 0 到 360 之间，但三维条形图除外（其中该值必须在 0 到 44 之间）。 默认值为 20。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅适用于一个三维<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Rotation%2A>属性来显示当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>而无需任何旋转。  
  
 [!code-csharp[Trin_ExcelChartSheet#22](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#22)]
 [!code-vb[Trin_ExcelChartSheet#22](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, object fileFormat, object password, object writeResPassword, object readOnlyRecommended, object createBackup, object addToMru, object textCodepage, object textVisualLayout, object local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, object fileFormat, object password, object writeResPassword, object readOnlyRecommended, object createBackup, object addToMru, object textCodepage, object textVisualLayout, object local) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="fileFormat" Type="System.Object" />
        <Parameter Name="password" Type="System.Object" />
        <Parameter Name="writeResPassword" Type="System.Object" />
        <Parameter Name="readOnlyRecommended" Type="System.Object" />
        <Parameter Name="createBackup" Type="System.Object" />
        <Parameter Name="addToMru" Type="System.Object" />
        <Parameter Name="textCodepage" Type="System.Object" />
        <Parameter Name="textVisualLayout" Type="System.Object" />
        <Parameter Name="local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filename">要保存的文件的名称。 可以包含完整路径；否则，Microsoft Office Excel 将文件保存在当前文件夹中。</param>
        <param name="fileFormat">保存文件时要使用的文件格式。 有关有效选项的列表，请参见 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> 属性。 对于现有文件，默认格式为最后一种指定文件格式；对于新文件，默认格式为所用 Excel 版本的格式。</param>
        <param name="password">一个区分大小写的字符串（不超过 15 个字符），指示为文件指定的保护密码。</param>
        <param name="writeResPassword">文件的写保护密码。 如果保存文件时指定了密码，但打开文件时没有提供密码，则该文件以只读方式打开。</param>
        <param name="readOnlyRecommended">如果为 <see langword="true" />，则在打开该文件时显示一条消息，建议以只读方式打开该文件。</param>
        <param name="createBackup">如果为 <see langword="true" />，则创建备份文件。</param>
        <param name="addToMru">如果为 <see langword="true" />，则将工作簿添加到最近使用的文件列表中。 默认值为 <see langword="false" />。</param>
        <param name="textCodepage">不在美国使用英语 Excel。</param>
        <param name="textVisualLayout">不在美国使用英语 Excel。</param>
        <param name="local">如果为 <see langword="true" />，则按照 Excel（包括控制面板设置）的语言保存文件。 为 <see langword="false" />（默认值）时，则用 Visual Basic for Applications 所使用的语言（通常为美国英语，除非从中运行 Workbooks.Open 的 VBA 项目是旧的国际化 XL5/95 VBA 项目）保存文件。</param>
        <summary>将对 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 所做的更改保存到另一个文件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SaveAs%2A>方法以保存当前的未受保护的副本<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#126](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#126)]
 [!code-vb[Trin_ExcelChartSheet#126](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#126)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChartTemplate">
      <MemberSignature Language="C#" Value="public void SaveChartTemplate (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveChartTemplate(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.SaveChartTemplate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">新图表模板的名称。</param>
        <summary>将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中的图表作为自定义模板保存在可用图表模板的列表中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，此方法将当前图表保存到用户的图表模板目录。 如果指定的 UNC 或 URL，则将保存图表到指定位置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Scripts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ScrollBars(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ScrollBars(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(object replace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Select(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="replace">要替换的对象。</param>
        <summary>选择 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectEvent">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler SelectEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler SelectEvent" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.SelectEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当选择 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SelectEvent>事件显示一条消息框时的当前主坐标轴<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>处于选中状态。  
  
 [!code-csharp[Trin_ExcelChartSheet#208](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#208)]
 [!code-vb[Trin_ExcelChartSheet#208](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#208)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesChange">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler SeriesChange;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler SeriesChange" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.SeriesChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 数据点的值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SeriesChange>设置为绿色时的当前数据点的点的边框颜色的事件<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>发生更改。  
  
 [!code-csharp[Trin_ExcelChartSheet#209](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#209)]
 [!code-vb[Trin_ExcelChartSheet#209](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#209)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesCollection">
      <MemberSignature Language="C#" Value="public object SeriesCollection (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object SeriesCollection(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.SeriesCollection(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">系列的名称或编号。</param>
        <summary>获取一个对象，该对象表示图表或图表组中的单个系列（<see cref="T:Microsoft.Office.Interop.Excel.Series" /> 对象）或所有系列的集合（<see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> 集合）。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SeriesCollection%2A>方法将数据标签添加到当前的第一个数据系列<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#127](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#127)]
 [!code-vb[Trin_ExcelChartSheet#127](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#127)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackgroundPicture(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.SetBackgroundPicture(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">图形文件的名称。</param>
        <summary>设置 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的背景图形。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetBackgroundPicture%2A>方法来设置当前的背景<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>到图像文件。  
  
 [!code-csharp[Trin_ExcelChartSheet#128](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#128)]
 [!code-vb[Trin_ExcelChartSheet#128](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#128)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultChart(object name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.SetDefaultChart(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">一个字符串，表示在创建新图表时要使用的默认图表模板的名称。 该名称可以标识用户定义的模板库中的图表，它也可以是指定内置图表模板的 <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> 值之一。</param>
        <summary>指定 Microsoft Office Excel 在创建新图表时使用的图表模板的名称。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetElement">
      <MemberSignature Language="C#" Value="public void SetElement (Microsoft.Office.Core.MsoChartElementType element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetElement(valuetype Microsoft.Office.Core.MsoChartElementType element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.SetElement(Microsoft.Office.Core.MsoChartElementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.Office.Core.MsoChartElementType" />
      </Parameters>
      <Docs>
        <param name="element">
          <see langword="Microsoft.Office.Core.MsoChartElementType" /> 值之一，指定元素修改的类型。</param>
        <summary>修改 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中显示的图表的元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetElement%2A>方法来修改指定的选项根据图表元素`Microsoft.Office.Core.MsoChartElementType`值。 例如，若要隐藏表格图例，请将传递值`Microsoft.Office.Core.MsoChartElementType.msoElementLegendNone`到<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetElement%2A>方法。  
  
 可以使用此方法执行的操作对应于以下按钮上**布局**选中图表后，功能区选项卡：  
  
-   中的所有按钮**标签**组。  
  
-   中的所有按钮**轴**组。  
  
-   中的所有按钮**分析**组。  
  
-   **绘图区**，**图表墙面**，并**图表地面**中的按钮**后台**组。  
  
   
  
## Examples  
 下面的代码示例应用适用于图表工作表中的图表的图表类型的第十个布局`Chart1`。 此外，该示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetElement%2A>方法应用更多布局更改： 将图表标题为居中且位于图表网格区域内的样式设置、 添加水平轴的标题以及添加垂直轴的旋转的标题。 若要运行此代码示例，您的工作簿必须包含聚集的列二维图表工作表名为`Chart1`。  
  
 [!code-csharp[Trin_ExcelWorkBook_Additional#18](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#18)]
 [!code-vb[Trin_ExcelWorkBook_Additional#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSourceData">
      <MemberSignature Language="C#" Value="public void SetSourceData (Microsoft.Office.Interop.Excel.Range source, object plotBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSourceData(class Microsoft.Office.Interop.Excel.Range source, object plotBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.SetSourceData(Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="plotBy" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">包含源数据的范围。</param>
        <param name="plotBy">指定绘制数据的方式。 可以为以下 <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />。</param>
        <summary>设置 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的源数据范围。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetSourceData%2A>方法以设置当前的数据源<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>为工作区域`Sheet1`包含单元格 A1 到 B5。  
  
 [!code-csharp[Trin_ExcelChartSheet#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#2)]
 [!code-vb[Trin_ExcelChartSheet#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Shapes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个表示 <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> 上的所有形状的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 对象。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上的所有形状。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Shapes%2A>属性来绘制圆环图形状上当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#23](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#23)]
 [!code-vb[Trin_ExcelChartSheet#23](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAllFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAllFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAllFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中显示的数据透视图上显示所有字段按钮。 此属性只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 对象。</summary>
        <value>如果要在指定的数据透视图上显示所有字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAllFieldButtons%2A>属性设置为`true`显示在指定数据透视图上显示所有字段按钮<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>。 将属性设置为`false`隐藏所有字段按钮。  
  
 <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAllFieldButtons%2A>属性对应于**全部隐藏**命令**字段按钮**的下拉列表**分析**在 Excel 中，这是可用的选项卡选择数据透视图。  
  
> [!NOTE]
>  此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。 但是，此属性不能使用 Excel 2007 项目中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">此属性用于 Excel 2007 项目。</exception>
      </Docs>
    </Member>
    <Member MemberName="ShowAxisFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAxisFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAxisFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAxisFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否在显示在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上的数据透视图上显示轴字段按钮。 此属性只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 对象。</summary>
        <value>若要在指定的数据透视图上显示轴字段按钮，请使用 <see langword="true" />；否则使用 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAxisFieldButtons%2A>属性设置为`true`显示在指定的数据透视图上显示轴字段按钮<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>。 将属性设置为`false`隐藏按钮。  
  
 <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAxisFieldButtons%2A>属性对应于**显示轴字段****按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，选择一个数据透视图时，可以在选项卡。  
  
> [!NOTE]
>  此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。 但是，此属性不能使用 Excel 2007 项目中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">此属性用于 Excel 2007 项目。</exception>
      </Docs>
    </Member>
    <Member MemberName="ShowDataLabelsOverMaximum">
      <MemberSignature Language="C#" Value="public bool ShowDataLabelsOverMaximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDataLabelsOverMaximum" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowDataLabelsOverMaximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示当值大于数值轴上的最大值时是否显示数据标签。</summary>
        <value>如果当值大于数值轴上的最大值时显示数据标签，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果更改中变得比数据点的大小较小的值轴，你可以使用此属性设置是否显示数据标签。 此属性适用于仅的二维图表。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowLegendFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowLegendFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLegendFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowLegendFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中显示的数据透视图上显示图例字段按钮。 此属性只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 对象。</summary>
        <value>如果要在指定的数据透视图上显示所有图例字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowLegendFieldButtons%2A>属性设置为`true`显示在指定数据透视图上显示图例字段按钮<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>。 将属性设置为`false`隐藏按钮。  
  
 <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowLegendFieldButtons%2A>属性对应于**显示图例字段按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，这是选项卡选择一个数据透视图时可用。  
  
> [!NOTE]
>  此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。 但是，此属性不能使用 Excel 2007 项目中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">此属性用于 Excel 2007 项目。</exception>
      </Docs>
    </Member>
    <Member MemberName="ShowReportFilterFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowReportFilterFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReportFilterFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowReportFilterFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中显示的数据透视图上显示报告筛选器字段按钮。 此属性只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 对象。</summary>
        <value>如果要在指定的数据透视图上显示报告筛选器字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowReportFilterFieldButtons%2A>属性设置为`true`显示在指定的数据透视图上显示报表筛选器字段按钮<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>。 将属性设置为`false`隐藏按钮。  
  
 <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowReportFilterFieldButtons%2A>属性对应于**显示报告筛选器字段按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，选项卡的当选择一个数据透视图才可用。  
  
> [!NOTE]
>  此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。 但是，此属性不能使用 Excel 2007 项目中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">此属性用于 Excel 2007 项目。</exception>
      </Docs>
    </Member>
    <Member MemberName="ShowValueFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowValueFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowValueFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowValueFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中显示的数据透视图上显示值字段按钮。 此属性只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 对象。</summary>
        <value>如果要在指定的数据透视图上显示值字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowValueFieldButtons%2A>属性设置为`true`显示的值`field`上指定的数据透视图上显示的按钮<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>。 将属性设置为`false`隐藏该按钮。  
  
 <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowValueFieldButtons%2A>属性对应于**显示值字段按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，这是选项卡选择一个数据透视图时可用。  
  
> [!NOTE]
>  此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。 但是，此属性不能使用 Excel 2007 项目中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">此属性用于 Excel 2007 项目。</exception>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public event EventHandler Shutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Shutdown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.Shutdown" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在准备卸载程序集的应用程序域时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在中调用的最后一步<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>声明为类<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>类卸载。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SideWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls SideWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls SideWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.SideWall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象表示三维图表的侧面墙。</summary>
        <value>一个 <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，表示三维图表的侧面墙。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SideWall%2A>属性来设置格式的三维图表的侧面墙。  
  
   
  
## Examples  
 下面的代码示例指定墙壁和现有的三维图表工作表的最底层的颜色并设置图表样式为样式 4。 若要运行此代码示例，该工作簿必须包含名为图表工作表`Chart1`的三维类型。  
  
 [!code-csharp[Trin_Excelworkbook_Additional#38](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#38)]
 [!code-vb[Trin_Excelworkbook_Additional#38](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Spinners(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Spinners(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public event EventHandler Startup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Startup" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.Startup" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在文档正在运行并且该程序集中的所有初始化代码都已运行之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要运行用户代码中运行的类的构造函数中最后一件事。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubType">
      <MemberSignature Language="C#" Value="public int SubType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.SubType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfaceGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.SurfaceGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Tab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> 的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 对象。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> 的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含有关 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的数据的对象。</summary>
        <value>包含有关 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的数据的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个常见用途<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Tag%2A>属性是与密切关联的数据存储<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object TextBoxes(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.TextBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unprotect(object password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Unprotect(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="password">用于取消保护工作表或工作簿的区分大小写的密码。 如果未用密码保护工作表或工作簿，则省略此参数。 如果对使用密码进行保护的工作表省略此参数，则您将被提示输入密码。 如果对使用密码进行保护的工作簿省略此参数，则该方法将失败。</param>
        <summary>从 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中移除保护。 如果工作表或工作簿不受保护，则此方法无效。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你忘记了密码，则无法取消保护<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。 最好将密码及其对应文档名的列表保存在安全的位置。  
  
## <a name="optional-parameters"></a>可选参数  
 可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Protect%2A>方法来保护所有内容的当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。 该示例然后使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectContents%2A>属性以验证图表工作表受到保护，然后会提示用户使用从图表工作表中删除保护<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Unprotect%2A>方法。  
  
 [!code-csharp[Trin_ExcelChartSheet#124](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#124)]
 [!code-vb[Trin_ExcelChartSheet#124](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#124)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>确定该对象是否可见。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Visible%2A>属性来隐藏当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#26](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#26)]
 [!code-vb[Trin_ExcelChartSheet#26](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Walls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls Walls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls Walls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Walls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，该对象表示三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的墙纸。</summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，表示三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的墙纸。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Walls%2A>属性设置的粗细和颜色的当前墙纸<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。  
  
 [!code-csharp[Trin_ExcelChartSheet#27](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#27)]
 [!code-vb[Trin_ExcelChartSheet#27](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WallsAndGridlines2D">
      <MemberSignature Language="C#" Value="public bool WallsAndGridlines2D { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WallsAndGridlines2D" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.WallsAndGridlines2D" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XYGroups">
      <MemberSignature Language="C#" Value="public object XYGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object XYGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.XYGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>