<Type Name="ChartSheetBase" FullName="Microsoft.Office.Tools.Excel.ChartSheetBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="617b3e84049e6e534d646afb6f4ab13383cf62e2" /><Meta Name="ms.sourcegitcommit" Value="66ccc1ab172558cdfd2b9ffb616a60e4c9105be3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/19/2018" /><Meta Name="ms.locfileid" Value="46459843" /></Metadata><TypeSignature Language="C#" Value="public abstract class ChartSheetBase : IDisposable, Microsoft.Office.Tools.Excel.IChartSheetExtension, System.ComponentModel.IComponent, System.ComponentModel.ISupportInitialize, System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChartSheetBase extends System.Object implements class Microsoft.Office.Tools.EntryPoint, class Microsoft.Office.Tools.Excel.IChartSheetExtension, class Microsoft.Office.Tools.IExtension, class System.ComponentModel.IComponent, class System.ComponentModel.ISupportInitialize, class System.IDisposable, class System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Tools.Excel.IChartSheetExtension</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IBindableComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0d9aa-101">提供 Microsoft Office Excel 的文档级 Office 项目中图表工作表宿主项的基类。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-101">Provides the base class for chart sheet host items in document-level Office projects for Microsoft Office Excel.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-102"><xref:Microsoft.Office.Tools.Excel.ChartSheetBase>类是图表工作表的基类*宿主项*使用 Visual Studio 创建的文档级 Office 项目中。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-102">The <xref:Microsoft.Office.Tools.Excel.ChartSheetBase> class is the base class for chart sheet *host items* in document-level Office projects created by using Visual Studio.</span></span>  
  
 <span data-ttu-id="0d9aa-103">图表工作表是只包含一个图表工作表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-103">A chart sheet is a worksheet that contains only a chart.</span></span> <span data-ttu-id="0d9aa-104">如果你想要创建嵌入的图表中的工作表还包含其他项，例如单元或其他控件，创建<xref:Microsoft.Office.Tools.Excel.Chart>相反。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-104">If you want to create an embedded chart in a worksheet that also contains other items, such as cells or other controls, create a <xref:Microsoft.Office.Tools.Excel.Chart> instead.</span></span>  
  
 <span data-ttu-id="0d9aa-105"><xref:Microsoft.Office.Tools.Excel.ChartSheetBase>类提供了与图表相关的所有功能本机<xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName>Excel 主互操作程序集中的对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-105">The <xref:Microsoft.Office.Tools.Excel.ChartSheetBase> class provides all the chart-related features of a native <xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName> object in the Excel primary interop assembly.</span></span> <span data-ttu-id="0d9aa-106">但是，<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>还公开了事件。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-106">However, a <xref:Microsoft.Office.Tools.Excel.ChartSheetBase> also exposes events.</span></span>  
  
## <a name="usage"></a><span data-ttu-id="0d9aa-107">用法</span><span class="sxs-lookup"><span data-stu-id="0d9aa-107">Usage</span></span>  
 [!INCLUDE[vsto_net4utilities](~/includes/vsto-net4utilities-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChartSheetBase (Microsoft.Office.Tools.Excel.Factory factory, IServiceProvider serviceProvider, string primaryCookie, string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.Office.Tools.Excel.Factory factory, class System.IServiceProvider serviceProvider, string primaryCookie, string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.#ctor(Microsoft.Office.Tools.Excel.Factory,System.IServiceProvider,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Office.Tools.Excel.Factory" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="primaryCookie" Type="System.String" />
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <param name="serviceProvider">To be added.</param>
        <param name="primaryCookie">To be added.</param>
        <param name="identifier">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase._CodeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Activate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d9aa-108">使当前 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 成为活动图表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-108">Makes the current <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> the active chart.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateEvent">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler ActivateEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler ActivateEvent" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.ActivateEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-109">当激活 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 时发生。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-109">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> is activated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-110">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ActivateEvent>事件显示一条消息框时当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>激活。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-110">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ActivateEvent> event that displays a message box when the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> is activated.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#200](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#200)]
 [!code-vb[Trin_ExcelChartSheet#200](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#200)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-111">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Application" />，它表示 Microsoft Office Excel 应用程序。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-111">Gets an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Microsoft Office Excel application.</span></span></summary>
        <value><span data-ttu-id="0d9aa-112">一个 <see cref="T:Microsoft.Office.Interop.Excel.Application" />，表示 Microsoft Office Excel 应用程序。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-112">An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Microsoft Office Excel application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-113">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Application%2A>属性与当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>要在消息框中显示的应用程序名称。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-113">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Application%2A> property of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to display the application name in a message box.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#1](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#1)]
 [!code-vb[Trin_ExcelChartSheet#1](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyChartTemplate">
      <MemberSignature Language="C#" Value="public void ApplyChartTemplate (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyChartTemplate(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ApplyChartTemplate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="0d9aa-114">图表模板的文件名。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-114">The file name for a chart template.</span></span></param>
        <summary><span data-ttu-id="0d9aa-115">将标准或自定义图表模板应用于图表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-115">Applies a standard or custom chart template to the chart.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCustomType">
      <MemberSignature Language="C#" Value="public void ApplyCustomType (Microsoft.Office.Interop.Excel.XlChartType chartType, object typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyCustomType(valuetype Microsoft.Office.Interop.Excel.XlChartType chartType, object typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chartType" Type="Microsoft.Office.Interop.Excel.XlChartType" />
        <Parameter Name="typeName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="chartType">To be added.</param>
        <param name="typeName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDataLabels">
      <MemberSignature Language="C#" Value="public void ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType type, object legendKey, object autoText, object hasLeaderLines, object showSeriesName, object showCategoryName, object showValue, object showPercentage, object showBubbleSize, object separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyDataLabels(valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType type, object legendKey, object autoText, object hasLeaderLines, object showSeriesName, object showCategoryName, object showValue, object showPercentage, object showBubbleSize, object separator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="legendKey" Type="System.Object" />
        <Parameter Name="autoText" Type="System.Object" />
        <Parameter Name="hasLeaderLines" Type="System.Object" />
        <Parameter Name="showSeriesName" Type="System.Object" />
        <Parameter Name="showCategoryName" Type="System.Object" />
        <Parameter Name="showValue" Type="System.Object" />
        <Parameter Name="showPercentage" Type="System.Object" />
        <Parameter Name="showBubbleSize" Type="System.Object" />
        <Parameter Name="separator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0d9aa-116">要应用的数据标签的类型。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-116">The type of data label to apply.</span></span></param>
        <param name="legendKey"><span data-ttu-id="0d9aa-117">为 <see langword="true" /> 时，在点旁边显示图例项标示。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-117"><see langword="true" /> to show the legend key next to the point.</span></span> <span data-ttu-id="0d9aa-118">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-118">The default value is <see langword="false" />.</span></span></param>
        <param name="autoText"><span data-ttu-id="0d9aa-119">如果对象自动根据内容生成适当的文本，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-119"><see langword="true" /> if the object automatically generates appropriate text based on content.</span></span></param>
        <param name="hasLeaderLines"><span data-ttu-id="0d9aa-120">对于 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 和 <see cref="T:Microsoft.Office.Interop.Excel.Series" /> 对象而言，如果系列包含引导线，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-120">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, <see langword="true" /> if the series has leader lines.</span></span></param>
        <param name="showSeriesName"><span data-ttu-id="0d9aa-121">数据标签的系列名称。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-121">The series name for the data label.</span></span></param>
        <param name="showCategoryName"><span data-ttu-id="0d9aa-122">数据标签的类别名称。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-122">The category name for the data label.</span></span></param>
        <param name="showValue"><span data-ttu-id="0d9aa-123">数据标签的值。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-123">The value for the data label.</span></span></param>
        <param name="showPercentage"><span data-ttu-id="0d9aa-124">数据标签的百分比。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-124">The percentage for the data label.</span></span></param>
        <param name="showBubbleSize"><span data-ttu-id="0d9aa-125">数据标签的气泡大小。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-125">The bubble size for the data label.</span></span></param>
        <param name="separator"><span data-ttu-id="0d9aa-126">数据标签的分隔符。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-126">The separator for the data label.</span></span></param>
        <summary><span data-ttu-id="0d9aa-127">将数据标签应用于 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中的点、系列或所有系列。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-127">Applies data labels to a point, a series, or all the series in a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-128">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-128">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-129">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-129">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-130">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ApplyDataLabels%2A>方法在当前显示的数据值<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-130">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ApplyDataLabels%2A> method to show the data values in the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#101](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#101)]
 [!code-vb[Trin_ExcelChartSheet#101](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyLayout">
      <MemberSignature Language="C#" Value="public void ApplyLayout (int layout, object chartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyLayout(int32 layout, object chartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ApplyLayout(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layout" Type="System.Int32" />
        <Parameter Name="chartType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="layout"><span data-ttu-id="0d9aa-131">1 到 10 之间的一个整数，用于指定要应用于图表的布局的类型。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-131">An integer from 1 through 10 that specifies the type of layout to apply to the chart.</span></span></param>
        <param name="chartType"><span data-ttu-id="0d9aa-132"><see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-132">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> values.</span></span></param>
        <summary><span data-ttu-id="0d9aa-133">将指定的布局应用于图表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-133">Applies the specified layout to the chart.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-134">值`Layout`上的参数对应于可用的选项**图表布局**组**设计**功能区上的选项卡。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-134">The values of the `Layout` parameter correspond to the available options on the **Chart Layouts** group on the **Design** tab on the Ribbon.</span></span> <span data-ttu-id="0d9aa-135">**设计**时您选择一个图表，选项卡才可用。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-135">The **Design** tab is available when you select a chart.</span></span>  
  
 <span data-ttu-id="0d9aa-136">图表的每个类型都有其自己的布局选项集。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-136">Each type of chart has its own set of layout options.</span></span> <span data-ttu-id="0d9aa-137">例如，饼图的布局选项是不同于柱形图的布局选项。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-137">For example, the layout options for a pie chart are different from the layout options for a column chart.</span></span> <span data-ttu-id="0d9aa-138">如果你想要从不同的图表类型来应用布局，则可以使用`ChartType`参数来指定图表键入`Layout`参数引用。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-138">If you want to apply a layout from a different chart type, you can use the `ChartType` parameter to specify the chart type that the `Layout` parameter will refer to.</span></span> <span data-ttu-id="0d9aa-139">例如，如果有一个柱形图和你想要从折线图应用布局，则传递<xref:Microsoft.Office.Interop.Excel.XlChartType.xlLine?displayProperty=fullName>值设为`ChartType`参数。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-139">For example, if you have a column chart and you want to apply a layout from a line chart, pass the <xref:Microsoft.Office.Interop.Excel.XlChartType.xlLine?displayProperty=fullName> value to the `ChartType` parameter.</span></span> <span data-ttu-id="0d9aa-140">布局仅添加适用于该特定图表类型的图表元素。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-140">The layout only adds chart elements that are available for that particular chart type.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-141">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-141">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-142">有关可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-142">For information about optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-143">下面的代码示例应用适用于图表工作表中的图表的图表类型的第十个布局`Chart1`。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-143">The following code example applies the tenth layout that is available for the chart type of the chart in chart sheet `Chart1`.</span></span> <span data-ttu-id="0d9aa-144">此外，该示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetElement%2A>方法应用更多布局更改： 将图表标题为居中且位于图表网格区域内的样式设置、 添加水平轴的标题以及添加垂直轴的旋转的标题。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-144">In addition, the example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetElement%2A> method to apply further layout changes: setting the style of the chart title to be centered and to lie inside the chart grid area, adding a title for the horizontal axis, and adding a rotated title for the vertical axis.</span></span> <span data-ttu-id="0d9aa-145">若要运行此代码示例，您的工作簿必须包含聚集的列二维图表工作表名为`Chart1`。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-145">To run this code example, your workbook must contain a clustered column two-dimensional chart sheet named `Chart1`.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkBook_Additional#18](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#18)]
 [!code-vb[Trin_ExcelWorkBook_Additional#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Arcs(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Arcs(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Area3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Area3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreaGroups">
      <MemberSignature Language="C#" Value="public object AreaGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object AreaGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.AreaGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public void AutoFormat (int gallery, object format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoFormat(int32 gallery, object format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.AutoFormat(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gallery" Type="System.Int32" />
        <Parameter Name="format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="gallery">To be added.</param>
        <param name="format">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaling">
      <MemberSignature Language="C#" Value="public bool AutoScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScaling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.AutoScaling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-146">获取一个值，该值指示 Microsoft Office Excel 是否缩放三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 以使其大小更接近于等效的二维图表的大小</span><span class="sxs-lookup"><span data-stu-id="0d9aa-146">Gets a value that indicates whether Microsoft Office Excel scales a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> so that it is closer in size to the equivalent 2-D chart</span></span></summary>
        <value><span data-ttu-id="0d9aa-147">如果 Microsoft Office Excel 缩放三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 以使其大小更接近于等效的二维图表的大小，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-147"><see langword="true" /> if Microsoft Office Excel scales a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> so that it is closer in size to the equivalent 2-D chart.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-148"><xref:Microsoft.Office.Tools.Excel.ChartSheetBase.RightAngleAxes%2A> 属性必须为 `true`。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-148">The <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.RightAngleAxes%2A> property must be `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Axes">
      <MemberSignature Language="C#" Value="public object Axes (object type, Microsoft.Office.Interop.Excel.XlAxisGroup axisGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Axes(object type, valuetype Microsoft.Office.Interop.Excel.XlAxisGroup axisGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Axes(System.Object,Microsoft.Office.Interop.Excel.XlAxisGroup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" />
        <Parameter Name="axisGroup" Type="Microsoft.Office.Interop.Excel.XlAxisGroup" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0d9aa-149">指定要返回的轴。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-149">Specifies the axis to return.</span></span> <span data-ttu-id="0d9aa-150">可以为以下 <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlValue" />、<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" />（<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" /> 只对三维图表有效）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-150">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlValue" />, <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" /> (<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" /> is valid only for 3-D charts).</span></span></param>
        <param name="axisGroup"><span data-ttu-id="0d9aa-151">指定轴组。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-151">Specifies the axis group.</span></span> <span data-ttu-id="0d9aa-152">如果省略此参数，则使用主轴组。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-152">If this argument is omitted, the primary group is used.</span></span> <span data-ttu-id="0d9aa-153">三维图表只有一个轴组。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-153">3-D charts have only one axis group.</span></span></param>
        <summary><span data-ttu-id="0d9aa-154">获取一个对象，该对象表示图表上的一个轴或一个轴集合。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-154">Gets an object that represents either a single axis or a collection of the axes on the chart.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-155">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-155">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-156">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-156">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-157">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Axes%2A>方法设置的当前主坐标轴标题<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-157">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Axes%2A> method to set the title of the primary axis of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#103](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#103)]
 [!code-vb[Trin_ExcelChartSheet#103](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls BackWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls BackWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.BackWall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-158">获取一个对象，该对象表示三维图表的背面墙。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-158">Gets an object that represents the back wall of a 3-D chart.</span></span></summary>
        <value><span data-ttu-id="0d9aa-159">一个 <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，表示三维图表的背面墙。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-159">A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the back wall of a 3-D chart.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-160">使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.BackWall%2A>属性来设置格式的三维图表的背面墙。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-160">Use the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.BackWall%2A> property to format the back wall of a 3-D chart.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-161">下面的代码示例指定墙壁和现有的三维图表工作表的最底层的颜色并设置图表样式为样式 4。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-161">The following code example specifies the colors of the walls and floor of an existing 3-D chart sheet and sets the chart style to style 4.</span></span> <span data-ttu-id="0d9aa-162">若要运行此代码示例，该工作簿必须包含名为图表工作表`Chart1`的三维类型。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-162">To run this code example, the workbook must contain a chart sheet called `Chart1` of a 3-D type.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkbook_Additional#38](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#38)]
 [!code-vb[Trin_ExcelWorkbook_Additional#38](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bar3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Bar3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarGroups">
      <MemberSignature Language="C#" Value="public object BarGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object BarGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.BarGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlBarShape BarShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlBarShape BarShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.BarShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlBarShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-163">获取或设置用于三维条形或柱形 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的形状。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-163">Gets or sets the shape used with the 3-D bar or column <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-164"><see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-164">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-165">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.BarShape%2A>属性与当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>条形显示为柱状。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-165">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.BarShape%2A> property of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to display the bars as cylinders.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#4)]
 [!code-vb[Trin_ExcelChartSheet#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Base">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Excel.ChartSheet Base { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Excel.ChartSheet Base" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Base" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.ChartSheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-166">获取此 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> 对象扩展的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-166">Gets the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheet" /> object that this <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> object extends.</span></span></summary>
        <value><span data-ttu-id="0d9aa-167">此 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 对象扩展的对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-167">The object that this <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> object extends.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-168"><xref:Microsoft.Office.Tools.Excel.ChartSheetBase>类用于扩展<xref:Microsoft.Office.Tools.Excel.ChartSheet>通过实现对象<xref:Microsoft.Office.Tools.Excel.IChartSheetExtension>接口。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-168">The <xref:Microsoft.Office.Tools.Excel.ChartSheetBase> class extends <xref:Microsoft.Office.Tools.Excel.ChartSheet> objects by implementing the <xref:Microsoft.Office.Tools.Excel.IChartSheetExtension> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeDoubleClick">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler BeforeDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler BeforeDoubleClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.BeforeDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-169">在双击 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 时，但在默认双击操作之前发生。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-169">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> is double-clicked, before the default double-click action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-170"><xref:Microsoft.Office.Interop.Excel._Application.DoubleClick%2A>方法不会导致发生此事件。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-170">The <xref:Microsoft.Office.Interop.Excel._Application.DoubleClick%2A> method does not cause this event to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-171">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.BeforeDoubleClick>显示当前的消息框时轴的事件<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>双击。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-171">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.BeforeDoubleClick> event that displays a message box when an axis of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> is double-clicked.</span></span> <span data-ttu-id="0d9aa-172">该示例还设置`Cancel`参数的事件处理程序`true`，以便图表工作表不会接收的双击操作，当用户双击轴。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-172">The example also sets the `Cancel` parameter of the event handler to `true` so that the chart sheet does not receive the double click action when the user double-clicks an axis.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#201](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#201)]
 [!code-vb[Trin_ExcelChartSheet#201](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#201)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeRightClick">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler BeforeRightClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler BeforeRightClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.BeforeRightClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-173">在右击 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 时，但在默认右击操作之前发生。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-173">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> is right-clicked, before the default right-click action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-174">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.BeforeRightClick>事件显示一条消息框时当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>右键单击。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-174">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.BeforeRightClick> event that displays a message box when the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> is right-clicked.</span></span> <span data-ttu-id="0d9aa-175">该示例还设置`Cancel`参数的事件处理程序`true`，以便图表工作表不会接收右键单击操作。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-175">The example also sets the `Cancel` parameter of the event handler to `true` so that the chart sheet does not receive the right click action.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#202](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#202)]
 [!code-vb[Trin_ExcelChartSheet#202](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#202)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public virtual void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContext">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingContext BindingContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingContext BindingContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.BindingContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.BindingContextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Buttons(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Buttons(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler Calculate;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler Calculate" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.Calculate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-176">在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 绘制新的或更改的数据后发生。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-176">Occurs after the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> plots new or changed data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-177">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Calculate>事件显示一条消息框时源数据的当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>更改。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-177">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Calculate> event that displays a message box when the source data of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> changes.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#203](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#203)]
 [!code-vb[Trin_ExcelChartSheet#203](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#203)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartArea ChartArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartArea ChartArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-178">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" />，它表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的完整图表区域。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-178">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> that represents the complete chart area for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-179">一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的完整图表区域。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-179">A <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> that represents the complete chart area for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-180">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartArea%2A>属性与当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>要修改的权重和图表区域边框的颜色。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-180">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartArea%2A> property of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to modify the weight and color of the chart area border.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#5](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#5)]
 [!code-vb[Trin_ExcelChartSheet#5](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartGroups">
      <MemberSignature Language="C#" Value="public object ChartGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ChartGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0d9aa-181">图表组编号。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-181">The chart group number.</span></span></param>
        <summary><span data-ttu-id="0d9aa-182">获取一个对象，该对象表示单个图表组（<see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> 对象）或图表中所有图表组的集合（<see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> 对象）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-182">Gets an object that represents either a single chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of all the chart groups in the chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> object).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-183">返回的集合包括所有类型的组。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-183">The returned collection includes every type of group.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-184">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-184">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-185">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-185">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-186">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartGroups%2A>方法以设置当前的条之间的距离<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-186">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartGroups%2A> method to set the distance between the bars of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#105](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#105)]
 [!code-vb[Trin_ExcelChartSheet#105](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ChartObjects(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0d9aa-187"><see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的名称或编号。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-187">The name or number of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span> <span data-ttu-id="0d9aa-188">此参数可以是一个数组，以指定多个图表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-188">This argument can be an array, to specify more than one chart.</span></span></param>
        <summary><span data-ttu-id="0d9aa-189">获取一个对象，该对象表示工作表上的单个嵌入式图表（<see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> 对象）或所有嵌入式图表的集合（<see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> 对象）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-189">Gets an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-190">此方法不是等效于<xref:Microsoft.Office.Interop.Excel._Workbook.Charts%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-190">This method is not equivalent to the <xref:Microsoft.Office.Interop.Excel._Workbook.Charts%2A> property.</span></span> <span data-ttu-id="0d9aa-191">此方法返回嵌入式的图表;<xref:Microsoft.Office.Interop.Excel._Workbook.Charts%2A>属性返回图表工作表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-191">This method returns embedded charts; the <xref:Microsoft.Office.Interop.Excel._Workbook.Charts%2A> property returns chart sheets.</span></span> <span data-ttu-id="0d9aa-192">使用<xref:Microsoft.Office.Interop.Excel.ChartObject.Chart%2A>属性以返回<xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName>嵌入式图表的对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-192">Use the <xref:Microsoft.Office.Interop.Excel.ChartObject.Chart%2A> property to return the <xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName> object for an embedded chart.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-193">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-193">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-194">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-194">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-195">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartObjects%2A>方法来显示是否由 Microsoft Office Excel 创建的嵌入式图表的集合。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-195">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartObjects%2A> method to display whether the collection of embedded charts was created by Microsoft Office Excel.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#106](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#106)]
 [!code-vb[Trin_ExcelChartSheet#106](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartStyle">
      <MemberSignature Language="C#" Value="public object ChartStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChartStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-196">获取或设置图表的样式。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-196">Gets or sets the style of the chart.</span></span></summary>
        <value><span data-ttu-id="0d9aa-197">1 到 48 之间的一个整数，用于表示图表的样式。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-197">An integer from 1 through 48 that represents the style of the chart.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-198">值<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartStyle%2A>上的属性对应于可用的选项**图表样式**组**设计**功能区上的选项卡。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-198">The values of the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartStyle%2A> property correspond to the available options on the **Chart Styles** group on the **Design** tab on the Ribbon.</span></span> <span data-ttu-id="0d9aa-199">**设计**时您选择一个图表，选项卡才可用。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-199">The **Design** tab is available when you select a chart.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-200">下面的代码示例指定墙壁和现有的三维图表工作表的最底层的颜色并设置图表样式为样式 4。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-200">The following code example specifies the colors of the walls and floor of an existing 3-D chart sheet and sets the chart style to style 4.</span></span> <span data-ttu-id="0d9aa-201">若要运行此代码示例，该工作簿必须包含名为图表工作表`Chart1`的三维类型。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-201">To run this code example, the workbook must contain a chart sheet called `Chart1` of a 3-D type.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkbook_Additional#38](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#38)]
 [!code-vb[Trin_ExcelWorkbook_Additional#38](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartTitle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartTitle ChartTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartTitle ChartTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartTitle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-202">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" />，它表示指定 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的标题。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-202">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> that represents the title of the specified <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-203">一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" />，表示指定 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的标题。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-203">A <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> that represents the title of the specified <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-204">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartTitle%2A>属性与当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>若要修改的标题的字体颜色。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-204">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartTitle%2A> property of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to modify the font color of the title.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#6](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#6)]
 [!code-vb[Trin_ExcelChartSheet#6](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-205">获取或设置 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-205">Gets or sets the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> type.</span></span></summary>
        <value><span data-ttu-id="0d9aa-206"><see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-206">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-207">某些图表类型不可用于数据透视图报表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-207">Some chart types are not available for PivotChart reports.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-208">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartType%2A>属性设置的当前类型<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>到三维簇状条形图。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-208">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartType%2A> property to set the type of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to a 3-D clustered bar chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#7](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#7)]
 [!code-vb[Trin_ExcelChartSheet#7](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartWizard">
      <MemberSignature Language="C#" Value="public void ChartWizard (object source, object gallery, object format, object plotBy, object categoryLabels, object seriesLabels, object hasLegend, object title, object categoryTitle, object valueTitle, object extraTitle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChartWizard(object source, object gallery, object format, object plotBy, object categoryLabels, object seriesLabels, object hasLegend, object title, object categoryTitle, object valueTitle, object extraTitle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="gallery" Type="System.Object" />
        <Parameter Name="format" Type="System.Object" />
        <Parameter Name="plotBy" Type="System.Object" />
        <Parameter Name="categoryLabels" Type="System.Object" />
        <Parameter Name="seriesLabels" Type="System.Object" />
        <Parameter Name="hasLegend" Type="System.Object" />
        <Parameter Name="title" Type="System.Object" />
        <Parameter Name="categoryTitle" Type="System.Object" />
        <Parameter Name="valueTitle" Type="System.Object" />
        <Parameter Name="extraTitle" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="0d9aa-209">包含新图表的源数据的范围。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-209">The range that contains the source data for the new chart.</span></span> <span data-ttu-id="0d9aa-210">如果省略此参数，则 Microsoft Office Excel 编辑活动图表工作表或在活动工作表上所选择的图表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-210">If this argument is omitted, Microsoft Office Excel edits the active chart sheet or the selected chart on the active worksheet.</span></span></param>
        <param name="gallery"><span data-ttu-id="0d9aa-211">图表类型。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-211">The chart type.</span></span></param>
        <param name="format"><span data-ttu-id="0d9aa-212">内置自动套用格式的选项编号。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-212">The option number for the built-in autoformats.</span></span> <span data-ttu-id="0d9aa-213">可以是一个 1 到 10 之间的数（取决于库类型）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-213">Can be a number from 1 through 10, depending on the gallery type.</span></span> <span data-ttu-id="0d9aa-214">如果省略此参数，则 Microsoft Office Excel 根据库类型和数据源选择默认值。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-214">If this argument is omitted, Microsoft Office Excel chooses a default value based on the gallery type and data source.</span></span></param>
        <param name="plotBy"><span data-ttu-id="0d9aa-215">指定每个系列的数据是按行绘制还是按列绘制。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-215">Specifies whether the data for each series is in rows or columns.</span></span> <span data-ttu-id="0d9aa-216">可以是下列 <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-216">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" />.</span></span></param>
        <param name="categoryLabels"><span data-ttu-id="0d9aa-217">一个整数，指定源范围中包含类别标签的行数或列数。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-217">An integer specifying the number of rows or columns within the source range that contain category labels.</span></span> <span data-ttu-id="0d9aa-218">合法值是从 0（零）到相应类别或系列的最大数减一。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-218">Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</span></span></param>
        <param name="seriesLabels"><span data-ttu-id="0d9aa-219">源范围中包含系列标签的行数或列数。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-219">The number of rows or columns within the source range that contain series labels.</span></span> <span data-ttu-id="0d9aa-220">合法值是从 0（零）到相应类别或系列的最大数减一。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-220">Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</span></span></param>
        <param name="hasLegend"><span data-ttu-id="0d9aa-221">为 <see langword="true" /> 时包含图例。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-221"><see langword="true" /> to include a legend.</span></span></param>
        <param name="title"><span data-ttu-id="0d9aa-222">图表标题文本。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-222">The chart title text.</span></span></param>
        <param name="categoryTitle"><span data-ttu-id="0d9aa-223">分类轴标题文本。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-223">The category axis title text.</span></span></param>
        <param name="valueTitle"><span data-ttu-id="0d9aa-224">数值轴标题文本</span><span class="sxs-lookup"><span data-stu-id="0d9aa-224">The value axis title text</span></span></param>
        <param name="extraTitle"><span data-ttu-id="0d9aa-225">三维图表的系列轴标题或二维图表的第二个数值轴标题。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-225">The series axis title for 3-D charts or the second value axis title for 2-D charts.</span></span></param>
        <summary><span data-ttu-id="0d9aa-226">修改给定 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的属性。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-226">Modifies the properties of the given <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-227">可以使用此方法来快速设置的格式<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>而无需设置所有单个属性。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-227">You can use this method to quickly format a <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> without setting all the individual properties.</span></span> <span data-ttu-id="0d9aa-228">此方法是非交互式的，它只更改指定的属性。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-228">This method is non-interactive, and it changes only the specified properties.</span></span>  
  
 <span data-ttu-id="0d9aa-229">如果`Source`省略和所选内容不是嵌入的图表在活动工作表或活动工作表上不是现有图表，此方法将失败，出现错误。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-229">If `Source` is omitted and either the selection is not an embedded chart on the active worksheet or the active sheet is not an existing chart, this method fails and an error occurs.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-230">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-230">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-231">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-231">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-232">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartWizard%2A>方法以设置数据源和图表类型与当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-232">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ChartWizard%2A> method to set the data source and the chart type of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#107](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#107)]
 [!code-vb[Trin_ExcelChartSheet#107](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CheckBoxes(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.CheckBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object customDictionary, object ignoreUppercase, object alwaysSuggest, object spellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSpelling(object customDictionary, object ignoreUppercase, object alwaysSuggest, object spellLang) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customDictionary" Type="System.Object" />
        <Parameter Name="ignoreUppercase" Type="System.Object" />
        <Parameter Name="alwaysSuggest" Type="System.Object" />
        <Parameter Name="spellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="customDictionary"><span data-ttu-id="0d9aa-233">一个字符串，指示未在主字典中找到单词时要检查的自定义字典的文件名。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-233">A string that indicates the file name of the custom dictionary to be examined if the word is not found in the main dictionary.</span></span> <span data-ttu-id="0d9aa-234">如果省略此参数，则使用当前指定的字典。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-234">If this argument is omitted, the currently specified dictionary is used.</span></span></param>
        <param name="ignoreUppercase"><span data-ttu-id="0d9aa-235"><see langword="true" /> 表示使 Microsoft Office Excel 忽略全部大写的单词。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-235"><see langword="true" /> to have Microsoft Office Excel ignore words that are all uppercase.</span></span> <span data-ttu-id="0d9aa-236">为 <see langword="false" /> 可使 Microsoft Office Excel 检查全部大写的单词。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-236"><see langword="false" /> to have Microsoft Office Excel check words that are all uppercase.</span></span> <span data-ttu-id="0d9aa-237">如果省略此参数，则使用当前设置。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-237">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="alwaysSuggest"><span data-ttu-id="0d9aa-238"><see langword="true" /> 表示当发现不正确的拼写时让 Excel 显示建议的替换拼写列表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-238"><see langword="true" /> to have Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span></span> <span data-ttu-id="0d9aa-239">如果为 <see langword="false" />，则使 Excel 等待您输入正确的拼写。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-239"><see langword="false" /> to have Excel wait for you to input the correct spelling.</span></span> <span data-ttu-id="0d9aa-240">如果省略此参数，则使用当前设置。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-240">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="spellLang"><span data-ttu-id="0d9aa-241">所使用的字典的语言。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-241">The language of the dictionary being used.</span></span> <span data-ttu-id="0d9aa-242">可以为 <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> 属性使用的 <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-242">Can be one of the <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span></span></param>
        <summary><span data-ttu-id="0d9aa-243">检查 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的拼写。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-243">Checks the spelling of an <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-244">Microsoft Office Excel 显示“拼写检查”对话框</span><span class="sxs-lookup"><span data-stu-id="0d9aa-244">Microsoft Office Excel displays the **Spelling** dialog box</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-245">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-245">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-246">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-246">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-247">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.CheckSpelling%2A>方法来检查在当前拼写<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>使用美国英语字典。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-247">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.CheckSpelling%2A> method to check the spelling in the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> using the US English dictionary.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#108](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#108)]
 [!code-vb[Trin_ExcelChartSheet#108](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearToMatchStyle">
      <MemberSignature Language="C#" Value="public void ClearToMatchStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearToMatchStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ClearToMatchStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d9aa-248">清除格式设置为自动的图表元素。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-248">Clears the chart elements formatting to automatic.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-249">此方法用于重置为自动格式设置的图表元素。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-249">Use this method to reset the chart elements formatting to automatic.</span></span> <span data-ttu-id="0d9aa-250">如果使用此方法时，所有格式设置 （包括重写） 将重置。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-250">If you use this method, all formatting (including overrides) will be reset.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.CodeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Column3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnGroups">
      <MemberSignature Language="C#" Value="public object ColumnGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ColumnGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ColumnGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object before, object after);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy(object before, object after) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Copy(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="before" Type="System.Object" />
        <Parameter Name="after" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="before"><span data-ttu-id="0d9aa-251">将在其之前放置复制表的表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-251">The sheet before which the copied sheet will be placed.</span></span> <span data-ttu-id="0d9aa-252">如果指定 <c>After</c>，则不能指定 <c>Before</c>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-252">You cannot specify <c>Before</c> if you specify <c>after</c>.</span></span></param>
        <param name="after"><span data-ttu-id="0d9aa-253">将在其之后放置复制表的表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-253">The sheet after which the copied sheet will be placed.</span></span> <span data-ttu-id="0d9aa-254">如果指定 <c>Before</c>，则不能指定 <c>After</c>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-254">You cannot specify <c>After</c> if you specify <c>Before</c>.</span></span></param>
        <summary><span data-ttu-id="0d9aa-255">将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 复制到工作簿中的另一位置。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-255">Copies the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> to another location in the workbook.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-256">如果未指定`Before`或`After`，Microsoft Office Excel 将创建包含复制表的表的新工作簿。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-256">If you do not specify either `Before` or `After`, Microsoft Office Excel creates a new workbook that contains the copied sheet.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-257">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-257">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-258">新工作表是<xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName>，其中包含一个图表，不具有代码或数据绑定功能的<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>具有。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-258">The new worksheet is a <xref:Microsoft.Office.Interop.Excel.Worksheet?displayProperty=fullName> that contains a chart and does not have code or data binding capability that the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> has.</span></span>  
  
 <span data-ttu-id="0d9aa-259">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-259">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-260">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Copy%2A>方法复制当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>到新工作表之前工作表位于`Sheet3`。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-260">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Copy%2A> method to copy the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to a new worksheet located before worksheet `Sheet3`.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#110](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#110)]
 [!code-vb[Trin_ExcelChartSheet#110](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyChartBuild">
      <MemberSignature Language="C#" Value="public void CopyChartBuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyChartBuild() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.CopyChartBuild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public void CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance appearance, Microsoft.Office.Interop.Excel.XlCopyPictureFormat format, Microsoft.Office.Interop.Excel.XlPictureAppearance size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyPicture(valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance appearance, valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat format, valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat,Microsoft.Office.Interop.Excel.XlPictureAppearance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
        <Parameter Name="size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
      </Parameters>
      <Docs>
        <param name="appearance"><span data-ttu-id="0d9aa-261">指定复制图片的方法。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-261">Specifies how the picture should be copied.</span></span></param>
        <param name="format"><span data-ttu-id="0d9aa-262">该图片的格式。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-262">The format of the picture.</span></span></param>
        <param name="size"><span data-ttu-id="0d9aa-263">对象为图表工作表上的图表（未嵌入在工作表上）上时复制的图片的大小。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-263">The size of the copied picture when the object is a chart on a chart sheet (not embedded on a worksheet).</span></span></param>
        <summary><span data-ttu-id="0d9aa-264">将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 作为图片复制到剪贴板。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-264">Copies the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> to the Clipboard as a picture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-265">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-265">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-266">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-266">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-267">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.CopyPicture%2A>方法复制当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>到剪贴板作为位图。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-267">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.CopyPicture%2A> method to copy the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to the clipboard as a bitmap.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#111](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#111)]
 [!code-vb[Trin_ExcelChartSheet#111](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#111)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Corners">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Corners Corners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Corners Corners" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Corners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Corners</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public void CreatePublisher (object edition, Microsoft.Office.Interop.Excel.XlPictureAppearance appearance, Microsoft.Office.Interop.Excel.XlPictureAppearance size, object containsPICT, object containsBIFF, object containsRTF, object containsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreatePublisher(object edition, valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance appearance, valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance size, object containsPICT, object containsBIFF, object containsRTF, object containsVALU) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edition" Type="System.Object" />
        <Parameter Name="appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="containsPICT" Type="System.Object" />
        <Parameter Name="containsBIFF" Type="System.Object" />
        <Parameter Name="containsRTF" Type="System.Object" />
        <Parameter Name="containsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="edition">To be added.</param>
        <param name="appearance">To be added.</param>
        <param name="size">To be added.</param>
        <param name="containsPICT">To be added.</param>
        <param name="containsBIFF">To be added.</param>
        <param name="containsRTF">To be added.</param>
        <param name="containsVALU">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-268">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 代码，该代码指示在其中创建 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的应用程序。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-268">Gets an <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> code that indicates the application in which the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> was created.</span></span></summary>
        <value><span data-ttu-id="0d9aa-269"><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-269">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-270">因为<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>创建在 Microsoft Office Excel，此属性返回字符串 XCEL，这与十六进制数 5843454c。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-270">Because the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> was created in Microsoft Office Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ControlBindingsCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ControlBindingsCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlBindingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataHost">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.ICachedDataProvider DataHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.ICachedDataProvider DataHost" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.DataHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.ICachedDataProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataTable DataTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataTable DataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.DataTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-271">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 数据表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-271">Gets a <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> object that represents the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> data table.</span></span></summary>
        <value><span data-ttu-id="0d9aa-272">一个 <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 数据表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-272">A <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> object that represents the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> data table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-273">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.DataTable%2A>属性与当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>在带有边框边框图表中显示数据的表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-273">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.DataTable%2A> property of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to display a data table in the chart with a border outline.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#9)]
 [!code-vb[Trin_ExcelChartSheet#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler Deactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler Deactivate" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.Deactivate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-274">在从 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 移走所选内容以使 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 停用时发生。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-274">Occurs when the selection moves away from the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />, causing the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> to become deactivated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-275">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Deactivate>事件显示一条消息框时当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>停用。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-275">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Deactivate> event that displays a message box when the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> is deactivated.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#204](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#204)]
 [!code-vb[Trin_ExcelChartSheet#204](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#204)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Delete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d9aa-276">删除 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-276">Deletes the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-277">此方法删除基础<xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName>对象，但不会删除<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>主机项，因此，建议不要使用此方法。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-277">This method deletes the underlying <xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName> object but does not delete the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> host item; therefore, it is recommended that this method not be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthPercent">
      <MemberSignature Language="C#" Value="public int DepthPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DepthPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.DepthPercent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-278">获取或设置三维图表的深度（以 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 宽度的百分比形式表示）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-278">Gets or sets the depth of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> width.</span></span></summary>
        <value><span data-ttu-id="0d9aa-279">三维图表的深度，以 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 宽度的百分比形式（介于 20% 到 2000% 之间）表示</span><span class="sxs-lookup"><span data-stu-id="0d9aa-279">The depth of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> width (between 20 and 2000 percent)</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-280">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.DepthPercent%2A>属性设置当前的三维部分的深度<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>宽度的 75%到<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-280">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.DepthPercent%2A> property to set the depth of the 3-D portion of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to 75 percent of the width of the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#10](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#10)]
 [!code-vb[Trin_ExcelChartSheet#10](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deselect">
      <MemberSignature Language="C#" Value="public void Deselect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Deselect() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Deselect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayBlanksAs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.DisplayBlanksAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayBlanksAs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-281">获取或设置在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上绘制空白单元格的方式。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-281">Gets or sets the way that blank cells are plotted on a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-282">以下 <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlNotPlotted" />、<see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlInterpolated" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlZero" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-282">One of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlNotPlotted" />, <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlInterpolated" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlZero" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-283">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.DisplayBlanksAs%2A>属性指定的当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>不会绘制数据区域中的空白单元格。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-283">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.DisplayBlanksAs%2A> property to specify that the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> does not plot blank cells in the data range.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#11](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#11)]
 [!code-vb[Trin_ExcelChartSheet#11](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d9aa-284">释放 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 类的当前实例所使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-284">Releases all resources used by the current instance of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-285">不要调用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Dispose%2A>方法自己。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-285">Do not call the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Dispose%2A> method yourself.</span></span> <span data-ttu-id="0d9aa-286">关闭文档级自定义项中的文档时，[!INCLUDE[vsto_runtime](~/includes/vsto-runtime-md.md)]清理使用自定义项的所有资源。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-286">When the document in a document-level customization is closed, the [!INCLUDE[vsto_runtime](~/includes/vsto-runtime-md.md)] cleans up all resources used by the customization.</span></span>  
  
 <span data-ttu-id="0d9aa-287">有关详细信息<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Dispose%2A>方法，请参阅[清理了非托管资源](http://msdn.microsoft.com/library/a17b0066-71c2-4ba4-9822-8e19332fc213)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-287">For more information about the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Dispose%2A> method, see [Cleaning Up Unmanaged Resources](http://msdn.microsoft.com/library/a17b0066-71c2-4ba4-9822-8e19332fc213).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.Disposed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoughnutGroups">
      <MemberSignature Language="C#" Value="public object DoughnutGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DoughnutGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.DoughnutGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DrawingObjects(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.DrawingObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Drawings(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Drawings(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DropDowns(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.DropDowns(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy24">
      <MemberSignature Language="C#" Value="public bool Dummy24 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy24" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Dummy24" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy25">
      <MemberSignature Language="C#" Value="public bool Dummy25 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy25" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Dummy25" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elevation">
      <MemberSignature Language="C#" Value="public int Elevation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Elevation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Elevation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-288">获取或设置三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的仰角（以度为单位）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-288">Gets or sets the elevation of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />, in degrees.</span></span></summary>
        <value><span data-ttu-id="0d9aa-289">三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的仰角（以度为单位）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-289">The elevation of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />, in degrees.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-290">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Elevation%2A>属性来设置从其提升的当前视图<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>计算为 75 度。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-290">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Elevation%2A> property to set the elevation from which the view of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> is calculated to 75 degrees.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#12](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#12)]
 [!code-vb[Trin_ExcelChartSheet#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public virtual void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Evaluate(object name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Evaluate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0d9aa-291">对象的名称（使用 Microsoft Office Excel 的命名约定）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-291">The name of the object, using the naming convention of Microsoft Office Excel.</span></span></param>
        <summary><span data-ttu-id="0d9aa-292">将 Microsoft Office Excel 名称转换为对象或值。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-292">Converts a Microsoft Office Excel name to an object or a value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public bool Export (string filename, object filterName, object interactive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Export(string filename, object filterName, object interactive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Export(System.String,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="filterName" Type="System.Object" />
        <Parameter Name="interactive" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="0d9aa-293">导出文件的文件名。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-293">The name of the exported file.</span></span></param>
        <param name="filterName"><span data-ttu-id="0d9aa-294">与语言无关的图形筛选器名称（如同其在注册表中所显示的那样）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-294">The language-independent name of the graphic filter as it appears in the registry.</span></span></param>
        <param name="interactive"><span data-ttu-id="0d9aa-295">为 <see langword="true" /> 时，显示包含筛选器特定选项的对话框。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-295"><see langword="true" /> to display the dialog box that contains the filter-specific options.</span></span> <span data-ttu-id="0d9aa-296">如果此参数为 <see langword="false" />，则 Microsoft Office Excel 使用筛选器的默认值。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-296">If this argument is <see langword="false" />, Microsoft Office Excel uses the default values for the filter.</span></span> <span data-ttu-id="0d9aa-297">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-297">The default value is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0d9aa-298">以图形格式导出 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-298">Exports the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> in a graphic format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-299">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-299">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-300">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-300">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-301">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Export%2A>方法将导出当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>为.gif 文件而不会显示文件选项。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-301">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Export%2A> method to export the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> as a .gif file without displaying the file options.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#114](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#114)]
 [!code-vb[Trin_ExcelChartSheet#114](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#114)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType type, object filename, object quality, object includeDocProperties, object ignorePrintAreas, object from, object to, object openAfterPublish, object fixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportAsFixedFormat(valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType type, object filename, object quality, object includeDocProperties, object ignorePrintAreas, object from, object to, object openAfterPublish, object fixedFormatExtClassPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="filename" Type="System.Object" />
        <Parameter Name="quality" Type="System.Object" />
        <Parameter Name="includeDocProperties" Type="System.Object" />
        <Parameter Name="ignorePrintAreas" Type="System.Object" />
        <Parameter Name="from" Type="System.Object" />
        <Parameter Name="to" Type="System.Object" />
        <Parameter Name="openAfterPublish" Type="System.Object" />
        <Parameter Name="fixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0d9aa-302"><see langword="Microsoft.Office.Interop.Excel.XlFixedFormatType" /> 值之一，指定是以 PDF 还是 XPS 格式保存图表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-302">One of the <see langword="Microsoft.Office.Interop.Excel.XlFixedFormatType" /> values that specifies whether to save the chart in PDF or XPS format.</span></span></param>
        <param name="filename"><span data-ttu-id="0d9aa-303">新 PDF 或 XPS 文件的完整路径。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-303">The full path of the new PDF or XPS file.</span></span> <span data-ttu-id="0d9aa-304">如果省略此参数，Excel 会将文件保存在当前文件夹中。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-304">If you omit this parameter, Excel saves the file in the current folder.</span></span></param>
        <param name="quality"><span data-ttu-id="0d9aa-305">其中一个 <see langword="Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> 值，该值指定导出文件的质量。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-305">One of the <see langword="Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> values that specifies the quality of the exported file.</span></span></param>
        <param name="includeDocProperties"><span data-ttu-id="0d9aa-306">如果要在导出的文件中包含文档属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-306"><see langword="true" /> to include document properties in the exported file; otherwise, <see langword="false" />.</span></span></param>
        <param name="ignorePrintAreas"><span data-ttu-id="0d9aa-307">若要在导出时忽略任何打印区域设置，请使用 <see langword="true" />；否则使用 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-307"><see langword="true" /> to ignore any print areas set when exporting; otherwise, <see langword="false" />.</span></span></param>
        <param name="from"><span data-ttu-id="0d9aa-308">要从其处开始导出的页码。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-308">The number of the page at which to start exporting.</span></span> <span data-ttu-id="0d9aa-309">如果省略此参数，则从第一页开始导出。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-309">If this parameter is omitted, exporting starts at the beginning.</span></span></param>
        <param name="to"><span data-ttu-id="0d9aa-310">要发布的最后一页的页码。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-310">The number of the last page to publish.</span></span> <span data-ttu-id="0d9aa-311">如果省略此参数，则发布最后一页后停止发布。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-311">If this parameter is omitted, publishing ends with the last page.</span></span></param>
        <param name="openAfterPublish"><span data-ttu-id="0d9aa-312">如果立即在查看器中打开新文件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-312"><see langword="true" /> to open the new file in the viewer immediately; otherwise, <see langword="false" />.</span></span></param>
        <param name="fixedFormatExtClassPtr"><span data-ttu-id="0d9aa-313">一个指针，指向使图表能够以其他固定格式保存的 <see langword="IMsoDocExporter" /> 接口的实现。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-313">A pointer to an implementation of the <see langword="IMsoDocExporter" /> interface that enables the chart to be saved in a different fixed format.</span></span> <span data-ttu-id="0d9aa-314">有关详细信息，请参阅“扩展 Office (2007) 固定格式导出功能”。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-314">For more information, see Extending the Office (2007) Fixed-Format Export Feature.</span></span></param>
        <summary><span data-ttu-id="0d9aa-315">以 PDF 或 XPS 格式保存 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中显示的图表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-315">Saves the chart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> in PDF or XPS format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-316">您可以将保存为 PDF 或 XPS 文件从 Microsoft Office Excel 才提供此功能的外接程序安装。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-316">You can save as a PDF or XPS file from Microsoft Office Excel only after you install an add-in that provides this feature.</span></span> <span data-ttu-id="0d9aa-317">有关详细信息，搜索"启用支持其他文件格式，如 PDF 和 XPS"Office Online 上。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-317">For more information, search for "Enable support for other file formats, such as PDF and XPS" on Office Online.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-318">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-318">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-319">有关可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-319">For information about optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-320">下面的代码示例将保存图表工作表中的一页`Chart1`以 PDF 格式保存到指定的文件路径和文件名使用标准质量解析。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-320">The following code example saves one page of chart sheet `Chart1` in PDF format to the specified file path and file name using the standard quality resolution.</span></span> <span data-ttu-id="0d9aa-321">生成的 PDF 文件包含工作簿属性。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-321">The generated PDF file includes the workbook properties.</span></span> <span data-ttu-id="0d9aa-322">若要运行此代码示例，您的工作簿必须包含名为图表工作表`Chart1`。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-322">To run this code example, your workbook must contain a chart sheet named `Chart1`.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkbook_Additional#12](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#12)]
 [!code-vb[Trin_ExcelWorkbook_Additional#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishInitialization">
      <MemberSignature Language="C#" Value="protected virtual void FinishInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FinishInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.FinishInitialization" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Floor Floor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Floor Floor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Floor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Floor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-323">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> 对象，该对象表示三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的基底。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-323">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-324"><see cref="T:Microsoft.Office.Interop.Excel.Floor" /> 对象，表示三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的基底。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-324">A <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-325">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Floor%2A>属性来更改当前颜色<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>floor 为绿色。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-325">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Floor%2A> property to change the color of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> floor to green.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#12](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#12)]
 [!code-vb[Trin_ExcelChartSheet#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GapDepth">
      <MemberSignature Language="C#" Value="public int GapDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GapDepth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.GapDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-326">获取或设置三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中的数据系列之间的距离（以标记宽度的百分比形式表示）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-326">Gets or sets the distance between the data series in a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />, as a percentage of the marker width.</span></span></summary>
        <value><span data-ttu-id="0d9aa-327">三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中的数据系列之间的距离（以标记宽度的百分比形式表示）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-327">The distance between the data series in a 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />, as a percentage of the marker width.</span></span> <span data-ttu-id="0d9aa-328">此属性的值必须介于 0 到 500 之间。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-328">The value of this property must be between 0 and 500.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-329">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.GapDepth%2A>属性设置在当前的数据系列之间的距离<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>%到 400%标记宽度。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-329">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.GapDepth%2A> property to set the distance between the data series in the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to 400 percent of the marker width.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#13](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#13)]
 [!code-vb[Trin_ExcelChartSheet#13](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationObject">
      <MemberSignature Language="C#" Value="protected virtual object GetAutomationObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetAutomationObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.GetAutomationObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChartElement">
      <MemberSignature Language="C#" Value="public void GetChartElement (int x, int y, ref int elementID, ref int arg1, ref int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetChartElement(int32 x, int32 y, int32 elementID, int32 arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.GetChartElement(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="elementID" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="arg1" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="arg2" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="0d9aa-330">图表元素的 X 坐标。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-330">The X coordinate of the chart element.</span></span></param>
        <param name="y"><span data-ttu-id="0d9aa-331">图表元素的 Y 坐标。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-331">The Y coordinate of the chart element.</span></span></param>
        <param name="elementID"><span data-ttu-id="0d9aa-332">该方法返回时，此参数包含指定坐标上的图表元素的 <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-332">When the method returns, this argument contains the <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> value of the chart element at the specified coordinates.</span></span> <span data-ttu-id="0d9aa-333">有关更多信息，请参见“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-333">For more information, see the "Remarks" section.</span></span></param>
        <param name="arg1"><span data-ttu-id="0d9aa-334">该方法返回时，此参数包含与图表元素有关的信息。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-334">When the method returns, this argument contains information related to the chart element.</span></span> <span data-ttu-id="0d9aa-335">有关更多信息，请参见“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-335">For more information, see the "Remarks" section.</span></span></param>
        <param name="arg2"><span data-ttu-id="0d9aa-336">该方法返回时，此参数包含与图表元素有关的信息。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-336">When the method returns, this argument contains information related to the chart element.</span></span> <span data-ttu-id="0d9aa-337">有关更多信息，请参见“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-337">For more information, see the "Remarks" section.</span></span></param>
        <summary><span data-ttu-id="0d9aa-338">获取有关指定 X 和 Y 坐标上的图表元素的信息。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-338">Gets information about the chart element at specified X and Y coordinates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-339">此方法比较特殊，，指定只有前两个参数的值。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-339">This method is unusual in that you specify values for only the first two arguments.</span></span> <span data-ttu-id="0d9aa-340">Microsoft Office Excel 填写其他参数，并在方法返回时，你的代码应检查这些值。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-340">Microsoft Office Excel fills in the other arguments, and your code should examine those values when the method returns.</span></span>  
  
 <span data-ttu-id="0d9aa-341">值`ElementID`确定该方法返回后是否`Arg1`和`Arg2`包含任何信息下, 表中所示。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-341">The value of `ElementID` after the method returns determines whether `Arg1` and `Arg2` contain any information, as shown in the following table.</span></span>  
  
|`ElementID`|`Arg1`|`Arg2`|  
|-----------------|------------|------------|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlAxis>|<span data-ttu-id="0d9aa-342">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-342">AxisIndex</span></span>|<span data-ttu-id="0d9aa-343">AxisType</span><span class="sxs-lookup"><span data-stu-id="0d9aa-343">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlAxisTitle>|<span data-ttu-id="0d9aa-344">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-344">AxisIndex</span></span>|<span data-ttu-id="0d9aa-345">AxisType</span><span class="sxs-lookup"><span data-stu-id="0d9aa-345">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDisplayUnitLabel>|<span data-ttu-id="0d9aa-346">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-346">AxisIndex</span></span>|<span data-ttu-id="0d9aa-347">AxisType</span><span class="sxs-lookup"><span data-stu-id="0d9aa-347">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlMajorGridlines>|<span data-ttu-id="0d9aa-348">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-348">AxisIndex</span></span>|<span data-ttu-id="0d9aa-349">AxisType</span><span class="sxs-lookup"><span data-stu-id="0d9aa-349">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlMinorGridlines>|<span data-ttu-id="0d9aa-350">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-350">AxisIndex</span></span>|<span data-ttu-id="0d9aa-351">AxisType</span><span class="sxs-lookup"><span data-stu-id="0d9aa-351">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlPivotChartDropZone>|<span data-ttu-id="0d9aa-352">DropZoneType</span><span class="sxs-lookup"><span data-stu-id="0d9aa-352">DropZoneType</span></span>|<span data-ttu-id="0d9aa-353">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-353">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlPivotChartFieldButton>|<span data-ttu-id="0d9aa-354">DropZoneType</span><span class="sxs-lookup"><span data-stu-id="0d9aa-354">DropZoneType</span></span>|<span data-ttu-id="0d9aa-355">PivotFieldIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-355">PivotFieldIndex</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDownBars>|<span data-ttu-id="0d9aa-356">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-356">GroupIndex</span></span>|<span data-ttu-id="0d9aa-357">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-357">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDropLines>|<span data-ttu-id="0d9aa-358">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-358">GroupIndex</span></span>|<span data-ttu-id="0d9aa-359">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-359">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlHiLoLines>|<span data-ttu-id="0d9aa-360">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-360">GroupIndex</span></span>|<span data-ttu-id="0d9aa-361">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-361">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlRadarAxisLabels>|<span data-ttu-id="0d9aa-362">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-362">GroupIndex</span></span>|<span data-ttu-id="0d9aa-363">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-363">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlSeriesLines>|<span data-ttu-id="0d9aa-364">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-364">GroupIndex</span></span>|<span data-ttu-id="0d9aa-365">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-365">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlUpBars>|<span data-ttu-id="0d9aa-366">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-366">GroupIndex</span></span>|<span data-ttu-id="0d9aa-367">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-367">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlChartArea>|<span data-ttu-id="0d9aa-368">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-368">None</span></span>|<span data-ttu-id="0d9aa-369">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-369">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlChartTitle>|<span data-ttu-id="0d9aa-370">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-370">None</span></span>|<span data-ttu-id="0d9aa-371">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-371">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlCorners>|<span data-ttu-id="0d9aa-372">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-372">None</span></span>|<span data-ttu-id="0d9aa-373">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-373">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDataTable>|<span data-ttu-id="0d9aa-374">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-374">None</span></span>|<span data-ttu-id="0d9aa-375">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-375">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlFloor>|<span data-ttu-id="0d9aa-376">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-376">None</span></span>|<span data-ttu-id="0d9aa-377">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-377">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLeaderLines>|<span data-ttu-id="0d9aa-378">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-378">None</span></span>|<span data-ttu-id="0d9aa-379">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-379">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLegend>|<span data-ttu-id="0d9aa-380">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-380">None</span></span>|<span data-ttu-id="0d9aa-381">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-381">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlNothing>|<span data-ttu-id="0d9aa-382">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-382">None</span></span>|<span data-ttu-id="0d9aa-383">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-383">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlPlotArea>|<span data-ttu-id="0d9aa-384">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-384">None</span></span>|<span data-ttu-id="0d9aa-385">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-385">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlWalls>|<span data-ttu-id="0d9aa-386">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-386">None</span></span>|<span data-ttu-id="0d9aa-387">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-387">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDataLabel>|<span data-ttu-id="0d9aa-388">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-388">SeriesIndex</span></span>|<span data-ttu-id="0d9aa-389">PointIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-389">PointIndex</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlErrorBars>|<span data-ttu-id="0d9aa-390">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-390">SeriesIndex</span></span>|<span data-ttu-id="0d9aa-391">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-391">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLegendEntry>|<span data-ttu-id="0d9aa-392">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-392">SeriesIndex</span></span>|<span data-ttu-id="0d9aa-393">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-393">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLegendKey>|<span data-ttu-id="0d9aa-394">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-394">SeriesIndex</span></span>|<span data-ttu-id="0d9aa-395">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-395">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlSeries>|<span data-ttu-id="0d9aa-396">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-396">SeriesIndex</span></span>|<span data-ttu-id="0d9aa-397">PointIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-397">PointIndex</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlShape>|<span data-ttu-id="0d9aa-398">ShapeIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-398">ShapeIndex</span></span>|<span data-ttu-id="0d9aa-399">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-399">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlTrendline>|<span data-ttu-id="0d9aa-400">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-400">SeriesIndex</span></span>|<span data-ttu-id="0d9aa-401">TrendLineIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-401">TrendLineIndex</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlXErrorBars>|<span data-ttu-id="0d9aa-402">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-402">SeriesIndex</span></span>|<span data-ttu-id="0d9aa-403">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-403">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlYErrorBars>|<span data-ttu-id="0d9aa-404">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-404">SeriesIndex</span></span>|<span data-ttu-id="0d9aa-405">无</span><span class="sxs-lookup"><span data-stu-id="0d9aa-405">None</span></span>|  
  
 <span data-ttu-id="0d9aa-406">下表介绍的含义`Arg1`和`Arg2`方法返回之后。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-406">The following table describes the meaning of `Arg1` and `Arg2` after the method returns.</span></span>  
  
|<span data-ttu-id="0d9aa-407">参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-407">Argument</span></span>|<span data-ttu-id="0d9aa-408">描述</span><span class="sxs-lookup"><span data-stu-id="0d9aa-408">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="0d9aa-409">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-409">AxisIndex</span></span>|<span data-ttu-id="0d9aa-410">指定轴是否为主要或辅助。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-410">Specifies whether the axis is primary or secondary.</span></span> <span data-ttu-id="0d9aa-411">可以是下列 <xref:Microsoft.Office.Interop.Excel.XlAxisGroup> 常数之一：<xref:Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary> 或 <xref:Microsoft.Office.Interop.Excel.XlAxisGroup.xlSecondary>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-411">Can be one of the following <xref:Microsoft.Office.Interop.Excel.XlAxisGroup> constants: <xref:Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary> or <xref:Microsoft.Office.Interop.Excel.XlAxisGroup.xlSecondary>.</span></span>|  
|<span data-ttu-id="0d9aa-412">AxisType</span><span class="sxs-lookup"><span data-stu-id="0d9aa-412">AxisType</span></span>|<span data-ttu-id="0d9aa-413">指定轴类型。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-413">Specifies the axis type.</span></span> <span data-ttu-id="0d9aa-414">可以为以下 <xref:Microsoft.Office.Interop.Excel.XlAxisType> 常数之一：<xref:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory>、<xref:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis> 或 <xref:Microsoft.Office.Interop.Excel.XlAxisType.xlValue>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-414">Can be one of the following <xref:Microsoft.Office.Interop.Excel.XlAxisType> constants: <xref:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory>, <xref:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis>, or <xref:Microsoft.Office.Interop.Excel.XlAxisType.xlValue>.</span></span>|  
|<span data-ttu-id="0d9aa-415">DropZoneType</span><span class="sxs-lookup"><span data-stu-id="0d9aa-415">DropZoneType</span></span>|<span data-ttu-id="0d9aa-416">指定拖放区域类型： 列、 数据、 页或行字段。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-416">Specifies the drop zone type: column, data, page, or row field.</span></span> <span data-ttu-id="0d9aa-417">可以是以下值之一<xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation>常量： <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField>， <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField>， <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField>，或<xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-417">Can be one of the following <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation> constants: <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField>, <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField>, <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField>, or <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField>.</span></span> <span data-ttu-id="0d9aa-418">列和行字段常量分别指定序列和类别字段。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-418">The column and row field constants specify the series and category fields, respectively.</span></span>|  
|<span data-ttu-id="0d9aa-419">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-419">GroupIndex</span></span>|<span data-ttu-id="0d9aa-420">指定的偏移量中<xref:Microsoft.Office.Interop.Excel.ChartGroups?displayProperty=fullName>特定图表组的集合。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-420">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.ChartGroups?displayProperty=fullName> collection for a specific chart group.</span></span>|  
|<span data-ttu-id="0d9aa-421">PivotFieldIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-421">PivotFieldIndex</span></span>|<span data-ttu-id="0d9aa-422">指定特定列 （系列）、 数据、 页或行 （类别） 字段的 T:Microsoft.Office.Interop.Excel.PivotFields 集合内的偏移量。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-422">Specifies the offset within the T:Microsoft.Office.Interop.Excel.PivotFields collection for a specific column (series), data, page, or row (category) field.</span></span> <span data-ttu-id="0d9aa-423">拖放区域类型则为-1 <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-423">-1 if the drop zone type is <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField>.</span></span>|  
|<span data-ttu-id="0d9aa-424">PointIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-424">PointIndex</span></span>|<span data-ttu-id="0d9aa-425">指定的偏移量中<xref:Microsoft.Office.Interop.Excel.Points>内一系列的特定点的集合。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-425">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.Points> collection for a specific point within a series.</span></span> <span data-ttu-id="0d9aa-426">值为 – 1 指示已选择所有数据点。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-426">A value of – 1 indicates that all data points are selected.</span></span>|  
|<span data-ttu-id="0d9aa-427">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-427">SeriesIndex</span></span>|<span data-ttu-id="0d9aa-428">指定的偏移量中<xref:Microsoft.Office.Interop.Excel.Series>特定系列的集合。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-428">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.Series> collection for a specific series.</span></span>|  
|<span data-ttu-id="0d9aa-429">ShapeIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-429">ShapeIndex</span></span>|<span data-ttu-id="0d9aa-430">指定的偏移量中<xref:Microsoft.Office.Interop.Excel.Shapes>特定形状的集合。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-430">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.Shapes> collection for a specific shape.</span></span>|  
|<span data-ttu-id="0d9aa-431">TrendlineIndex</span><span class="sxs-lookup"><span data-stu-id="0d9aa-431">TrendlineIndex</span></span>|<span data-ttu-id="0d9aa-432">指定的偏移量中<xref:Microsoft.Office.Interop.Excel.Trendlines>一系列中的特定趋势线的集合。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-432">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.Trendlines> collection for a specific trendline within a series.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-433">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.GetChartElement%2A>方法，以便当用户单击该图表显示的图表元素。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-433">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.GetChartElement%2A> method to display the chart element when a user clicks the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#115](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#115)]
 [!code-vb[Trin_ExcelChartSheet#115](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GroupBoxes(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.GroupBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GroupObjects(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.GroupObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAxis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Excel.ChartSheet_HasAxisType HasAxis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Excel.ChartSheet_HasAxisType HasAxis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.ChartSheet_HasAxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-434">获取或设置一个值，该值指示特定轴是否存在于 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-434">Gets or sets a value indicating whether a specific axis exists on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-435">如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上存在指定的轴，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-435"><see langword="true" /> if the specified axis exists on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-436">使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A>属性以隐藏或显示特定的轴上<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-436">Use the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A> property to hide or show a particular axis on a <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span> <span data-ttu-id="0d9aa-437"><xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A>属性应与以下参数一起使用。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-437">The <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A> property is intended to be used with the following parameters.</span></span>  
  
|<span data-ttu-id="0d9aa-438">参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-438">Parameter</span></span>|<span data-ttu-id="0d9aa-439">描述</span><span class="sxs-lookup"><span data-stu-id="0d9aa-439">Description</span></span>|  
|---------------|-----------------|  
|`Index1`|<span data-ttu-id="0d9aa-440">其中一个<xref:Microsoft.Office.Interop.Excel.XlAxisType>值，该值指定轴类型。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-440">One of the <xref:Microsoft.Office.Interop.Excel.XlAxisType> values that specifies the axis type.</span></span> <span data-ttu-id="0d9aa-441">系列轴仅应用于三维图表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-441">Series axes apply only to 3-D charts.</span></span>|  
|`Index2`|<span data-ttu-id="0d9aa-442">其中一个<xref:Microsoft.Office.Interop.Excel.XlAxisGroup>值，该值指定轴组。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-442">One of the <xref:Microsoft.Office.Interop.Excel.XlAxisGroup> values that specifies the axis group.</span></span> <span data-ttu-id="0d9aa-443">三维图表有只有一组轴。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-443">3-D charts have only one set of axes.</span></span>|  
  
 <span data-ttu-id="0d9aa-444">如果尝试使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A>无需指定参数，<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A>将获取<xref:Microsoft.Office.Tools.Excel.ChartSheet._HasAxisType>对象，它是 Visual Studio 基础结构的一部分，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-444">If you attempt to use <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A> without specifying parameters, <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A> will get a <xref:Microsoft.Office.Tools.Excel.ChartSheet._HasAxisType> object that is part of the Visual Studio infrastructure and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="0d9aa-445">Microsoft Office Excel 可能会创建或删除轴，如果更改图表类型或<xref:Microsoft.Office.Interop.Excel.Axis.AxisGroup%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-445">Microsoft Office Excel may create or delete axes if you change the chart type or the <xref:Microsoft.Office.Interop.Excel.Axis.AxisGroup%2A> property.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-446">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-446">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-447">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-447">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-448">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A>属性来隐藏当前的主类别轴<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-448">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasAxis%2A> property to hide the primary category axis of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#29](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#29)]
 [!code-vb[Trin_ExcelChartSheet#29](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDataTable">
      <MemberSignature Language="C#" Value="public bool HasDataTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.HasDataTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-449">获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 是否包含数据表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-449">Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> has a data table.</span></span></summary>
        <value><span data-ttu-id="0d9aa-450">如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 包含数据表，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-450"><see langword="true" /> if the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> has a data table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-451">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasDataTable%2A>并<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.DataTable%2A>属性，以显示数据的表在当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>带有边框的边框。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-451">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HasDataTable%2A> and <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.DataTable%2A> properties to display a data table in the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> with a border outline.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#9)]
 [!code-vb[Trin_ExcelChartSheet#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLegend">
      <MemberSignature Language="C#" Value="public bool HasLegend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLegend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.HasLegend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-452">获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 是否包含图例。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-452">Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> has a legend.</span></span></summary>
        <value><span data-ttu-id="0d9aa-453">如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 包含图例，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-453"><see langword="true" /> if the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> has a legend.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPivotFields">
      <MemberSignature Language="C#" Value="public bool HasPivotFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPivotFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.HasPivotFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTitle">
      <MemberSignature Language="C#" Value="public bool HasTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.HasTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-454">获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 是否包含可见标题。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-454">Gets or sets a value the indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> has a visible title.</span></span></summary>
        <value><span data-ttu-id="0d9aa-455">如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 包含可见标题，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-455"><see langword="true" /> if the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> has a visible title.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-456">一个<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>标题由<xref:Microsoft.Office.Interop.Excel.ChartTitle>对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-456">A <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> title is represented by a <xref:Microsoft.Office.Interop.Excel.ChartTitle> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeightPercent">
      <MemberSignature Language="C#" Value="public int HeightPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HeightPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.HeightPercent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-457">获取或设置三维图表的高度（以 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 宽度的百分比形式表示）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-457">Gets or sets the height of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> width.</span></span></summary>
        <value><span data-ttu-id="0d9aa-458">三维图表的高度，以 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 宽度的百分比形式（介于 5% 到 500% 之间）表示。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-458">The height of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> width (between 5 and 500 percent).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-459">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HeightPercent%2A>属性设置的当前高度<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>%到 50%的宽度<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-459">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.HeightPercent%2A> property to set the height of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to 50 percent of the width of the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#14](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#14)]
 [!code-vb[Trin_ExcelChartSheet#14](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public IServiceProvider HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider HostContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.HostContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Hyperlinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-460">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的超链接。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-460">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-461">一个 <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的超链接。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-461">A <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-462">获取 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的索引号。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-462">Gets the index number of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-463"><see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的索引号。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-463">The index number of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Initialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeDataBindings">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.InitializeDataBindings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart InnerObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart InnerObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.InnerObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-464">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Chart" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的基础本机对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-464">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-465">一个 <see cref="T:Microsoft.Office.Interop.Excel.Chart" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的基础本机对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-465">A <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemProvider">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.IHostItemProvider ItemProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.IHostItemProvider ItemProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ItemProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.IHostItemProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Labels(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Labels(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Legend Legend { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Legend Legend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Legend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Legend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-466">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Legend" />，它表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的图例。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-466">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> that represents the legend for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-467">一个 <see cref="T:Microsoft.Office.Interop.Excel.Legend" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的图例。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-467">A <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> that represents the legend for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-468">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Legend%2A>属性以修改在当前图例边框的颜色<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-468">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Legend%2A> property to modify the color of the legend border in the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#15](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#15)]
 [!code-vb[Trin_ExcelChartSheet#15](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Line3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Line3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineGroups">
      <MemberSignature Language="C#" Value="public object LineGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LineGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.LineGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Lines(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Lines(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ListBoxes(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ListBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Location (Microsoft.Office.Interop.Excel.XlChartLocation where, object name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Office.Interop.Excel.Chart Location(valuetype Microsoft.Office.Interop.Excel.XlChartLocation where, object name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Location(Microsoft.Office.Interop.Excel.XlChartLocation,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="where" Type="Microsoft.Office.Interop.Excel.XlChartLocation" />
        <Parameter Name="name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="where"><span data-ttu-id="0d9aa-469"><see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" /> 值之一，指定要在何处移动图表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-469">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" /> values that specify where to move the chart.</span></span></param>
        <param name="name"><span data-ttu-id="0d9aa-470">图表将嵌入的工作表的名称（<c>Where</c> 为 <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsObject" /> 时），或新工作表的名称（<c>Where</c> 为 <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsNewSheet" /> 时）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-470">The name of the sheet where the chart will be embedded if <c>Where</c> is <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsObject" /> or the name of the new sheet if <c>Where</c> is <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsNewSheet" />.</span></span></param>
        <summary><span data-ttu-id="0d9aa-471">将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 移至新位置。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-471">Moves the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> to a new location.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-472">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Location%2A>方法来移动当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>到名为"NewSheet"的新工作表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-472">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Location%2A> method to move the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to a new worksheet named "NewSheet".</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#117](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#117)]
 [!code-vb[Trin_ExcelChartSheet#117](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#117)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.MailEnvelope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-473">表示文档的电子邮件标头。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-473">Represents an e-mail header for a document.</span></span></summary>
        <value><span data-ttu-id="0d9aa-474"><see cref="T:Microsoft.Office.Core.MsoEnvelope" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-474">One of the <see cref="T:Microsoft.Office.Core.MsoEnvelope" /> values.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.BeginInit">
      <MemberSignature Language="C#" Value="void EntryPoint.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#EntryPoint#BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.EndInit">
      <MemberSignature Language="C#" Value="void EntryPoint.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#EntryPoint#EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.FinishInitialization">
      <MemberSignature Language="C#" Value="void EntryPoint.FinishInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.FinishInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#EntryPoint#FinishInitialization" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.Initialize">
      <MemberSignature Language="C#" Value="void EntryPoint.Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#EntryPoint#Initialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.InitializeDataBindings">
      <MemberSignature Language="C#" Value="void EntryPoint.InitializeDataBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.InitializeDataBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#EntryPoint#InitializeDataBindings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.OnShutdown">
      <MemberSignature Language="C#" Value="void EntryPoint.OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#EntryPoint#OnShutdown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.EntryPoint.OnStartup">
      <MemberSignature Language="C#" Value="void EntryPoint.OnStartup ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Office.Tools.EntryPoint.OnStartup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#EntryPoint#OnStartup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.Excel.IChartSheetExtension.GetAutomationObject">
      <MemberSignature Language="C#" Value="object IChartSheetExtension.GetAutomationObject ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Microsoft.Office.Tools.Excel.IChartSheetExtension.GetAutomationObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#Excel#IChartSheetExtension#GetAutomationObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Office.Tools.IExtension.ExtensionBase">
      <MemberSignature Language="C#" Value="object Microsoft.Office.Tools.IExtension.ExtensionBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Microsoft.Office.Tools.IExtension.ExtensionBase" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Microsoft#Office#Tools#IExtension#ExtensionBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseDown" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-475">在指针位于 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上而按下鼠标按钮时发生。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-475">Occurs when a mouse button is pressed when the pointer is over a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-476">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseDown>事件时鼠标指针位于当前按下鼠标将显示一个消息框<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-476">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseDown> event that displays a message box when the mouse is pressed while the pointer is over the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span> <span data-ttu-id="0d9aa-477">此示例还使用`x`和`y`事件处理程序，以显示鼠标指针的坐标的参数。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-477">The example also uses the `x` and `y` parameters of the event handler to display the coordinates of the mouse pointer.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#205](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#205)]
 [!code-vb[Trin_ExcelChartSheet#205](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#205)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseMove" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-478">在鼠标指针的位置在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上更改时发生。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-478">Occurs when the position of the mouse pointer changes over the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-479">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseMove>事件时鼠标指针移动到当前显示的消息框<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>时按下主鼠标按钮。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-479">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseMove> event that displays a message box when the mouse pointer moves over the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> while the primary mouse button is being pressed.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#206](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#206)]
 [!code-vb[Trin_ExcelChartSheet#206](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#206)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseUp" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-480">在指针位于 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上时释放鼠标按钮时发生。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-480">Occurs when a mouse button is released when the pointer is over the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-481">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseUp>事件，当鼠标指针位于当前并释放鼠标按钮时显示一个消息框<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-481">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.MouseUp> event that displays a message box when the mouse button is released while the pointer is over the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span> <span data-ttu-id="0d9aa-482">此示例还使用`x`和`y`事件处理程序，以显示鼠标指针的坐标的参数。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-482">The example also uses the `x` and `y` parameters of the event handler to display the coordinates of the mouse pointer.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#207](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#207)]
 [!code-vb[Trin_ExcelChartSheet#207](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#207)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object before, object after);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Move(object before, object after) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Move(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="before" Type="System.Object" />
        <Parameter Name="after" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="before"><span data-ttu-id="0d9aa-483">移动工作表的放置位置之后的工作表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-483">The sheet before which the moved sheet will be placed.</span></span> <span data-ttu-id="0d9aa-484">如果指定 <c>after</c>，则不能指定 <c>before</c>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-484">You cannot specify <c>before</c> if you specify <c>after</c>.</span></span></param>
        <param name="after"><span data-ttu-id="0d9aa-485">移动工作表的放置位置之前的工作表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-485">The sheet after which the moved sheet will be placed.</span></span> <span data-ttu-id="0d9aa-486">如果指定 <c>before</c>，则不能指定 <c>after</c>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-486">You cannot specify <c>after</c> if you specify <c>before</c>.</span></span></param>
        <summary><span data-ttu-id="0d9aa-487">将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 移至工作簿中的另一位置。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-487">Moves the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> to another location in the workbook.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-488">如果未指定`Before`或`After`，Microsoft Office Excel 将创建包含移动的工作表的新工作簿。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-488">If you do not specify either `Before` or `After`, Microsoft Office Excel creates a new workbook that contains the moved sheet.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-489">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-489">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-490">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-490">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-491">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Move%2A>方法来移动当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>到工作表之前`Sheet3`。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-491">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Move%2A> method to move the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to before worksheet `Sheet3`.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#118](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#118)]
 [!code-vb[Trin_ExcelChartSheet#118](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#118)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-492">获取或设置 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-492">Gets or sets the name of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-493"><see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-493">The name of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-494">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Name%2A>属性设置的当前名称<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>到"WidgetSales"。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-494">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Name%2A> property to set the name of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to "WidgetSales".</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#17](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#17)]
 [!code-vb[Trin_ExcelChartSheet#17](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Next" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-495">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象，该对象表示下一个工作表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-495">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet.</span></span></summary>
        <value><span data-ttu-id="0d9aa-496">一个 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象，表示下一个工作表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-496">A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-497">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Next%2A>并<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Previous%2A>属性，以显示当前的下一步和上一个工作表名称<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-497">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Next%2A> and <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Previous%2A> properties to display the names of the next and previous sheets for the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#28](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#28)]
 [!code-vb[Trin_ExcelChartSheet#28](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object OLEObjects(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.OLEObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0d9aa-498">OLE 对象的名称或编号。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-498">The name or number of the OLE object.</span></span></param>
        <summary><span data-ttu-id="0d9aa-499">获取一个对象，该对象表示图表或工作表上的单个 OLE 对象（<see cref="T:Microsoft.Office.Interop.Excel.OLEObject" /> 对象）或所有 OLE 对象的集合（<see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> 集合）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-499">Gets an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-500">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.OLEObjects%2A>方法以获取 OLE 的集合对象上当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-500">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.OLEObjects%2A> method to get the collection of OLE objects on the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#119](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#119)]
 [!code-vb[Trin_ExcelChartSheet#119](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#119)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.OnDoubleClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.OnSheetActivate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.OnSheetDeactivate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShutdown">
      <MemberSignature Language="C#" Value="protected virtual void OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.OnShutdown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStartup">
      <MemberSignature Language="C#" Value="protected virtual void OnStartup ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStartup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.OnStartup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object OptionButtons(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.OptionButtons(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Ovals(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Ovals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.PageSetup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-501">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" />，它包含 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的所有页面设置。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-501">Gets a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> that contains all the page setup settings for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-502">一个 <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" />，包含 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的所有页面设置。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-502">A <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> that contains all the page setup settings for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-503">获取 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的父对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-503">Gets the parent object for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-504"><see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的父对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-504">The parent object for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Paste(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0d9aa-505">如果图表位于剪贴板上，则指定要粘贴的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 信息。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-505">Specifies the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> information to paste if a chart is on the Clipboard.</span></span> <span data-ttu-id="0d9aa-506">可以为以下 <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormats" />、<see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulas" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-506">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormats" />, <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulas" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />.</span></span> <span data-ttu-id="0d9aa-507">默认值为 <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-507">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />.</span></span> <span data-ttu-id="0d9aa-508">如果剪贴板上有图表之外的数据，则不能使用此参数。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-508">If there is data other than a chart on the Clipboard, this argument cannot be used.</span></span></param>
        <summary><span data-ttu-id="0d9aa-509">将图表数据从剪贴板粘贴到指定的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-509">Pastes chart data from the Clipboard into the specified <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-510">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Paste%2A>方法以将其他范围数据从剪贴板粘贴到当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-510">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Paste%2A> method to paste additional range data from the Clipboard into the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#120](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#120)]
 [!code-vb[Trin_ExcelChartSheet#120](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Perspective">
      <MemberSignature Language="C#" Value="public int Perspective { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Perspective" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-511">获取或设置三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的透视系数。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-511">Gets or sets the perspective for the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-512">三维图表视图的透视系数。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-512">The perspective for the 3-D chart view.</span></span> <span data-ttu-id="0d9aa-513">必须介于 0 到 100 之间。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-513">Must be between 0 and 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-514">如果忽略此属性<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.RightAngleAxes%2A>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-514">This property is ignored if the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.RightAngleAxes%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-515">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A>属性设置的当前视图角度<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>为 45 度。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-515">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A> property to set the view perspective of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to 45 degrees.</span></span> <span data-ttu-id="0d9aa-516">该示例设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.RightAngleAxes%2A>属性设置为`false`之前设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-516">The example sets the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.RightAngleAxes%2A> property to `false` before setting the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A> property.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#18](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#18)]
 [!code-vb[Trin_ExcelChartSheet#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Pictures(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Pictures(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pie3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Pie3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PieGroups">
      <MemberSignature Language="C#" Value="public object PieGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PieGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.PieGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotLayout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotLayout PivotLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotLayout PivotLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.PivotLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-517">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" />，它表示数据透视图中字段的位置和数据透视图中轴的位置。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-517">Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</span></span></summary>
        <value><span data-ttu-id="0d9aa-518">一个 <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" />，表示数据透视图中字段的位置和数据透视图中轴的位置。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-518">A <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-519">如果<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>不是数据透视图报表，此属性的值是`null`。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-519">If the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> is not a PivotChart report, the value of this property is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PlotArea PlotArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PlotArea PlotArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.PlotArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PlotArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-520">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的绘图区。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-520">Gets a <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-521">一个 <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的绘图区。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-521">A <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-522">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.PlotArea%2A>属性与当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>更改图表的绘图区周围边框的颜色。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-522">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.PlotArea%2A> property of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to change the color of the border around the plot area of the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#20](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#20)]
 [!code-vb[Trin_ExcelChartSheet#20](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotBy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlRowCol PlotBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlRowCol PlotBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.PlotBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlRowCol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-523">获取或设置在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上将列或行用作数据系列的方式。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-523">Gets or sets the way columns or rows are used as data series on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-524">以下 <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-524">One of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-525">对于数据透视图报表，此属性是只读的并且始终返回<xref:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-525">For PivotChart reports, this property is read-only and always returns <xref:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-526">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.PlotBy%2A>属性设置当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>可按行显示数据。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-526">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.PlotBy%2A> property to set the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to display data by rows.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#21](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#21)]
 [!code-vb[Trin_ExcelChartSheet#21](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotVisibleOnly">
      <MemberSignature Language="C#" Value="public bool PlotVisibleOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PlotVisibleOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.PlotVisibleOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-527">获取或设置一个值，该值指示是否只绘制可见单元格。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-527">Gets or sets a value that indicates whether only visible cells are plotted.</span></span></summary>
        <value><span data-ttu-id="0d9aa-528">如果只绘制可见单元格，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-528"><see langword="true" /> if only visible cells are plotted.</span></span> <span data-ttu-id="0d9aa-529">如果可见单元格和隐藏单元格都要绘制，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-529"><see langword="false" /> if both visible and hidden cells are plotted.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Previous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-530">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象，该对象表示前一个工作表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-530">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet.</span></span></summary>
        <value><span data-ttu-id="0d9aa-531">一个 <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> 对象，表示前一个工作表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-531">A <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-532">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Next%2A>并<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Previous%2A>属性，以显示当前的下一步和上一个工作表名称<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-532">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Next%2A> and <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Previous%2A> properties to display the names of the next and previous sheets for the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#28](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#28)]
 [!code-vb[Trin_ExcelChartSheet#28](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.PrintedCommentPages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-533">获取要为当前图表工作表打印的注释页的数目。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-533">Gets the number of comment pages that will be printed for the current chart sheet.</span></span> <span data-ttu-id="0d9aa-534">此属性只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-534">This property can be used only in [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] projects.</span></span></summary>
        <value><span data-ttu-id="0d9aa-535">要为当前图表工作表打印的注释页的数目。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-535">The number of comment pages that will be printed for the current chart sheet.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-536">因为图表和图表工作表不支持注释<xref:Microsoft.Office.Tools.Excel.ChartSheet.PrintedCommentPages%2A>属性的<xref:Microsoft.Office.Tools.Excel.ChartSheet>对象将始终返回零。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-536">Because charts and chart sheets do not support comments, the <xref:Microsoft.Office.Tools.Excel.ChartSheet.PrintedCommentPages%2A> property of the <xref:Microsoft.Office.Tools.Excel.ChartSheet> object will always return zero.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d9aa-537">此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-537">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="0d9aa-538">但是，此属性不能使用 Excel 2007 项目中。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-538">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="0d9aa-539">此属性用于 Excel 2007 项目。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-539">This property is used in an Excel 2007 project.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Object" />
        <Parameter Name="to" Type="System.Object" />
        <Parameter Name="copies" Type="System.Object" />
        <Parameter Name="preview" Type="System.Object" />
        <Parameter Name="activePrinter" Type="System.Object" />
        <Parameter Name="printToFile" Type="System.Object" />
        <Parameter Name="collate" Type="System.Object" />
        <Parameter Name="prToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="from">To be added.</param>
        <param name="to">To be added.</param>
        <param name="copies">To be added.</param>
        <param name="preview">To be added.</param>
        <param name="activePrinter">To be added.</param>
        <param name="printToFile">To be added.</param>
        <param name="collate">To be added.</param>
        <param name="prToFileName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintOutEx(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Object" />
        <Parameter Name="to" Type="System.Object" />
        <Parameter Name="copies" Type="System.Object" />
        <Parameter Name="preview" Type="System.Object" />
        <Parameter Name="activePrinter" Type="System.Object" />
        <Parameter Name="printToFile" Type="System.Object" />
        <Parameter Name="collate" Type="System.Object" />
        <Parameter Name="prToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="from"><span data-ttu-id="0d9aa-540">要从其处开始打印的页码。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-540">The number of the page at which to start printing.</span></span> <span data-ttu-id="0d9aa-541">如果省略此参数，则打印从第一页开始。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-541">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="to"><span data-ttu-id="0d9aa-542">要打印的最后一页的页码。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-542">The number of the last page to print.</span></span> <span data-ttu-id="0d9aa-543">若忽略此参数，则打印至最后一页。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-543">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="copies"><span data-ttu-id="0d9aa-544">要打印的份数。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-544">The number of copies to print.</span></span> <span data-ttu-id="0d9aa-545">如果忽略此参数，则打印一份。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-545">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="preview"><span data-ttu-id="0d9aa-546">若要在打印对象前让 Microsoft Office Excel 调用打印预览，请使用 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-546"><see langword="true" /> to have Microsoft Office Excel invoke print preview before printing the object.</span></span> <span data-ttu-id="0d9aa-547">为 <see langword="false" />（或省略）时，立即打印对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-547"><see langword="false" /> (or omitted) to print the object immediately.</span></span></param>
        <param name="activePrinter"><span data-ttu-id="0d9aa-548">设置活动打印机的名称。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-548">Sets the name of the active printer.</span></span></param>
        <param name="printToFile"><span data-ttu-id="0d9aa-549">若要打印到文件，请使用 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-549"><see langword="true" /> to print to a file.</span></span> <span data-ttu-id="0d9aa-550">若未指定 <c>prToFileName</c>，则 Excel 会提示用户输入输出文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-550">If <c>prToFileName</c> is not specified, Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="collate"><span data-ttu-id="0d9aa-551">若逐份打印多个副本，请使用 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-551"><see langword="true" /> to collate multiple copies.</span></span></param>
        <param name="prToFileName"><span data-ttu-id="0d9aa-552">要打印到的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-552">The name of the file to print to.</span></span> <span data-ttu-id="0d9aa-553">只有在 <c>printToFile</c> 为 <see langword=" true" /> 时，才使用此参数。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-553">This parameter is used only if <c>printToFile</c> is<see langword=" true" />.</span></span></param>
        <summary><span data-ttu-id="0d9aa-554">打印 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中显示的图表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-554">Prints the chart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-555">"页"中的说明`From`和`To`打印页面是指 — 不是所有页中表或工作簿。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-555">"Pages" in the descriptions of `From` and `To` refers to printed pages— not overall pages in the sheet or workbook.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-556">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-556">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-557">有关可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-557">For information about optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-558">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.PrintOutEx%2A>方法以打印一份图表工作表的前两页`Chart1`到默认打印机。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-558">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.PrintOutEx%2A> method to print one copy of the first two pages of the chart sheet `Chart1` to the default printer.</span></span> <span data-ttu-id="0d9aa-559">若要运行此代码示例，您的工作簿必须包含名为图表工作表`Chart1`。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-559">To run this code example, your workbook must contain a chart sheet named `Chart1`.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkBook_Additional#16](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#16)]
 [!code-vb[Trin_ExcelWorkBook_Additional#16](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object enableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintPreview(object enableChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.PrintPreview(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enableChanges">To be added.</param>
        <summary><span data-ttu-id="0d9aa-560">显示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 打印效果的预览。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-560">Shows a preview of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> as it would look when printed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-561">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.PrintPreview%2A>方法以预览当前打印输出<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-561">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.PrintPreview%2A> method to preview the printout of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#123](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#123)]
 [!code-vb[Trin_ExcelChartSheet#123](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object password, object drawingObjects, object contents, object scenarios, object userInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Protect(object password, object drawingObjects, object contents, object scenarios, object userInterfaceOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.Object" />
        <Parameter Name="drawingObjects" Type="System.Object" />
        <Parameter Name="contents" Type="System.Object" />
        <Parameter Name="scenarios" Type="System.Object" />
        <Parameter Name="userInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="0d9aa-562">一个字符串，指定工作表或工作簿的区分大小写的密码。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-562">A string that specifies a case-sensitive password for the worksheet or workbook.</span></span> <span data-ttu-id="0d9aa-563">如果省略此参数，则不使用密码就可以取消对工作表或工作簿的保护。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-563">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span></span> <span data-ttu-id="0d9aa-564">否则，必须指定用来取消对工作表或工作簿的保护的密码。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-564">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span></span> <span data-ttu-id="0d9aa-565">如果忘记了密码，则无法取消对工作表或工作簿的保护。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-565">If you forget the password, you cannot unprotect the worksheet or workbook.</span></span> <span data-ttu-id="0d9aa-566">最好将密码及其对应文档名的列表保存在安全的位置。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-566">It is a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span></span></param>
        <param name="drawingObjects"><span data-ttu-id="0d9aa-567">为 <see langword="true" /> 时保护形状。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-567"><see langword="true" /> to protect shapes.</span></span> <span data-ttu-id="0d9aa-568">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-568">The default value is <see langword="false" />.</span></span></param>
        <param name="contents"><span data-ttu-id="0d9aa-569">为 <see langword="true" /> 时保护内容。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-569"><see langword="true" /> to protect contents.</span></span> <span data-ttu-id="0d9aa-570">对于图表而言，这将保护整个图表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-570">For a chart, this protects the entire chart.</span></span> <span data-ttu-id="0d9aa-571">对于工作表而言，这将保护锁定的单元格。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-571">For a worksheet, this protects the locked cells.</span></span> <span data-ttu-id="0d9aa-572">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-572">The default value is <see langword="true" />.</span></span></param>
        <param name="scenarios"><span data-ttu-id="0d9aa-573">为 <see langword="true" /> 时保护方案。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-573"><see langword="true" /> to protect scenarios.</span></span> <span data-ttu-id="0d9aa-574">此参数仅对工作表有效。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-574">This argument is valid only for worksheets.</span></span> <span data-ttu-id="0d9aa-575">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-575">The default value is <see langword="true" />.</span></span></param>
        <param name="userInterfaceOnly"><span data-ttu-id="0d9aa-576">为 <see langword="true" /> 可保护用户界面，但不保护宏。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-576"><see langword="true" /> to protect the user interface, but not macros.</span></span> <span data-ttu-id="0d9aa-577">如果省略此参数，则同时对宏和用户界面应用保护。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-577">If this argument is omitted, protection applies both to macros and to the user interface.</span></span></param>
        <summary><span data-ttu-id="0d9aa-578">保护 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 以便不能对其进行修改。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-578">Protects a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> so that it cannot be modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-579">使用组合和小写字母、 数字和符号的强密码。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-579">Use strong passwords that combine upper- and lowercase letters, numbers, and symbols.</span></span> <span data-ttu-id="0d9aa-580">弱密码不混合使用这些元素。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-580">Weak passwords do not mix these elements.</span></span> <span data-ttu-id="0d9aa-581">强密码： Y6dh ！ et5。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-581">Strong password: Y6dh!et5.</span></span> <span data-ttu-id="0d9aa-582">弱密码： House27。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-582">Weak password: House27.</span></span> <span data-ttu-id="0d9aa-583">使用，以便无需将其记下可以记住的强密码。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-583">Use a strong password that you can remember so that you do not have to write it down.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-584">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-584">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-585">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-585">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-586">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Protect%2A>方法来保护所有内容的当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-586">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Protect%2A> method to protect all contents of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span> <span data-ttu-id="0d9aa-587">该示例然后使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectContents%2A>属性以验证图表工作表受到保护，然后会提示用户使用从图表工作表中删除保护<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Unprotect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-587">The example then uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectContents%2A> property to verify that the chart sheet is protected, and then prompts the user to remove protection from the chart sheet by using the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Unprotect%2A> method.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#124](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#124)]
 [!code-vb[Trin_ExcelChartSheet#124](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#124)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectContents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-588">获取一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的内容是否受保护。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-588">Gets a value that indicates whether the contents of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> are protected.</span></span></summary>
        <value><span data-ttu-id="0d9aa-589">如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的内容受保护，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-589"><see langword="true" /> if the contents of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> are protected.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-590">这将保护整个<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-590">This protects the entire <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-591">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Protect%2A>方法来保护所有内容的当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-591">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Protect%2A> method to protect all contents of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span> <span data-ttu-id="0d9aa-592">该示例然后使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectContents%2A>属性以验证图表工作表受到保护，然后会提示用户使用从图表工作表中删除保护<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Unprotect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-592">The example then uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectContents%2A> property to verify that the chart sheet is protected, and then prompts the user to remove protection from the chart sheet by using the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Unprotect%2A> method.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#124](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#124)]
 [!code-vb[Trin_ExcelChartSheet#124](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#124)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectData">
      <MemberSignature Language="C#" Value="public bool ProtectData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-593">获取或设置一个值，该值指示用户是否无法修改系列公式。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-593">Gets or sets a value that indicates whether series formulas cannot be modified by the user.</span></span></summary>
        <value><span data-ttu-id="0d9aa-594">如果用户不能修改系列公式，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-594"><see langword="true" /> if series formulas cannot be modified by the user; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectDrawingObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-595">获取一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上的形状是否受保护。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-595">Gets a value that indicates whether shapes are protected on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-596">如果形状受保护，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-596"><see langword="true" /> if shapes are protected.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectFormatting">
      <MemberSignature Language="C#" Value="public bool ProtectFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-597">获取或设置一个值，该值指示用户是否无法修改 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 格式设置。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-597">Gets or sets a value that indicates whether <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> formatting cannot be modified by the user.</span></span></summary>
        <value><span data-ttu-id="0d9aa-598">如果用户无法修改 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 格式设置，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-598"><see langword="true" /> if <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> formatting cannot be modified by the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-599">当此属性是`true`，则**对象**命令**格式**禁用菜单和<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>不能添加、 移动、 调整大小，或删除元素。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-599">When this property is `true`, the **Object** command on the **Format** menu is disabled and <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> elements cannot be added, moved, resized, or deleted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectGoalSeek">
      <MemberSignature Language="C#" Value="public bool ProtectGoalSeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectGoalSeek" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectGoalSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-600">获取或设置一个值，该值指示是否开启了只限用户界面的保护。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-600">Gets or sets a value that indicates whether user-interface-only protection is turned on.</span></span></summary>
        <value><span data-ttu-id="0d9aa-601">如果开启了只限用户界面的保护，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-601"><see langword="true" /> if user-interface-only protection is turned on.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-602">若要启用用户界面保护，使用<xref:Microsoft.Office.Interop.Excel._Chart.Protect%2A>方法替换`UserInterfaceOnly`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-602">To turn on user interface protection, use the <xref:Microsoft.Office.Interop.Excel._Chart.Protect%2A> method with the `UserInterfaceOnly` argument set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSelection">
      <MemberSignature Language="C#" Value="public bool ProtectSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-603">获取或设置一个值，该值指示是否不能选择 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-603">Gets or sets a value that indicates whether <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> elements cannot be selected.</span></span></summary>
        <value><span data-ttu-id="0d9aa-604">如果不能选择 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 元素，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-604"><see langword="true" /> if <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> elements cannot be selected.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-605">当此属性是`true`，无法将形状添加到<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-605">When this property is `true`, shapes cannot be added to the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadarGroups">
      <MemberSignature Language="C#" Value="public object RadarGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object RadarGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.RadarGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Rectangles(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Rectangles(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Refresh" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d9aa-606">更新 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的缓存。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-606">Updates the cache of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler Resize;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler Resize" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.Resize" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-607">当 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的大小更改时发生。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-607">Occurs when the size of the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> is changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightAngleAxes">
      <MemberSignature Language="C#" Value="public object RightAngleAxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RightAngleAxes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.RightAngleAxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-608">获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 轴是否成直角（与图表旋转角或仰角无关）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-608">Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> axes are at right angles, independent of chart rotation or elevation.</span></span></summary>
        <value><span data-ttu-id="0d9aa-609">如果 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 轴成直角（与图表旋转角或仰角无关），则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-609"><see langword="true" /> if the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> axes are at right angles, independent of chart rotation or elevation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-610">仅适用于三维行、 列或栏<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-610">Applies only to a 3-D line, column, or bar <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 <span data-ttu-id="0d9aa-611">如果此属性为`true`，则<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A>属性将被忽略。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-611">If this property is `true`, the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A> property is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-612">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A>属性设置的当前视图角度<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>为 45 度。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-612">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A> property to set the view perspective of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to 45 degrees.</span></span> <span data-ttu-id="0d9aa-613">该示例设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.RightAngleAxes%2A>属性设置为`false`之前设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-613">The example sets the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.RightAngleAxes%2A> property to `false` before setting the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Perspective%2A> property.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#9)]
 [!code-vb[Trin_ExcelChartSheet#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public object Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-614">获取或设置三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的旋转角。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-614">Gets or sets the rotation of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-615">三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的旋转角（绘图区绕 z 轴的旋转角，以度为单位）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-615">The rotation of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> (the rotation of the plot area around the z-axis, in degrees).</span></span> <span data-ttu-id="0d9aa-616">此属性的值必须在 0 到 360 之间，但三维条形图除外（其中该值必须在 0 到 44 之间）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-616">The value of this property must be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44.</span></span> <span data-ttu-id="0d9aa-617">默认值为 20。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-617">The default value is 20.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-618">仅适用于一个三维<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-618">Applies only to a 3-D <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-619">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Rotation%2A>属性来显示当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>而无需任何旋转。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-619">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Rotation%2A> property to display the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> without any rotation.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#22](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#22)]
 [!code-vb[Trin_ExcelChartSheet#22](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, object fileFormat, object password, object writeResPassword, object readOnlyRecommended, object createBackup, object addToMru, object textCodepage, object textVisualLayout, object local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, object fileFormat, object password, object writeResPassword, object readOnlyRecommended, object createBackup, object addToMru, object textCodepage, object textVisualLayout, object local) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="fileFormat" Type="System.Object" />
        <Parameter Name="password" Type="System.Object" />
        <Parameter Name="writeResPassword" Type="System.Object" />
        <Parameter Name="readOnlyRecommended" Type="System.Object" />
        <Parameter Name="createBackup" Type="System.Object" />
        <Parameter Name="addToMru" Type="System.Object" />
        <Parameter Name="textCodepage" Type="System.Object" />
        <Parameter Name="textVisualLayout" Type="System.Object" />
        <Parameter Name="local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="0d9aa-620">要保存的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-620">The name of the file to be saved.</span></span> <span data-ttu-id="0d9aa-621">可以包含完整路径；否则，Microsoft Office Excel 将文件保存在当前文件夹中。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-621">You can include a full path; if you do not, Microsoft Office Excel saves the file in the current folder.</span></span></param>
        <param name="fileFormat"><span data-ttu-id="0d9aa-622">保存文件时要使用的文件格式。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-622">The file format to use when you save the file.</span></span> <span data-ttu-id="0d9aa-623">有关有效选项的列表，请参见 <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-623">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span></span> <span data-ttu-id="0d9aa-624">对于现有文件，默认格式为最后一种指定文件格式；对于新文件，默认格式为所用 Excel 版本的格式。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-624">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span></span></param>
        <param name="password"><span data-ttu-id="0d9aa-625">一个区分大小写的字符串（不超过 15 个字符），指示为文件指定的保护密码。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-625">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span></span></param>
        <param name="writeResPassword"><span data-ttu-id="0d9aa-626">文件的写保护密码。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-626">The write-reservation password for this file.</span></span> <span data-ttu-id="0d9aa-627">如果保存文件时指定了密码，但打开文件时没有提供密码，则该文件以只读方式打开。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-627">If a file is saved with the password and the password is not supplied when the file is opened, the file is opened as read-only.</span></span></param>
        <param name="readOnlyRecommended"><span data-ttu-id="0d9aa-628">如果为 <see langword="true" />，则在打开该文件时显示一条消息，建议以只读方式打开该文件。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-628"><see langword="true" /> to display a message when the file is opened, recommending that the file be opened as read-only.</span></span></param>
        <param name="createBackup"><span data-ttu-id="0d9aa-629">如果为 <see langword="true" />，则创建备份文件。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-629"><see langword="true" /> to create a backup file.</span></span></param>
        <param name="addToMru"><span data-ttu-id="0d9aa-630">如果为 <see langword="true" />，则将工作簿添加到最近使用的文件列表中。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-630"><see langword="true" /> to add this workbook to the list of recently used files.</span></span> <span data-ttu-id="0d9aa-631">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-631">The default value is <see langword="false" />.</span></span></param>
        <param name="textCodepage"><span data-ttu-id="0d9aa-632">不在美国使用英语 Excel。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-632">Not used in U.S. English Excel.</span></span></param>
        <param name="textVisualLayout"><span data-ttu-id="0d9aa-633">不在美国使用英语 Excel。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-633">Not used in U.S. English Excel.</span></span></param>
        <param name="local"><span data-ttu-id="0d9aa-634">如果为 <see langword="true" />，则按照 Excel（包括控制面板设置）的语言保存文件。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-634"><see langword="true" /> saves files against the language of Excel (including control panel settings).</span></span> <span data-ttu-id="0d9aa-635">为 <see langword="false" />（默认值）时，则用 Visual Basic for Applications 所使用的语言（通常为美国英语，除非从中运行 Workbooks.Open 的 VBA 项目是旧的国际化 XL5/95 VBA 项目）保存文件。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-635"><see langword="false" /> (default) saves files against the language of Visual Basic for Applications (which is typically US English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span></span></param>
        <summary><span data-ttu-id="0d9aa-636">将对 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 所做的更改保存到另一个文件中。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-636">Saves changes to the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> in a different file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-637">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-637">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-638">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-638">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-639">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SaveAs%2A>方法以保存当前的未受保护的副本<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-639">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SaveAs%2A> method to save an unprotected copy of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#126](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#126)]
 [!code-vb[Trin_ExcelChartSheet#126](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#126)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChartTemplate">
      <MemberSignature Language="C#" Value="public void SaveChartTemplate (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveChartTemplate(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.SaveChartTemplate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="0d9aa-640">新图表模板的名称。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-640">The name of the new chart template.</span></span></param>
        <summary><span data-ttu-id="0d9aa-641">将 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中的图表作为自定义模板保存在可用图表模板的列表中。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-641">Saves the chart on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> as a custom template in the list of available chart templates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-642">默认情况下，此方法将当前图表保存到用户的图表模板目录。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-642">By default, this method saves the current chart to the user's chart template directory.</span></span> <span data-ttu-id="0d9aa-643">如果指定的 UNC 或 URL，则将保存图表到指定位置。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-643">If a UNC or URL is specified, the chart will be saved to the specified location instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Scripts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ScrollBars(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.ScrollBars(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(object replace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Select(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="replace"><span data-ttu-id="0d9aa-644">要替换的对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-644">The object to replace.</span></span></param>
        <summary><span data-ttu-id="0d9aa-645">选择 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-645">Selects the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-646">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-646">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-647">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-647">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectEvent">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler SelectEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler SelectEvent" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.SelectEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-648">当选择 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 时发生。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-648">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> is selected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-649">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SelectEvent>事件显示一条消息框时的当前主坐标轴<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>处于选中状态。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-649">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SelectEvent> event that displays a message box when the primary axis of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> is selected.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#208](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#208)]
 [!code-vb[Trin_ExcelChartSheet#208](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#208)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesChange">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler SeriesChange;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler SeriesChange" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.SeriesChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-650">在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 数据点的值更改时发生。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-650">Occurs when the value of a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> data point is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-651">下面的代码示例演示了一个处理程序<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SeriesChange>设置为绿色时的当前数据点的点的边框颜色的事件<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>发生更改。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-651">The following code example demonstrates a handler for the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SeriesChange> event that sets a point's border color to green when a data point of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> is changed.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#209](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#209)]
 [!code-vb[Trin_ExcelChartSheet#209](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#209)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesCollection">
      <MemberSignature Language="C#" Value="public object SeriesCollection (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object SeriesCollection(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.SeriesCollection(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0d9aa-652">系列的名称或编号。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-652">The name or number of the series.</span></span></param>
        <summary><span data-ttu-id="0d9aa-653">获取一个对象，该对象表示图表或图表组中的单个系列（<see cref="T:Microsoft.Office.Interop.Excel.Series" /> 对象）或所有系列的集合（<see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> 集合）。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-653">Gets an object that represents either a single series (a <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object) or a collection of all the series (a <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection) in the chart or chart group.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-654">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-654">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-655">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-655">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-656">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SeriesCollection%2A>方法将数据标签添加到当前的第一个数据系列<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-656">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SeriesCollection%2A> method to add data labels to the first data series in the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#127](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#127)]
 [!code-vb[Trin_ExcelChartSheet#127](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#127)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackgroundPicture(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.SetBackgroundPicture(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="0d9aa-657">图形文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-657">The name of the graphic file.</span></span></param>
        <summary><span data-ttu-id="0d9aa-658">设置 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的背景图形。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-658">Sets the background graphic for a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-659">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetBackgroundPicture%2A>方法来设置当前的背景<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>到图像文件。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-659">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetBackgroundPicture%2A> method to set the background of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to an image file.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#128](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#128)]
 [!code-vb[Trin_ExcelChartSheet#128](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#128)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultChart(object name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.SetDefaultChart(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0d9aa-660">一个字符串，表示在创建新图表时要使用的默认图表模板的名称。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-660">A string that indicates the name of the default chart template that will be used when creating new charts.</span></span> <span data-ttu-id="0d9aa-661">该名称可以标识用户定义的模板库中的图表，它也可以是指定内置图表模板的 <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-661">This name can identify a chart in the gallery for a user-defined template, or it can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> values that specifies a built-in chart template.</span></span></param>
        <summary><span data-ttu-id="0d9aa-662">指定 Microsoft Office Excel 在创建新图表时使用的图表模板的名称。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-662">Specifies the name of the chart template that Microsoft Office Excel uses when creating new charts.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetElement">
      <MemberSignature Language="C#" Value="public void SetElement (Microsoft.Office.Core.MsoChartElementType element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetElement(valuetype Microsoft.Office.Core.MsoChartElementType element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.SetElement(Microsoft.Office.Core.MsoChartElementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.Office.Core.MsoChartElementType" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="0d9aa-663"><see langword="Microsoft.Office.Core.MsoChartElementType" /> 值之一，指定元素修改的类型。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-663">One of the <see langword="Microsoft.Office.Core.MsoChartElementType" /> values that specifies the type of element modification.</span></span></param>
        <summary><span data-ttu-id="0d9aa-664">修改 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中显示的图表的元素。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-664">Modifies an element on the chart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-665">使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetElement%2A>方法来修改指定的选项根据图表元素`Microsoft.Office.Core.MsoChartElementType`值。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-665">Use the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetElement%2A> method to modify an element of the chart according to the options specified by the `Microsoft.Office.Core.MsoChartElementType` values.</span></span> <span data-ttu-id="0d9aa-666">例如，若要隐藏表格图例，请将传递值`Microsoft.Office.Core.MsoChartElementType.msoElementLegendNone`到<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetElement%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-666">For example, to hide the table legend, pass the value `Microsoft.Office.Core.MsoChartElementType.msoElementLegendNone` to the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetElement%2A> method.</span></span>  
  
 <span data-ttu-id="0d9aa-667">可以使用此方法执行的操作对应于以下按钮上**布局**选中图表后，功能区选项卡：</span><span class="sxs-lookup"><span data-stu-id="0d9aa-667">The operations you can perform by using this method correspond to the following buttons on the **Layout** tab of the Ribbon when a chart is selected:</span></span>  
  
-   <span data-ttu-id="0d9aa-668">中的所有按钮**标签**组。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-668">All buttons in the **Labels** group.</span></span>  
  
-   <span data-ttu-id="0d9aa-669">中的所有按钮**轴**组。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-669">All buttons in the **Axes** group.</span></span>  
  
-   <span data-ttu-id="0d9aa-670">中的所有按钮**分析**组。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-670">All buttons in the **Analysis** group.</span></span>  
  
-   <span data-ttu-id="0d9aa-671">**绘图区**，**图表墙面**，并**图表地面**中的按钮**后台**组。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-671">The **Plot Area**, **Chart Wall**, and **Chart Floor** buttons in the **Background** group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-672">下面的代码示例应用适用于图表工作表中的图表的图表类型的第十个布局`Chart1`。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-672">The following code example applies the tenth layout that is available for the chart type of the chart in chart sheet `Chart1`.</span></span> <span data-ttu-id="0d9aa-673">此外，该示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetElement%2A>方法应用更多布局更改： 将图表标题为居中且位于图表网格区域内的样式设置、 添加水平轴的标题以及添加垂直轴的旋转的标题。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-673">In addition, the example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetElement%2A> method to apply further layout changes: setting the style of the chart title to be centered and to lie inside the chart grid area, adding a title for the horizontal axis, and adding a rotated title for the vertical axis.</span></span> <span data-ttu-id="0d9aa-674">若要运行此代码示例，您的工作簿必须包含聚集的列二维图表工作表名为`Chart1`。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-674">To run this code example, your workbook must contain a clustered column two-dimensional chart sheet named `Chart1`.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkBook_Additional#18](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#18)]
 [!code-vb[Trin_ExcelWorkBook_Additional#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSourceData">
      <MemberSignature Language="C#" Value="public void SetSourceData (Microsoft.Office.Interop.Excel.Range source, object plotBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSourceData(class Microsoft.Office.Interop.Excel.Range source, object plotBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.SetSourceData(Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="plotBy" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="0d9aa-675">包含源数据的范围。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-675">The range that contains the source data.</span></span></param>
        <param name="plotBy"><span data-ttu-id="0d9aa-676">指定绘制数据的方式。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-676">Specifies the way the data is to be plotted.</span></span> <span data-ttu-id="0d9aa-677">可以为以下 <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-677">Can be either of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />.</span></span></param>
        <summary><span data-ttu-id="0d9aa-678">设置 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的源数据范围。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-678">Sets the source data range for the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-679">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-679">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-680">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-680">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-681">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetSourceData%2A>方法以设置当前的数据源<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>为工作区域`Sheet1`包含单元格 A1 到 B5。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-681">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SetSourceData%2A> method to set the data source of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName> to a range on `Sheet1` that contains cells A1 through B5.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#2)]
 [!code-vb[Trin_ExcelChartSheet#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Shapes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-682">获取一个表示 <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> 上的所有形状的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-682">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-683">一个 <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上的所有形状。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-683">A <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-684">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Shapes%2A>属性来绘制圆环图形状上当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-684">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Shapes%2A> property to draw a doughnut shape on the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#23](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#23)]
 [!code-vb[Trin_ExcelChartSheet#23](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAllFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAllFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAllFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-685">获取或设置是否在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中显示的数据透视图上显示所有字段按钮。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-685">Gets or sets whether to display all field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span> <span data-ttu-id="0d9aa-686">此属性只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-686">This property can be used only in [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] projects.</span></span></summary>
        <value><span data-ttu-id="0d9aa-687">如果要在指定的数据透视图上显示所有字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-687"><see langword="true" /> to display all field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-688">设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAllFieldButtons%2A>属性设置为`true`显示在指定数据透视图上显示所有字段按钮<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-688">Set the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAllFieldButtons%2A> property to `true` to display all field buttons on the specified PivotChart that is displayed on the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase>.</span></span> <span data-ttu-id="0d9aa-689">将属性设置为`false`隐藏所有字段按钮。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-689">Set the property to `false` to hide all field buttons.</span></span>  
  
 <span data-ttu-id="0d9aa-690"><xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAllFieldButtons%2A>属性对应于**全部隐藏**命令**字段按钮**的下拉列表**分析**在 Excel 中，这是可用的选项卡选择数据透视图。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-690">The <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAllFieldButtons%2A> property corresponds to the **Hide All** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d9aa-691">此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-691">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="0d9aa-692">但是，此属性不能使用 Excel 2007 项目中。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-692">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="0d9aa-693">此属性用于 Excel 2007 项目。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-693">This property is used in an Excel 2007 project.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShowAxisFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAxisFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAxisFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAxisFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-694">获取或设置是否在显示在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 上的数据透视图上显示轴字段按钮。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-694">Gets or sets whether to display axis field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span> <span data-ttu-id="0d9aa-695">此属性只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-695">This property can be used only in [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] projects.</span></span></summary>
        <value><span data-ttu-id="0d9aa-696">若要在指定的数据透视图上显示轴字段按钮，请使用 <see langword="true" />；否则使用 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-696"><see langword="true" /> to display axis field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-697">设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAxisFieldButtons%2A>属性设置为`true`显示在指定的数据透视图上显示轴字段按钮<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-697">Set the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAxisFieldButtons%2A> property to `true` to display axis field buttons on the specified PivotChart that is displayed on the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase>.</span></span> <span data-ttu-id="0d9aa-698">将属性设置为`false`隐藏按钮。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-698">Set the property to `false` to hide the buttons.</span></span>  
  
 <span data-ttu-id="0d9aa-699"><xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAxisFieldButtons%2A>属性对应于**显示轴字段\*\*\*\*按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，选择一个数据透视图时，可以在选项卡。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-699">The <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowAxisFieldButtons%2A> property corresponds to the **Show Axis Field** **Buttons** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d9aa-700">此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-700">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="0d9aa-701">但是，此属性不能使用 Excel 2007 项目中。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-701">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="0d9aa-702">此属性用于 Excel 2007 项目。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-702">This property is used in an Excel 2007 project.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShowDataLabelsOverMaximum">
      <MemberSignature Language="C#" Value="public bool ShowDataLabelsOverMaximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDataLabelsOverMaximum" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowDataLabelsOverMaximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-703">获取或设置一个值，该值指示当值大于数值轴上的最大值时是否显示数据标签。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-703">Gets or sets a value that indicates whether to show the data labels when the value is greater than the maximum value on the value axis.</span></span></summary>
        <value><span data-ttu-id="0d9aa-704">如果当值大于数值轴上的最大值时显示数据标签，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-704"><see langword="true" /> to show the data labels when the value is greater than the maximum value on the value axis; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-705">如果更改中变得比数据点的大小较小的值轴，你可以使用此属性设置是否显示数据标签。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-705">If you change the value axis in such a way that it became smaller than the size of the data points, you can use this property to set whether to show the data labels.</span></span> <span data-ttu-id="0d9aa-706">此属性适用于仅的二维图表。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-706">This property applies to 2-D charts only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowLegendFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowLegendFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLegendFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowLegendFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-707">获取或设置是否在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中显示的数据透视图上显示图例字段按钮。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-707">Gets or sets whether to display legend field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span> <span data-ttu-id="0d9aa-708">此属性只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-708">This property can be used only in [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] projects.</span></span></summary>
        <value><span data-ttu-id="0d9aa-709">如果要在指定的数据透视图上显示所有图例字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-709"><see langword="true" /> to display all legend field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-710">设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowLegendFieldButtons%2A>属性设置为`true`显示在指定数据透视图上显示图例字段按钮<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-710">Set the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowLegendFieldButtons%2A> property to `true` to display legend field buttons on the specified PivotChart that is displayed on the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase>.</span></span> <span data-ttu-id="0d9aa-711">将属性设置为`false`隐藏按钮。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-711">Set the property to `false` to hide the buttons.</span></span>  
  
 <span data-ttu-id="0d9aa-712"><xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowLegendFieldButtons%2A>属性对应于**显示图例字段按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，这是选项卡选择一个数据透视图时可用。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-712">The <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowLegendFieldButtons%2A> property corresponds to the **Show Legend Field Buttons** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d9aa-713">此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-713">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="0d9aa-714">但是，此属性不能使用 Excel 2007 项目中。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-714">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="0d9aa-715">此属性用于 Excel 2007 项目。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-715">This property is used in an Excel 2007 project.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShowReportFilterFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowReportFilterFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReportFilterFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowReportFilterFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-716">获取或设置是否在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中显示的数据透视图上显示报告筛选器字段按钮。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-716">Gets or sets whether to display the report filter field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span> <span data-ttu-id="0d9aa-717">此属性只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-717">This property can be used only in [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] projects.</span></span></summary>
        <value><span data-ttu-id="0d9aa-718">如果要在指定的数据透视图上显示报告筛选器字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-718"><see langword="true" /> to display the report filter field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-719">设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowReportFilterFieldButtons%2A>属性设置为`true`显示在指定的数据透视图上显示报表筛选器字段按钮<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-719">Set the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowReportFilterFieldButtons%2A> property to `true` to display the Report Filter Field buttons on the specified PivotChart that is displayed on the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase>.</span></span> <span data-ttu-id="0d9aa-720">将属性设置为`false`隐藏按钮。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-720">Set the property to `false` to hide the buttons.</span></span>  
  
 <span data-ttu-id="0d9aa-721"><xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowReportFilterFieldButtons%2A>属性对应于**显示报告筛选器字段按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，选项卡的当选择一个数据透视图才可用。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-721">The <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowReportFilterFieldButtons%2A> property corresponds to the **Show Report Filter Field Buttons** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d9aa-722">此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-722">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="0d9aa-723">但是，此属性不能使用 Excel 2007 项目中。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-723">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="0d9aa-724">此属性用于 Excel 2007 项目。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-724">This property is used in an Excel 2007 project.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShowValueFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowValueFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowValueFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowValueFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-725">获取或设置是否在 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中显示的数据透视图上显示值字段按钮。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-725">Gets or sets whether to display the value field buttons on a PivotChart that is displayed on the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span> <span data-ttu-id="0d9aa-726">此属性只能用于 [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] 对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-726">This property can be used only in [!INCLUDE[Excel_14_short](~/includes/excel-14-short-md.md)] projects.</span></span></summary>
        <value><span data-ttu-id="0d9aa-727">如果要在指定的数据透视图上显示值字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-727"><see langword="true" /> to display the value field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-728">设置<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowValueFieldButtons%2A>属性设置为`true`显示的值`field`上指定的数据透视图上显示的按钮<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-728">Set the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowValueFieldButtons%2A> property to `true` to display the Value `field` buttons on the specified PivotChart that is displayed on the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase>.</span></span> <span data-ttu-id="0d9aa-729">将属性设置为`false`隐藏该按钮。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-729">Set the property to `false` to hide the button.</span></span>  
  
 <span data-ttu-id="0d9aa-730"><xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowValueFieldButtons%2A>属性对应于**显示值字段按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，这是选项卡选择一个数据透视图时可用。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-730">The <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ShowValueFieldButtons%2A> property corresponds to the **Show Value Field Buttons** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d9aa-731">此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-731">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="0d9aa-732">但是，此属性不能使用 Excel 2007 项目中。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-732">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="0d9aa-733">此属性用于 Excel 2007 项目。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-733">This property is used in an Excel 2007 project.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public event EventHandler Shutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Shutdown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.Shutdown" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-734">在准备卸载程序集的应用程序域时发生。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-734">Occurs when the application domain for the assembly is about to unload.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-735">在中调用的最后一步<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>声明为类<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>类卸载。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-735">The last thing to be called in the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase> class as the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase> class unloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SideWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls SideWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls SideWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.SideWall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-736">获取一个对象，该对象表示三维图表的侧面墙。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-736">Gets an object that represents the side wall of a 3-D chart.</span></span></summary>
        <value><span data-ttu-id="0d9aa-737">一个 <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，表示三维图表的侧面墙。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-737">A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the side wall of a 3-D chart.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-738">使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SideWall%2A>属性来设置格式的三维图表的侧面墙。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-738">Use the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.SideWall%2A> property to format the side wall of a 3-D chart.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-739">下面的代码示例指定墙壁和现有的三维图表工作表的最底层的颜色并设置图表样式为样式 4。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-739">The following code example specifies the colors of the walls and floor of an existing 3-D chart sheet and sets the chart style to style 4.</span></span> <span data-ttu-id="0d9aa-740">若要运行此代码示例，该工作簿必须包含名为图表工作表`Chart1`的三维类型。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-740">To run this code example, the workbook must contain a chart sheet called `Chart1` of a 3-D type.</span></span>  
  
 [!code-csharp[Trin_Excelworkbook_Additional#38](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#38)]
 [!code-vb[Trin_Excelworkbook_Additional#38](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Spinners(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Spinners(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public event EventHandler Startup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Startup" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ChartSheetBase.Startup" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-741">在文档正在运行并且该程序集中的所有初始化代码都已运行之后发生。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-741">Occurs after the document is running and all the initialization code in the assembly has been run.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-742">若要运行用户代码中运行的类的构造函数中最后一件事。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-742">The last thing to run in the constructor of the class that the user code is running in.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubType">
      <MemberSignature Language="C#" Value="public int SubType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.SubType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfaceGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.SurfaceGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Tab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-743">获取 <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> 的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-743">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-744"><see cref="T:Microsoft.Office.Interop.Excel.Tab" /> 的 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-744">A <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-745">获取或设置包含有关 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的数据的对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-745">Gets or sets the object that contains data about the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-746">包含有关 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的数据的对象。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-746">The object that contains data about the <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-747">一个常见用途<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Tag%2A>属性是与密切关联的数据存储<xref:Microsoft.Office.Tools.Excel.ChartSheetBase>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-747">A common use for the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Tag%2A> property is to store data that is closely associated with the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object TextBoxes(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.TextBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unprotect(object password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.Unprotect(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="0d9aa-748">用于取消保护工作表或工作簿的区分大小写的密码。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-748">The case-sensitive password to use to unprotect the sheet or workbook.</span></span> <span data-ttu-id="0d9aa-749">如果未用密码保护工作表或工作簿，则省略此参数。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-749">If the sheet or workbook is not protected with a password, this argument is ignored.</span></span> <span data-ttu-id="0d9aa-750">如果对使用密码进行保护的工作表省略此参数，则您将被提示输入密码。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-750">If you omit this argument for a sheet that is protected with a password, you will be prompted for the password.</span></span> <span data-ttu-id="0d9aa-751">如果对使用密码进行保护的工作簿省略此参数，则该方法将失败。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-751">If you omit this argument for a workbook that is protected with a password, the method fails.</span></span></param>
        <summary><span data-ttu-id="0d9aa-752">从 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 中移除保护。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-752">Removes protection from a <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span> <span data-ttu-id="0d9aa-753">如果工作表或工作簿不受保护，则此方法无效。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-753">This method has no effect if the sheet or workbook is not protected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9aa-754">如果你忘记了密码，则无法取消保护<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-754">If you forget the password, you cannot unprotect the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span> <span data-ttu-id="0d9aa-755">最好将密码及其对应文档名的列表保存在安全的位置。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-755">It is a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="0d9aa-756">可选参数</span><span class="sxs-lookup"><span data-stu-id="0d9aa-756">Optional Parameters</span></span>  
 <span data-ttu-id="0d9aa-757">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions)。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-757">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9aa-758">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Protect%2A>方法来保护所有内容的当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-758">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Protect%2A> method to protect all contents of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span> <span data-ttu-id="0d9aa-759">该示例然后使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectContents%2A>属性以验证图表工作表受到保护，然后会提示用户使用从图表工作表中删除保护<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Unprotect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-759">The example then uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.ProtectContents%2A> property to verify that the chart sheet is protected, and then prompts the user to remove protection from the chart sheet by using the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Unprotect%2A> method.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#124](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#124)]
 [!code-vb[Trin_ExcelChartSheet#124](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#124)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-760">确定该对象是否可见。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-760">Determines whether the object is visible.</span></span></summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-761">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Visible%2A>属性来隐藏当前<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-761">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Visible%2A> property to hide the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#26](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#26)]
 [!code-vb[Trin_ExcelChartSheet#26](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Walls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls Walls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls Walls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.Walls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d9aa-762">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，该对象表示三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的墙纸。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-762">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></summary>
        <value><span data-ttu-id="0d9aa-763"><see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，表示三维 <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" /> 的墙纸。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-763">A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D <see cref="T:Microsoft.Office.Tools.Excel.ChartSheetBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d9aa-764">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Walls%2A>属性设置的粗细和颜色的当前墙纸<xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="0d9aa-764">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ChartSheetBase.Walls%2A> property to set the weight and color of the walls of the current <xref:Microsoft.Office.Tools.Excel.ChartSheetBase?displayProperty=fullName>.</span></span>  
  
 [!code-csharp[Trin_ExcelChartSheet#27](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/CS/Sales.cs#27)]
 [!code-vb[Trin_ExcelChartSheet#27](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChartSheet/VB/Sales.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WallsAndGridlines2D">
      <MemberSignature Language="C#" Value="public bool WallsAndGridlines2D { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WallsAndGridlines2D" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ChartSheetBase.WallsAndGridlines2D" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XYGroups">
      <MemberSignature Language="C#" Value="public object XYGroups (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object XYGroups(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ChartSheetBase.XYGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>