<Type Name="ControlExtensions" FullName="Microsoft.Office.Tools.Excel.ControlExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="27bbc778d5b578559db6a50f0af8b33988df24e3" />
    <Meta Name="ms.sourcegitcommit" Value="bb8a3a96823cedeffbdbcc0c41a8118399de8074" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="02/21/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ControlExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ControlExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Tools.Excel.ControlExtensions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供扩展方法，它可用于向使用 Visual Studio 中的 Office 开发工具自定义的 Excel 工作表添加 Windows 窗体控件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions>方法是可用的扩展方法<xref:Microsoft.Office.Tools.Excel.ControlCollection>返回对象<xref:Microsoft.Office.Tools.Excel.Worksheet.Controls%2A?displayProperty=fullName>（在应用程序级项目中） 的属性或<xref:Microsoft.Office.Tools.Excel.WorksheetBase.Controls%2A?displayProperty=fullName>在运行时 （在文档级项目中） 的属性。 若要将特定控件添加到文档中，使用在方法名称中包含的控件名称的方法。 例如，若要添加<xref:System.Windows.Forms.Button>，使用<xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddButton%2A>方法。  
  
 有关将控件到文档的详细信息，请参阅[在运行时向 Office 文档添加控件](/visualstudio/vsto/adding-controls-to-office-documents-at-run-time.md)。 有关扩展方法的详细信息，请参阅[扩展方法](http://msdn.microsoft.com/library/175ce3ff-9bbf-4e64-8421-faeb81a0bb51)和[扩展方法](http://msdn.microsoft.com/library/b8020aae-374d-46a9-bcb7-8cc2390b93b6)。  
  
> [!NOTE]
>  Excel 的外接程序项目面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，可以访问之前，必须添加对 Microsoft.Office.Tools.Excel.v4.0.Utilities.dll 程序集的引用<xref:Microsoft.Office.Tools.Excel.ControlExtensions>方法。  
  
   
  
## Examples  
 下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddButton%2A>方法将添加<xref:Microsoft.Office.Tools.Excel.Controls.Button>控件添加到单元格**A1**，然后将文本添加到按钮。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#2)]
 [!code-vb[Trin_ExcelControlCollection#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddButton">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.Button AddButton (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.Button AddButton(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddButton(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.Button</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.Button" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.Button" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddButton%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.Button>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.Button>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.Button>控件添加到单元格**A1**，然后将文本添加到按钮。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#2)]
 [!code-vb[Trin_ExcelControlCollection#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddButton">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.Button AddButton (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.Button AddButton(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddButton(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.Button</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.Button" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.Button" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddButton%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.Button>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.Button>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.Button>控制到工作表中，顶部，然后将文本添加到按钮。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#3](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#3)]
 [!code-vb[Trin_ExcelControlCollection#3](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCheckBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.CheckBox AddCheckBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.CheckBox AddCheckBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddCheckBox(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.CheckBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.CheckBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.CheckBox" /> 控件</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddCheckBox%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.CheckBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.CheckBox>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.CheckBox>控件添加到单元格**A1**，然后将文本添加到复选框。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#4)]
 [!code-vb[Trin_ExcelControlCollection#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCheckBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.CheckBox AddCheckBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.CheckBox AddCheckBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddCheckBox(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.CheckBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.CheckBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.CheckBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddCheckBox%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.CheckBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.CheckBox>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.CheckBox>控制到工作表中，顶部，然后将文本添加到复选框。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#5](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#5)]
 [!code-vb[Trin_ExcelControlCollection#5](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCheckedListBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.CheckedListBox AddCheckedListBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.CheckedListBox AddCheckedListBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddCheckedListBox(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.CheckedListBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.CheckedListBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.CheckedListBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddCheckedListBox%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.CheckedListBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.CheckedListBox>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.CheckedListBox>控件添加到单元格**A1**通过**B5**向选中的列表框中，添加两个项，然后选择第一项复选框。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#6](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#6)]
 [!code-vb[Trin_ExcelControlCollection#6](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCheckedListBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.CheckedListBox AddCheckedListBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.CheckedListBox AddCheckedListBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddCheckedListBox(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.CheckedListBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.CheckedListBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.CheckedListBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddCheckedListBox%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.CheckedListBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.CheckedListBox>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.CheckedListBox>控件到工作表的顶部，请向选中的列表框中，添加两个项，然后选择`First Item`复选框。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#7](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#7)]
 [!code-vb[Trin_ExcelControlCollection#7](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddComboBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.ComboBox AddComboBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.ComboBox AddComboBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddComboBox(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.ComboBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ComboBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ComboBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddComboBox%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.ComboBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.ComboBox>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.ComboBox>控件添加到单元格**A1**通过**B1**到组合框中，添加两个项，然后选择第一个项。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#8](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#8)]
 [!code-vb[Trin_ExcelControlCollection#8](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddComboBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.ComboBox AddComboBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.ComboBox AddComboBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddComboBox(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.ComboBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ComboBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ComboBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddComboBox%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.ComboBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.ComboBox>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.ComboBox>到工作表的顶部控件，请将两个项添加到组合框，然后选择第一个项。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#9)]
 [!code-vb[Trin_ExcelControlCollection#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDataGridView">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.DataGridView AddDataGridView (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.DataGridView AddDataGridView(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddDataGridView(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.DataGridView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.DataGridView" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.DataGridView" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddDataGridView%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.DataGridView>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.DataGridView>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.DataGridView>控件添加到单元格**A1**通过**D9**，然后将两个列添加到控件。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#11](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#11)]
 [!code-vb[Trin_ExcelControlCollection#11](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDataGridView">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.DataGridView AddDataGridView (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.DataGridView AddDataGridView(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddDataGridView(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.DataGridView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.DataGridView" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.DataGridView" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddDataGridView%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.DataGridView>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.DataGridView>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.DataGridView>控制到工作表中，顶部，然后将两个列添加到控件。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#12](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#12)]
 [!code-vb[Trin_ExcelControlCollection#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDateTimePicker">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.DateTimePicker AddDateTimePicker (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.DateTimePicker AddDateTimePicker(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddDateTimePicker(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.DateTimePicker</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.DateTimePicker" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.DateTimePicker" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddDateTimePicker%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.DateTimePicker>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.DateTimePicker>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.DateTimePicker>控件添加到单元格**A1**通过**C1**，然后将该日历的背景设置为浅蓝色。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#13](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#13)]
 [!code-vb[Trin_ExcelControlCollection#13](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDateTimePicker">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.DateTimePicker AddDateTimePicker (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.DateTimePicker AddDateTimePicker(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddDateTimePicker(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.DateTimePicker</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.DateTimePicker" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.DateTimePicker" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddDateTimePicker%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.DateTimePicker>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.DateTimePicker>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.DateTimePicker>控制转移到顶部的工作表，然后设置为浅蓝色日历的背景。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#14](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#14)]
 [!code-vb[Trin_ExcelControlCollection#14](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDomainUpDown">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.DomainUpDown AddDomainUpDown (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.DomainUpDown AddDomainUpDown(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddDomainUpDown(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.DomainUpDown</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.DomainUpDown" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.DomainUpDown" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddDomainUpDown%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.DomainUpDown>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.DomainUpDown>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.DomainUpDown>控件添加到单元格**A1**通过**B1**，然后将控件的背景设置为黄色。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#15](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#15)]
 [!code-vb[Trin_ExcelControlCollection#15](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDomainUpDown">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.DomainUpDown AddDomainUpDown (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.DomainUpDown AddDomainUpDown(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddDomainUpDown(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.DomainUpDown</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.DomainUpDown" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.DomainUpDown" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddDomainUpDown%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.DomainUpDown>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.DomainUpDown>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.DomainUpDown>控制转移到顶部的工作表，然后设置为黄色控件的背景。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#16](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#16)]
 [!code-vb[Trin_ExcelControlCollection#16](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddHScrollBar">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.HScrollBar AddHScrollBar (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.HScrollBar AddHScrollBar(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddHScrollBar(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.HScrollBar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.HScrollBar" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.HScrollBar" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddHScrollBar%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.HScrollBar>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.HScrollBar>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.HScrollBar>控件添加到单元格**A1**通过**B1**，然后将滚动框移到滚动条的中心。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#17](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#17)]
 [!code-vb[Trin_ExcelControlCollection#17](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddHScrollBar">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.HScrollBar AddHScrollBar (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.HScrollBar AddHScrollBar(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddHScrollBar(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.HScrollBar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.HScrollBar" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.HScrollBar" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddHScrollBar%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.HScrollBar>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.HScrollBar>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.HScrollBar>控制转移到的工作表，，然后移动顶部到中心滚动条的滚动框。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#18](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#18)]
 [!code-vb[Trin_ExcelControlCollection#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabel">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.Label AddLabel (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.Label AddLabel(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddLabel(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.Label</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.Label" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.Label" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddLabel%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.Label>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.Label>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.Label>控件添加到单元格**A1**，然后将更改为文本**名字**。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#19](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#19)]
 [!code-vb[Trin_ExcelControlCollection#19](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabel">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.Label AddLabel (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.Label AddLabel(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddLabel(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.Label</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.Label" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.Label" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddLabel%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.Label>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.Label>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.Label>控制转移到顶部的工作表，然后更改文本与**名字**。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#20](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#20)]
 [!code-vb[Trin_ExcelControlCollection#20](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddLinkLabel">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.LinkLabel AddLinkLabel (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.LinkLabel AddLinkLabel(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddLinkLabel(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.LinkLabel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.LinkLabel" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.LinkLabel" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddLinkLabel%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.LinkLabel>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.LinkLabel>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.LinkLabel>控件添加到单元格**A1**，然后将更改为文本`First Name`。 然后，代码更改为蓝色的链接的颜色并设置<xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>到<xref:System.Windows.Forms.LinkBehavior.HoverUnderline>。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#22](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#22)]
 [!code-vb[Trin_ExcelControlCollection#22](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddLinkLabel">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.LinkLabel AddLinkLabel (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.LinkLabel AddLinkLabel(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddLinkLabel(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.LinkLabel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.LinkLabel" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.LinkLabel" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddLinkLabel%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.LinkLabel>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.LinkLabel>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.LinkLabel>控制转移到顶部的工作表，然后更改文本与`First Name`。 然后，代码更改为蓝色的链接的颜色并设置<xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>到<xref:System.Windows.Forms.LinkBehavior.HoverUnderline>。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#23](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#23)]
 [!code-vb[Trin_ExcelControlCollection#23](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddListBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.ListBox AddListBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.ListBox AddListBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddListBox(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.ListBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ListBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ListBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddListBox%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.ListBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.ListBox>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.ListBox>控件添加到单元格**A1**通过**B6**到列表框中，添加两个项，然后选择第一个项。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#23](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#23)]
 [!code-vb[Trin_ExcelControlCollection#23](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddListBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.ListBox AddListBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.ListBox AddListBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddListBox(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.ListBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ListBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ListBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddListBox%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.ListBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.ListBox>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.ListBox>控件到工作表的顶部，请将两个项添加到列表框中，，然后选择第一个项。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#24](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#24)]
 [!code-vb[Trin_ExcelControlCollection#24](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddListView">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.ListView AddListView (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.ListView AddListView(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddListView(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.ListView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ListView" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ListView" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddListView%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.ListView>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.ListView>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.ListView>控件添加到单元格**A1**通过**B6**，将视图更改为`List`，然后将添加到两个项<xref:Microsoft.Office.Tools.Excel.Controls.ListView>。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#25](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#25)]
 [!code-vb[Trin_ExcelControlCollection#25](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddListView">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.ListView AddListView (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.ListView AddListView(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddListView(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.ListView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ListView" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ListView" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddListView%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.ListView>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.ListView>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.ListView>控件到工作表的顶部，将视图更改为`List`，然后将添加到两个项<xref:Microsoft.Office.Tools.Excel.Controls.ListView>。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#26](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#26)]
 [!code-vb[Trin_ExcelControlCollection#26](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMaskedTextBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.MaskedTextBox AddMaskedTextBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.MaskedTextBox AddMaskedTextBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddMaskedTextBox(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.MaskedTextBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的位置的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.MaskedTextBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.MaskedTextBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可以添加<xref:Microsoft.Office.Tools.Excel.Controls.MaskedTextBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.MaskedTextBox>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.MaskedTextBox>控件添加到单元格**A1**，然后将设置`Mask`为 00/00/0000 的属性。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#27](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#27)]
 [!code-vb[Trin_ExcelControlCollection#27](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMaskedTextBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.MaskedTextBox AddMaskedTextBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.MaskedTextBox AddMaskedTextBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddMaskedTextBox(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.MaskedTextBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与文档左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘和文档上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>按照指定的大小和位置向文档中添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.MaskedTextBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.MaskedTextBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可以添加<xref:Microsoft.Office.Tools.Excel.Controls.MaskedTextBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.MaskedTextBox>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.MaskedTextBox>控件添加到工作表，然后设置顶部`Mask`为 00/00/0000 的属性。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#28](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#28)]
 [!code-vb[Trin_ExcelControlCollection#28](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonthCalendar">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.MonthCalendar AddMonthCalendar (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.MonthCalendar AddMonthCalendar(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddMonthCalendar(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.MonthCalendar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.MonthCalendar" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.MonthCalendar" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddMonthCalendar%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.MonthCalendar>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.MonthCalendar>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.MonthCalendar>控件添加到单元格**A1**通过**C10**，然后将设置<xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>到星期一的属性。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#29](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#29)]
 [!code-vb[Trin_ExcelControlCollection#29](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonthCalendar">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.MonthCalendar AddMonthCalendar (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.MonthCalendar AddMonthCalendar(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddMonthCalendar(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.MonthCalendar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.MonthCalendar" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.MonthCalendar" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddMonthCalendar%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.MonthCalendar>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.MonthCalendar>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.MonthCalendar>控件添加到工作表，然后设置顶部<xref:System.Windows.Forms.MonthCalendar.FirstDayOfWeek%2A>到星期一的属性。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#30](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#30)]
 [!code-vb[Trin_ExcelControlCollection#30](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddNumericUpDown">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.NumericUpDown AddNumericUpDown (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.NumericUpDown AddNumericUpDown(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddNumericUpDown(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.NumericUpDown</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.NumericUpDown" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.NumericUpDown" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddNumericUpDown%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.NumericUpDown>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.NumericUpDown>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.NumericUpDown>控件添加到单元格**A1**，然后将值设置为 10。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#31](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#31)]
 [!code-vb[Trin_ExcelControlCollection#31](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddNumericUpDown">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.NumericUpDown AddNumericUpDown (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.NumericUpDown AddNumericUpDown(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddNumericUpDown(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.NumericUpDown</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.NumericUpDown" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.NumericUpDown" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddNumericUpDown%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.NumericUpDown>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.NumericUpDown>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.NumericUpDown>控制转移到顶部的工作表，然后设置的值为 10。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#32](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#32)]
 [!code-vb[Trin_ExcelControlCollection#32](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPictureBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.PictureBox AddPictureBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.PictureBox AddPictureBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddPictureBox(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.PictureBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.PictureBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.PictureBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddPictureBox%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.PictureBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.PictureBox>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.PictureBox>控件添加到单元格**A1**通过**C12**，然后添加图像。 该示例假定名为的文件`Image.jpg`C 目录的根目录上存在。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#33](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#33)]
 [!code-vb[Trin_ExcelControlCollection#33](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPictureBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.PictureBox AddPictureBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.PictureBox AddPictureBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddPictureBox(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.PictureBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.PictureBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.PictureBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddPictureBox%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.PictureBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.PictureBox>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.PictureBox>到工作表中，顶部控件，然后添加图像。 该示例假定名为的文件`Image.jpg`C 目录的根目录上存在。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#34](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#34)]
 [!code-vb[Trin_ExcelControlCollection#34](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddProgressBar">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.ProgressBar AddProgressBar (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.ProgressBar AddProgressBar(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddProgressBar(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.ProgressBar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ProgressBar" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ProgressBar" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddProgressBar%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.ProgressBar>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.ProgressBar>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.ProgressBar>控件添加到单元格**A1**通过**B1**，，之后会增加到 50 控件的当前位置。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#35](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#35)]
 [!code-vb[Trin_ExcelControlCollection#35](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddProgressBar">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.ProgressBar AddProgressBar (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.ProgressBar AddProgressBar(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddProgressBar(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.ProgressBar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ProgressBar" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.ProgressBar" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddProgressBar%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.ProgressBar>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.ProgressBar>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.ProgressBar>控制转移到顶部的工作表，然后增加到 50 控件的当前位置。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#36](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#36)]
 [!code-vb[Trin_ExcelControlCollection#36](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#36)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyGrid">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.PropertyGrid AddPropertyGrid (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.PropertyGrid AddPropertyGrid(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddPropertyGrid(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.PropertyGrid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.PropertyGrid" /> 控件。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddPropertyGrid%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.PropertyGrid>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.PropertyGrid>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.PropertyGrid>控件添加到单元格**A1**通过**C12**和<xref:Microsoft.Office.Tools.Excel.Controls.Button>控件添加到单元格**A14**。 然后显示的属性中的按钮<xref:Microsoft.Office.Tools.Excel.Controls.PropertyGrid>。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#37](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#37)]
 [!code-vb[Trin_ExcelControlCollection#37](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#37)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyGrid">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.PropertyGrid AddPropertyGrid (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.PropertyGrid AddPropertyGrid(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddPropertyGrid(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.PropertyGrid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.PropertyGrid" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.PropertyGrid" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddPropertyGrid%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.PropertyGrid>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.PropertyGrid>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.PropertyGrid>控件和<xref:Microsoft.Office.Tools.Excel.Controls.Button>到工作表中的控件。 然后，该代码显示的属性中的按钮<xref:Microsoft.Office.Tools.Excel.Controls.PropertyGrid>。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#38](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#38)]
 [!code-vb[Trin_ExcelControlCollection#38](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRadioButton">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.RadioButton AddRadioButton (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.RadioButton AddRadioButton(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddRadioButton(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.RadioButton</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.RadioButton" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.RadioButton" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddRadioButton%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.RadioButton>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.RadioButton>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
 当您直接向文档添加多个单选按钮时，单选按钮不互相排斥。 你可以编写代码以使单选按钮互斥;但是，首选的方法是向用户控件添加单选按钮，然后将用户控件添加到文档。  
  
   
  
## Examples  
 下面的代码示例添加两个<xref:Microsoft.Office.Tools.Excel.Controls.RadioButton>控件添加到表的单元格**A1**和**A2**，然后将文本分配给每个控件。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#39](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#39)]
 [!code-vb[Trin_ExcelControlCollection#39](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#39)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRadioButton">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.RadioButton AddRadioButton (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.RadioButton AddRadioButton(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddRadioButton(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.RadioButton</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.RadioButton" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.RadioButton" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddRadioButton%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.RadioButton>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.RadioButton>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 当您直接向文档添加多个单选按钮时，单选按钮不互相排斥。 你可以编写代码以使单选按钮互斥;但是，首选的方法是向用户控件添加单选按钮，然后将用户控件添加到文档。  
  
   
  
## Examples  
 下面的代码示例添加两个<xref:Microsoft.Office.Tools.Excel.Controls.RadioButton>控件添加到工作表中，顶部，然后将文本分配给每个控件。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#40](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#40)]
 [!code-vb[Trin_ExcelControlCollection#40](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRichTextBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.RichTextBox AddRichTextBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.RichTextBox AddRichTextBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddRichTextBox(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.RichTextBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.RichTextBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.RichTextBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddRichTextBox%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.RichTextBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.RichTextBox>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.RichTextBox>控件添加到单元格**A1**通过**B2**，将文本分配给该控件，然后设置文本的格式。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#41](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#41)]
 [!code-vb[Trin_ExcelControlCollection#41](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRichTextBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.RichTextBox AddRichTextBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.RichTextBox AddRichTextBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddRichTextBox(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.RichTextBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.RichTextBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.RichTextBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddRichTextBox%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.RichTextBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.RichTextBox>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.RichTextBox>控制到工作表中，将分配到控件，并且然后格式的文本顶部的文本。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#41](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#41)]
 [!code-vb[Trin_ExcelControlCollection#41](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTextBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.TextBox AddTextBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.TextBox AddTextBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddTextBox(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.TextBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.TextBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.TextBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddTextBox%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.TextBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.TextBox>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.TextBox>控件添加到单元格**A1**通过**B2**，然后将文本分配给该控件。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#43](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#43)]
 [!code-vb[Trin_ExcelControlCollection#43](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTextBox">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.TextBox AddTextBox (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.TextBox AddTextBox(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddTextBox(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.TextBox</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.TextBox" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.TextBox" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddTextBox%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.TextBox>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.TextBox>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.TextBox>控件添加到工作表，然后为该控件指定文本的顶部。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#44](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#44)]
 [!code-vb[Trin_ExcelControlCollection#44](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTrackBar">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.TrackBar AddTrackBar (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.TrackBar AddTrackBar(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddTrackBar(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.TrackBar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.TrackBar" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.TrackBar" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddTrackBar%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.TrackBar>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.TrackBar>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.TrackBar>控件添加到单元格**A1**通过**B2**，然后将设置之间的位置数量<xref:System.TimeSpan.Ticks%2A>上<xref:Microsoft.Office.Tools.Excel.Controls.TrackBar>。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#45](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#45)]
 [!code-vb[Trin_ExcelControlCollection#45](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#45)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTrackBar">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.TrackBar AddTrackBar (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.TrackBar AddTrackBar(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddTrackBar(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.TrackBar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.TrackBar" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.TrackBar" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddTrackBar%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.TrackBar>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.TrackBar>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.TrackBar>控制转移到顶部的工作表，然后设置之间的位置数量<xref:System.TimeSpan.Ticks%2A>上<xref:Microsoft.Office.Tools.Excel.Controls.TrackBar>。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#46](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#46)]
 [!code-vb[Trin_ExcelControlCollection#46](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#46)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTreeView">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.TreeView AddTreeView (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.TreeView AddTreeView(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddTreeView(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.TreeView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.TreeView" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.TreeView" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddTreeView%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.TreeView>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.TreeView>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.TreeView>控件添加到单元格**A1**通过**B6**，然后将父节点和两个子节点添加到控件。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#47](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#47)]
 [!code-vb[Trin_ExcelControlCollection#47](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#47)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTreeView">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.TreeView AddTreeView (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.TreeView AddTreeView(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddTreeView(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.TreeView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.TreeView" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.TreeView" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddTreeView%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.TreeView>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.TreeView>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.TreeView>控制到顶部工作表中，并将父节点和两个子节点然后添加到控件。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#48](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#48)]
 [!code-vb[Trin_ExcelControlCollection#48](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#48)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddVScrollBar">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.VScrollBar AddVScrollBar (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.VScrollBar AddVScrollBar(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddVScrollBar(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.VScrollBar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.VScrollBar" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.VScrollBar" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddVScrollBar%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.VScrollBar>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.VScrollBar>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.VScrollBar>控件添加到单元格**A1**通过**A8**，然后将滚动框移到滚动条的中心。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#49](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#49)]
 [!code-vb[Trin_ExcelControlCollection#49](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#49)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddVScrollBar">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.VScrollBar AddVScrollBar (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.VScrollBar AddVScrollBar(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddVScrollBar(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.VScrollBar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.VScrollBar" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.VScrollBar" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddVScrollBar%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.VScrollBar>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.VScrollBar>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.VScrollBar>控制转移到的工作表，，然后移动顶部到中心滚动条的滚动框。 若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#50](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#50)]
 [!code-vb[Trin_ExcelControlCollection#50](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数为 <see langword="null" /> 或长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddWebBrowser">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.WebBrowser AddWebBrowser (this Microsoft.Office.Tools.Excel.ControlCollection controls, Microsoft.Office.Interop.Excel.Range range, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.WebBrowser AddWebBrowser(class Microsoft.Office.Tools.Excel.ControlCollection controls, class Microsoft.Office.Interop.Excel.Range range, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddWebBrowser(Microsoft.Office.Tools.Excel.ControlCollection,Microsoft.Office.Interop.Excel.Range,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.WebBrowser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="range">提供控件的边界的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</param>
        <param name="name">可用于索引 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中控件的控件名称。</param>
        <summary>在工作表中的指定范围添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.WebBrowser" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.WebBrowser" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddWebBrowser%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.WebBrowser>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.WebBrowser>以编程方式之前，已添加，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
 范围调整大小时，该控件自动调整大小。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.WebBrowser>控件添加到单元格**A1**通过**M31**，然后导航到 www.microsoft.com 和。若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#51](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#51)]
 [!code-vb[Trin_ExcelControlCollection#51](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">名称参数或范围参数为 <see langword="null" />，或者名称参数长度为零。</exception>
        <exception cref="T:Microsoft.Office.Tools.ControlNameAlreadyExistsException">
          <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例中已存在一个同名控件。</exception>
        <exception cref="T:Microsoft.Office.Tools.InvalidRangeException">指定的范围无效。 不能使用多区域范围。 该范围应与 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 实例同在一个工作表中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddWebBrowser">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.Tools.Excel.Controls.WebBrowser AddWebBrowser (this Microsoft.Office.Tools.Excel.ControlCollection controls, double left, double top, double width, double height, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.Tools.Excel.Controls.WebBrowser AddWebBrowser(class Microsoft.Office.Tools.Excel.ControlCollection controls, float64 left, float64 top, float64 width, float64 height, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ControlExtensions.AddWebBrowser(Microsoft.Office.Tools.Excel.ControlCollection,System.Double,System.Double,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Controls.WebBrowser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="Microsoft.Office.Tools.Excel.ControlCollection" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controls">要添加控件的集合。 请勿自己提供此参数。 对 <see cref="P:Microsoft.Office.Tools.Excel.Worksheet.Controls" /> 属性（在应用程序级项目中）或 <see cref="P:Microsoft.Office.Tools.Excel.WorksheetBase.Controls" /> 属性（在文档级项目中）返回的集合调用此方法时，将自动提供此参数。</param>
        <param name="left">控件左边缘与工作表左边缘之间的距离（以磅为单位）。</param>
        <param name="top">控件上边缘与工作表上边缘之间的距离（以磅为单位）。</param>
        <param name="width">控件的宽度（以磅为单位）。</param>
        <param name="height">控件的高度（以磅为单位）。</param>
        <param name="name">控件的名称。</param>
        <summary>按照指定的大小和位置向工作表添加一个新的 <see cref="T:Microsoft.Office.Tools.Excel.Controls.WebBrowser" /> 控件。</summary>
        <returns>添加到 <see cref="T:Microsoft.Office.Tools.Excel.Controls.WebBrowser" /> 实例的 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Office.Tools.Excel.ControlExtensions.AddWebBrowser%2A>方法使您能够添加<xref:Microsoft.Office.Tools.Excel.Controls.WebBrowser>到末尾的对象<xref:Microsoft.Office.Tools.Excel.ControlCollection>。 若要删除<xref:Microsoft.Office.Tools.Excel.Controls.WebBrowser>之前以编程方式添加的控件，请使用<xref:Microsoft.Office.Tools.Excel.ControlCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.Controls.WebBrowser>控制转移到工作表中，然后导航到 www.microsoft.com。若要使用此示例中，运行从`Sheet1`文档级项目中的类。  
  
 [!code-csharp[Trin_ExcelControlCollection#52](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/CS/Sheet1.cs#52)]
 [!code-vb[Trin_ExcelControlCollection#52](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelControlCollection/VB/Sheet1.vb#52)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>