<Type Name="Chart" FullName="Microsoft.Office.Tools.Excel.Chart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa189dc5a1ccffecf003da5de8feb360aad1458c" />
    <Meta Name="ms.sourcegitcommit" Value="bb8a3a96823cedeffbdbcc0c41a8118399de8074" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="02/21/2018" />
    <Meta Name="ms.locfileid" Value="29435675" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Chart : IDisposable, System.ComponentModel.IComponent, System.ComponentModel.ISupportInitialize, System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Chart implements class System.ComponentModel.IComponent, class System.ComponentModel.ISupportInitialize, class System.IDisposable, class System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Tools.Excel.Chart" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IBindableComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("c4435b63-6e69-4360-92fb-2b144fd9b1d2")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3a5cf-101">表示 Microsoft Office Excel 的 Office 项目中的一个内嵌图表。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a5cf-101">Represents an embedded chart in Office projects for Microsoft Office Excel.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-102"><xref:Microsoft.Office.Tools.Excel.Chart> 控件提供的本机的所有功能<xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName>Excel 对象模型中的对象。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-102"><xref:Microsoft.Office.Tools.Excel.Chart> controls provide all the features of native <xref:Microsoft.Office.Interop.Excel.Chart?displayProperty=fullName> objects in the Excel object model.</span></span> <span data-ttu-id="3a5cf-103">但是，<xref:Microsoft.Office.Tools.Excel.Chart>控件还公开了事件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-103">However, <xref:Microsoft.Office.Tools.Excel.Chart> controls also expose events.</span></span> <span data-ttu-id="3a5cf-104">有关详细信息，请参阅[图表控件](/visualstudio/vsto/chart-control.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-104">For more information, see [Chart Control](/visualstudio/vsto/chart-control.md).</span></span>  
  
 [!INCLUDE[vsto_interface](~/includes/vsto-interface-md.md)]  
  
## <a name="usage"></a><span data-ttu-id="3a5cf-105">用法</span><span class="sxs-lookup"><span data-stu-id="3a5cf-105">Usage</span></span>  
 [!INCLUDE[vsto_net35mref](~/includes/vsto-net35mref-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_ApplyDataLabels">
      <MemberSignature Language="C#" Value="public void _ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _ApplyDataLabels(valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, object LegendKey, object AutoText, object HasLeaderLines) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="LegendKey">To be added.</param>
        <param name="AutoText">To be added.</param>
        <param name="HasLeaderLines">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart._CodeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy23">
      <MemberSignature Language="C#" Value="public void _Dummy23 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy23() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart._Dummy23" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate(object Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart._Evaluate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut(object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect(object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="DrawingObjects">To be added.</param>
        <param name="Contents">To be added.</param>
        <param name="Scenarios">To be added.</param>
        <param name="UserInterfaceOnly">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs(string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Activate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-106">使当前 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件成为活动图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-106">Makes the current <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control the active chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateEvent">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler ActivateEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler ActivateEvent" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.Chart.ActivateEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_ActivateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-107">在激活 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-107">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control is activated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-108">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>的处理程序与<xref:Microsoft.Office.Tools.Excel.Chart.ActivateEvent>激活图表时显示一个消息框的事件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-108">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with a handler for the <xref:Microsoft.Office.Tools.Excel.Chart.ActivateEvent> event that displays a message box when the chart is activated.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#200](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#200)]
 [!code-vb[Trin_ExcelChart#200](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#200)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-109">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Application" />，它表示 Microsoft Office Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-109">Gets an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Microsoft Office Excel application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-110">一个 <see cref="T:Microsoft.Office.Interop.Excel.Application" />，表示 Excel 应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-110">An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the Excel application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-111">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.Application%2A>属性在消息框中显示的应用程序名称。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-111">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.Application%2A> property to display the application name in a message box.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#1](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#1)]
 [!code-vb[Trin_ExcelChart#1](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyChartTemplate">
      <MemberSignature Language="C#" Value="public void ApplyChartTemplate (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyChartTemplate(string Filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.ApplyChartTemplate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="3a5cf-112">图表模板的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-112">The file name for a chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-113">将标准或自定义图表模板应用于图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-113">Applies a standard or custom chart template to the chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCustomType">
      <MemberSignature Language="C#" Value="public void ApplyCustomType (Microsoft.Office.Interop.Excel.XlChartType ChartType, object TypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCustomType(valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType, object TypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ChartType" Type="Microsoft.Office.Interop.Excel.XlChartType" />
        <Parameter Name="TypeName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ChartType">To be added.</param>
        <param name="TypeName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDataLabels">
      <MemberSignature Language="C#" Value="public void ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines, object ShowSeriesName, object ShowCategoryName, object ShowValue, object ShowPercentage, object ShowBubbleSize, object Separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDataLabels(valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, object LegendKey, object AutoText, object HasLeaderLines, object ShowSeriesName, object ShowCategoryName, object ShowValue, object ShowPercentage, object ShowBubbleSize, object Separator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
        <Parameter Name="ShowSeriesName" Type="System.Object" />
        <Parameter Name="ShowCategoryName" Type="System.Object" />
        <Parameter Name="ShowValue" Type="System.Object" />
        <Parameter Name="ShowPercentage" Type="System.Object" />
        <Parameter Name="ShowBubbleSize" Type="System.Object" />
        <Parameter Name="Separator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="3a5cf-114">
            <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-114">
              <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          </span>
          <span data-ttu-id="3a5cf-115">要应用的数据标签的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-115">The type of data label to apply.</span>
          </span>
        </param>
        <param name="LegendKey">
          <span data-ttu-id="3a5cf-116">为 <see langword="true" /> 时，在点旁边显示图例项标示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-116">
              <see langword="true" /> to show the legend key next to the point.</span>
          </span>
          <span data-ttu-id="3a5cf-117">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-117">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <param name="AutoText">
          <span data-ttu-id="3a5cf-118">如果对象自动根据内容生成适当的文本，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-118">
              <see langword="true" /> if the object automatically generates appropriate text based on content.</span>
          </span>
        </param>
        <param name="HasLeaderLines">
          <span data-ttu-id="3a5cf-119">对于 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 和 <see cref="T:Microsoft.Office.Interop.Excel.Series" /> 对象而言，如果系列包含引导线，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-119">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, <see langword="true" /> if the series has leader lines.</span>
          </span>
        </param>
        <param name="ShowSeriesName">
          <span data-ttu-id="3a5cf-120">数据标签的系列名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-120">The series name for the data label.</span>
          </span>
        </param>
        <param name="ShowCategoryName">
          <span data-ttu-id="3a5cf-121">数据标签的类别名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-121">The category name for the data label.</span>
          </span>
        </param>
        <param name="ShowValue">
          <span data-ttu-id="3a5cf-122">数据标签的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-122">The value for the data label.</span>
          </span>
        </param>
        <param name="ShowPercentage">
          <span data-ttu-id="3a5cf-123">数据标签的百分比。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-123">The percentage for the data label.</span>
          </span>
        </param>
        <param name="ShowBubbleSize">
          <span data-ttu-id="3a5cf-124">数据标签的气泡大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-124">The bubble size for the data label.</span>
          </span>
        </param>
        <param name="Separator">
          <span data-ttu-id="3a5cf-125">数据标签的分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-125">The separator for the data label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-126">将数据标签应用于 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件的某个点、某个系列或所有系列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-126">Applies data labels to a point, a series, or all the series in a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-127">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-127">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-128">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-128">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-129">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.ApplyDataLabels%2A>方法以在图表上显示数据标签与系列名称。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-129">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.ApplyDataLabels%2A> method to display data labels with the series names on the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#101](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#101)]
 [!code-vb[Trin_ExcelChart#101](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyLayout">
      <MemberSignature Language="C#" Value="public void ApplyLayout (int Layout, object ChartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyLayout(int32 Layout, object ChartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.ApplyLayout(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Layout" Type="System.Int32" />
        <Parameter Name="ChartType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Layout">
          <span data-ttu-id="3a5cf-130">1 到 10 之间的一个整数，用于指定要应用于图表的布局的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-130">An integer from 1 through 10 that specifies the type of layout to apply to the chart.</span>
          </span>
        </param>
        <param name="ChartType">To be added.</param>
        <summary>
          <span data-ttu-id="3a5cf-131">应用功能区上显示的布局。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-131">Applies the layouts shown on the Ribbon.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-132">值`Layout`参数对应于可用的选项上**图表布局**组**设计**功能区上的选项卡。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-132">The values of the `Layout` parameter correspond to the available options on the **Chart Layouts** group on the **Design** tab on the Ribbon.</span></span> <span data-ttu-id="3a5cf-133">**设计**选项卡选择图表后可用。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-133">The **Design** tab is available when you select a chart.</span></span>  
  
 <span data-ttu-id="3a5cf-134">每个类型的图表有自己的布局选项集。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-134">Each type of chart has its own set of layout options.</span></span> <span data-ttu-id="3a5cf-135">例如，饼图的布局选项是柱形图的布局选项不同。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-135">For example, the layout options for a pie chart are different from the layout options for a column chart.</span></span> <span data-ttu-id="3a5cf-136">如果你想要从不同的图表类型应用布局，则可以使用`ChartType`参数来指定图表键入`Layout`参数将引用。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-136">If you want to apply a layout from a different chart type, you can use the `ChartType` parameter to specify the chart type that the `Layout` parameter will refer to.</span></span> <span data-ttu-id="3a5cf-137">例如，如果你有一个柱形图和你想要从折线图应用布局、 传递<xref:Microsoft.Office.Interop.Excel.XlChartType.xlLine?displayProperty=fullName>值赋给`ChartType`参数。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-137">For example, if you have a column chart and you want to apply a layout from a line chart, pass the <xref:Microsoft.Office.Interop.Excel.XlChartType.xlLine?displayProperty=fullName> value to the `ChartType` parameter.</span></span> <span data-ttu-id="3a5cf-138">布局将只添加可用于该特定的图表类型的图表元素。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-138">The layout only adds chart elements that are available for that particular chart type.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-139">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-139">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-140">有关可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-140">For information about optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-141">下面的代码示例应用可用于的图表类型的第 10 个布局`Chart_1`图表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-141">The following code example applies the tenth layout that is available for the chart type of the `Chart_1` chart.</span></span> <span data-ttu-id="3a5cf-142">此外，该示例使用<xref:Microsoft.Office.Tools.Excel.Chart.SetElement%2A>方法应用更多布局更改： 设置图表标题为居中且位于图表网格区域内的样式、 添加的水平轴的标题以及添加垂直轴的旋转的标题。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-142">In addition, the example uses the <xref:Microsoft.Office.Tools.Excel.Chart.SetElement%2A> method to apply further layout changes: setting the style of the chart title to be centered and to lie inside the chart grid area, adding a title for the horizontal axis, and adding a rotated title for the vertical axis.</span></span> <span data-ttu-id="3a5cf-143">若要运行此代码示例，必须将添加名为簇状的柱形二维图表`Chart_1`默认表`Sheet1`。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-143">To run this code example, you must add a clustered column two-dimensional chart with the name `Chart_1` to the default sheet `Sheet1`.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkBook_Additional#17](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#17)]
 [!code-vb[Trin_ExcelWorkBook_Additional#17](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arcs(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Arcs(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Area3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Area3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreaGroups">
      <MemberSignature Language="C#" Value="public object AreaGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AreaGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.AreaGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public void AutoFormat (int Gallery, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AutoFormat(int32 Gallery, object Format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.AutoFormat(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Gallery" Type="System.Int32" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Gallery">To be added.</param>
        <param name="Format">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaling">
      <MemberSignature Language="C#" Value="public bool AutoScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScaling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.AutoScaling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-144">缩放三维图表，以使其在大小上更接近等效的二维图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-144">Scales a 3-D chart so that it is closer in size to the equivalent 2-D chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-145">如果 Microsoft Office Excel 缩放三维图表，以使其在大小上更接近等效的二维图表，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-145">
              <see langword="true" /> if Microsoft Office Excel scales a 3-D chart so that it is closer in size to the equivalent 2-D chart; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3a5cf-146">
            <see cref="P:Microsoft.Office.Tools.Excel.Chart.RightAngleAxes" /> 属性必须为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-146">The <see cref="P:Microsoft.Office.Tools.Excel.Chart.RightAngleAxes" /> property must be <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-147">下面的代码示例创建一个三维<xref:Microsoft.Office.Tools.Excel.Chart>，然后将设置<xref:Microsoft.Office.Tools.Excel.Chart.AutoScaling%2A>属性`true`自动缩放图表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-147">The following code example creates a 3-D <xref:Microsoft.Office.Tools.Excel.Chart> and then sets the <xref:Microsoft.Office.Tools.Excel.Chart.AutoScaling%2A> property to `true` to automatically scale the chart.</span></span> <span data-ttu-id="3a5cf-148">该示例设置<xref:Microsoft.Office.Tools.Excel.Chart.RightAngleAxes%2A>属性`true`之前<xref:Microsoft.Office.Tools.Excel.Chart.AutoScaling%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-148">The example sets the <xref:Microsoft.Office.Tools.Excel.Chart.RightAngleAxes%2A> property to `true` before the <xref:Microsoft.Office.Tools.Excel.Chart.AutoScaling%2A> property is set.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#4)]
 [!code-vb[Trin_ExcelChart#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Axes">
      <MemberSignature Language="C#" Value="public object Axes (object Type, Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup = Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Axes(object Type, valuetype Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Axes(System.Object,Microsoft.Office.Interop.Excel.XlAxisGroup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="AxisGroup" Type="Microsoft.Office.Interop.Excel.XlAxisGroup" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="3a5cf-149">指定要返回的轴。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-149">Specifies the axis to return.</span>
          </span>
          <span data-ttu-id="3a5cf-150">可以为以下 <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlValue" />、<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" />（<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" /> 只对三维图表有效）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-150">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlValue" />, <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" /> (<see cref="F:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis" /> is valid only for 3-D charts).</span>
          </span>
        </param>
        <param name="AxisGroup">
          <span data-ttu-id="3a5cf-151">可选的 <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-151">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span>
          </span>
          <span data-ttu-id="3a5cf-152">指定轴组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-152">Specifies the axis group.</span>
          </span>
          <span data-ttu-id="3a5cf-153">如果省略此参数，则使用主轴组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-153">If this argument is omitted, the primary group is used.</span>
          </span>
          <span data-ttu-id="3a5cf-154">三维图表只有一个轴组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-154">3-D charts have only one axis group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-155">获取一个对象，该对象表示图表上的一个轴或一个轴集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-155">Gets an object that represents either a single axis or a collection of the axes on the chart.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-156">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-156">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-157">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-157">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-158">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.Axes%2A>方法添加到主轴标题。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-158">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.Axes%2A> method to add a title to the primary axis.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#103](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#103)]
 [!code-vb[Trin_ExcelChart#103](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls BackWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls BackWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.BackWall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-159">获取一个对象，该对象表示三维图表的背面墙。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-159">Gets an object that represents the back wall of a 3-D chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-160">一个 <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，表示三维图表的背面墙。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-160">A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the back wall of a 3-D chart.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-161">使用<xref:Microsoft.Office.Tools.Excel.Chart.BackWall%2A>后三维图表的墙进行格式设置的属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-161">Use the <xref:Microsoft.Office.Tools.Excel.Chart.BackWall%2A> property to format the back wall of a 3-D chart.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-162">下面的代码示例将添加到三维簇状的柱形图`Sheet1`并设置其样式为样式 4。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-162">The following code example adds a 3-D clustered column chart to `Sheet1` and sets its style to style 4.</span></span> <span data-ttu-id="3a5cf-163">然后，示例创建的任意数据范围，并将其设置为图表源数据。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-163">The example then creates a range of arbitrary data and sets it as the chart source data.</span></span> <span data-ttu-id="3a5cf-164">接下来，该代码指定图表背景墙和层的颜色。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-164">Next, the code specifies the colors of the chart walls and floor.</span></span>  
  
 [!code-csharp[Trin_Excelworkbook_Additional#37](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#37)]
 [!code-vb[Trin_Excelworkbook_Additional#37](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bar3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Bar3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarGroups">
      <MemberSignature Language="C#" Value="public object BarGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BarGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.BarGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlBarShape BarShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlBarShape BarShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.BarShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlBarShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-165">获取或设置用于三维条形或柱形图的形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-165">Gets or sets the shape used with the 3-D bar or column chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-166">
            <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-166">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-167">下面的代码示例创建一个三维<xref:Microsoft.Office.Tools.Excel.Chart>然后会提示用户进行更改条形图和棱锥图中使用的形状<xref:Microsoft.Office.Tools.Excel.Chart.BarShape%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-167">The following code example creates a 3-D <xref:Microsoft.Office.Tools.Excel.Chart> and then prompts the user to change the bar shape to pyramids by using the <xref:Microsoft.Office.Tools.Excel.Chart.BarShape%2A> property.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#5](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#5)]
 [!code-vb[Trin_ExcelChart#5](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeDoubleClick">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler BeforeDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler BeforeDoubleClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.Chart.BeforeDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_BeforeDoubleClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-168">在双击 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件时，但在默认双击操作之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-168">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control is double-clicked, before the default double-click action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-169"><xref:Microsoft.Office.Interop.Excel._Application.DoubleClick%2A>方法不会导致此事件发生。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-169">The <xref:Microsoft.Office.Interop.Excel._Application.DoubleClick%2A> method does not cause this event to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-170">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>的处理程序与<xref:Microsoft.Office.Tools.Excel.Chart.BeforeDoubleClick>时显示一个消息框轴的图表的事件是双击。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-170">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with a handler for the <xref:Microsoft.Office.Tools.Excel.Chart.BeforeDoubleClick> event that displays a message box when an axis of the chart is double-clicked.</span></span> <span data-ttu-id="3a5cf-171">该示例还将`Cancel`的事件处理程序参数`true`，以便图表不会收到双击操作，当用户双击轴。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-171">The example also sets the `Cancel` parameter of the event handler to `true` so that the chart does not receive the double click action when the user double-clicks an axis.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#201](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#201)]
 [!code-vb[Trin_ExcelChart#201](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#201)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeRightClick">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler BeforeRightClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler BeforeRightClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.Chart.BeforeRightClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_BeforeRightClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-172">在右击 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件时，但在默认右击操作之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-172">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control is right-clicked, before the default right-click action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-173">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>的处理程序与<xref:Microsoft.Office.Tools.Excel.Chart.BeforeRightClick>右击图表时显示一个消息框的事件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-173">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with a handler for the <xref:Microsoft.Office.Tools.Excel.Chart.BeforeRightClick> event that displays a message box when the chart is right-clicked.</span></span> <span data-ttu-id="3a5cf-174">该示例还将`Cancel`的事件处理程序参数`true`，因此图表不会收到右键单击操作。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-174">The example also sets the `Cancel` parameter of the event handler to `true` so that the chart does not receive the right click action.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#202](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#202)]
 [!code-vb[Trin_ExcelChart#202](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#202)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.Chart.BindingContextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Buttons(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Buttons(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler Calculate;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler Calculate" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.Chart.Calculate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_CalculateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-175">在 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件绘制新的或更改的数据后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-175">Occurs after the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control plots new or changed data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-176">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>的处理程序与<xref:Microsoft.Office.Tools.Excel.Chart.Calculate>图表的源数据更改时显示一个消息框的事件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-176">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with a handler for the <xref:Microsoft.Office.Tools.Excel.Chart.Calculate> event that displays a message box when the source data of the chart changes.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#203](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#203)]
 [!code-vb[Trin_ExcelChart#203](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#203)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartArea ChartArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartArea ChartArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-177">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> 对象，该对象表示图表的完整图表区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-177">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> object that represents the complete chart area for the chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-178">一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> 对象，表示图表的完整图表区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-178">A <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> object that represents the complete chart area for the chart.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-179">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.ChartArea%2A>属性修改的权重和图表区边框的颜色。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-179">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.ChartArea%2A> property to modify the weight and color of the chart area border.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#6](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#6)]
 [!code-vb[Trin_ExcelChart#6](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartGroups">
      <MemberSignature Language="C#" Value="public object ChartGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.ChartGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="3a5cf-180">图表组编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-180">The chart group number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-181">获取单个图表组（<see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> 对象）或图表中所有图表组的集合（<see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> 对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-181">Gets either a single chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of all the chart groups in the chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> object).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a5cf-182">单个图表组（<see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> 对象）或图表中所有图表组的集合（<see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> 对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-182">Either a single chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of all the chart groups in the chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> object).</span>
          </span>
          <span data-ttu-id="3a5cf-183">返回的集合包括所有类型的组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-183">The returned collection includes every type of group.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-184">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-184">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-185">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-185">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-186">下面的代码示例创建一个列<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.ChartGroups%2A>方法来修改列之间的空间。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-186">The following code example creates a column <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.ChartGroups%2A> method to modify the space between the columns.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#105](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#105)]
 [!code-vb[Trin_ExcelChart#105](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartObjects(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.ChartObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="3a5cf-187">图表的名称或编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-187">The name or number of the chart.</span>
          </span>
          <span data-ttu-id="3a5cf-188">此参数可以是一个数组，以指定多个图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-188">This argument can be an array, to specify more than one chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-189">获取一个对象，该对象表示工作表上的单个嵌入式图表（<see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> 对象）或所有嵌入式图表的集合（<see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> 对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-189">Gets an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a5cf-190">一个对象，表示工作表上的单个嵌入式图表（<see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> 对象）或所有嵌入式图表的集合（<see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> 集合）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-190">An object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> collection) on the sheet.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-191">此方法不是等效于<xref:Microsoft.Office.Tools.Excel.Workbook.Charts%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-191">This method is not equivalent to the <xref:Microsoft.Office.Tools.Excel.Workbook.Charts%2A> property.</span></span> <span data-ttu-id="3a5cf-192">此方法返回嵌入的图表;`Charts`属性返回图表工作表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-192">This method returns embedded charts; the `Charts` property returns chart sheets.</span></span> <span data-ttu-id="3a5cf-193">使用<xref:Microsoft.Office.Interop.Excel.ChartObject.Chart%2A>属性以返回`Chart`嵌入图表的对象。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-193">Use the <xref:Microsoft.Office.Interop.Excel.ChartObject.Chart%2A> property to return the `Chart` object for an embedded chart.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-194">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-194">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-195">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-195">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-196">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.ChartObjects%2A>方法以显示是否由 Microsoft Office Excel 创建图表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-196">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.ChartObjects%2A> method to display whether or not the chart was created by Microsoft Office Excel.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#106](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#106)]
 [!code-vb[Trin_ExcelChart#106](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartStyle">
      <MemberSignature Language="C#" Value="public object ChartStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChartStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ChartStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-197">获取或设置图表的样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-197">Gets or sets the style of the chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-198">1 到 48 之间的一个整数，用于表示图表的样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-198">An integer from 1 through 48 that represents the style of the chart.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-199">值<xref:Microsoft.Office.Tools.Excel.Chart.ChartStyle%2A>上的属性对应于可用的选项**图表样式**组**设计**功能区上的选项卡。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-199">The values of the <xref:Microsoft.Office.Tools.Excel.Chart.ChartStyle%2A> property correspond to the available options on the **Chart Styles** group on the **Design** tab on the Ribbon.</span></span> <span data-ttu-id="3a5cf-200">**设计**选项卡选择图表后可用。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-200">The **Design** tab is available when you select a chart.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-201">下面的代码示例将添加到三维簇状的柱形图`Sheet1`并设置其样式为样式 4。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-201">The following code example adds a 3-D clustered column chart to `Sheet1` and sets its style to style 4.</span></span> <span data-ttu-id="3a5cf-202">然后，示例创建的任意数据范围，并将其设置为图表源数据。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-202">The example then creates a range of arbitrary data and sets it as the chart source data.</span></span> <span data-ttu-id="3a5cf-203">接下来，该代码指定图表背景墙和层的颜色。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-203">Next, the code specifies the colors of the chart walls and floor.</span></span>  
  
 [!code-csharp[Trin_Excelworkbook_Additional#37](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#37)]
 [!code-vb[Trin_Excelworkbook_Additional#37](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartTitle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartTitle ChartTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartTitle ChartTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ChartTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartTitle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-204">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> 对象，该对象表示指定图表的标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-204">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object that represents the title of the specified chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-205">一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> 对象，表示指定图表的标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-205">A <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object that represents the title of the specified chart.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-206">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.ChartTitle%2A>属性修改标题的字体颜色。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-206">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.ChartTitle%2A> property to modify the font color of the title.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#7](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#7)]
 [!code-vb[Trin_ExcelChart#7](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ChartType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-207">获取或设置图表类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-207">Gets or sets the chart type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-208">
            <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-208">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-209">某些图表类型将不可用的数据透视图报表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-209">Some chart types are not available for PivotChart reports.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-210">下面的代码示例创建一个列<xref:Microsoft.Office.Tools.Excel.Chart>然后会提示用户使用该图表更改为三维饼图<xref:Microsoft.Office.Tools.Excel.Chart.ChartType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-210">The following code example creates a column <xref:Microsoft.Office.Tools.Excel.Chart> and then prompts the user to change the chart to a 3-D pie chart by using the <xref:Microsoft.Office.Tools.Excel.Chart.ChartType%2A> property.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#8](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#8)]
 [!code-vb[Trin_ExcelChart#8](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartWizard">
      <MemberSignature Language="C#" Value="public void ChartWizard (object Source, object Gallery, object Format, object PlotBy, object CategoryLabels, object SeriesLabels, object HasLegend, object Title, object CategoryTitle, object ValueTitle, object ExtraTitle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChartWizard(object Source, object Gallery, object Format, object PlotBy, object CategoryLabels, object SeriesLabels, object HasLegend, object Title, object CategoryTitle, object ValueTitle, object ExtraTitle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="PlotBy" Type="System.Object" />
        <Parameter Name="CategoryLabels" Type="System.Object" />
        <Parameter Name="SeriesLabels" Type="System.Object" />
        <Parameter Name="HasLegend" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="CategoryTitle" Type="System.Object" />
        <Parameter Name="ValueTitle" Type="System.Object" />
        <Parameter Name="ExtraTitle" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="3a5cf-211">包含新图表的源数据的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-211">The range that contains the source data for the new chart.</span>
          </span>
          <span data-ttu-id="3a5cf-212">如果省略此参数，则 Microsoft Office Excel 编辑活动图表工作表或在活动工作表上选择的 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-212">If this argument is omitted, Microsoft Office Excel edits the active chart sheet or the selected <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control on the active worksheet.</span>
          </span>
        </param>
        <param name="Gallery">
          <span data-ttu-id="3a5cf-213">
            <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-213">
              <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
          <span data-ttu-id="3a5cf-214">图表类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-214">The chart type.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="3a5cf-215">内置自动套用格式的选项编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-215">The option number for the built-in autoformats.</span>
          </span>
          <span data-ttu-id="3a5cf-216">可以是一个 1 到 10 之间的数（取决于库类型）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-216">Can be a number from 1 through 10, depending on the gallery type.</span>
          </span>
          <span data-ttu-id="3a5cf-217">如果省略此参数，则 Excel 根据库类型和数据源选择默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-217">If this argument is omitted, Excel chooses a default value based on the gallery type and data source.</span>
          </span>
        </param>
        <param name="PlotBy">
          <span data-ttu-id="3a5cf-218">指定每个系列的数据是按行绘制还是按列绘制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-218">Specifies whether the data for each series is in rows or columns.</span>
          </span>
          <span data-ttu-id="3a5cf-219">可以是下列 <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-219">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" />.</span>
          </span>
        </param>
        <param name="CategoryLabels">
          <span data-ttu-id="3a5cf-220">一个整数，指定源范围中包含类别标签的行数或列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-220">An integer specifying the number of rows or columns within the source range that contain category labels.</span>
          </span>
          <span data-ttu-id="3a5cf-221">合法值是从 0（零）到相应类别或系列的最大数减一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-221">Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</span>
          </span>
        </param>
        <param name="SeriesLabels">
          <span data-ttu-id="3a5cf-222">一个整数，指定源范围中包含系列标签的行数或列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-222">An integer specifying the number of rows or columns within the source range that contain series labels.</span>
          </span>
          <span data-ttu-id="3a5cf-223">合法值是从 0（零）到相应类别或系列的最大数减一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-223">Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</span>
          </span>
        </param>
        <param name="HasLegend">
          <span data-ttu-id="3a5cf-224">为 <see langword="true" /> 时包含图例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-224">
              <see langword="true" /> to include a legend.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="3a5cf-225">
            <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件标题文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-225">The <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control title text.</span>
          </span>
        </param>
        <param name="CategoryTitle">
          <span data-ttu-id="3a5cf-226">分类轴标题文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-226">The category axis title text.</span>
          </span>
        </param>
        <param name="ValueTitle">
          <span data-ttu-id="3a5cf-227">数值轴标题文本</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-227">The value axis title text</span>
          </span>
        </param>
        <param name="ExtraTitle">
          <span data-ttu-id="3a5cf-228">三维图表的系列轴标题或二维图表的第二个数值轴标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-228">The series axis title for 3-D charts or the second value axis title for 2-D charts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-229">修改给定 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-229">Modifies the properties of the given <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
          <span data-ttu-id="3a5cf-230">使用此方法可以快速地对 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件进行格式设置，而无需逐个设置所有属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-230">You can use this method to quickly format a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control without setting all the individual properties.</span>
          </span>
          <span data-ttu-id="3a5cf-231">此方法是非交互式的，它只更改指定的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-231">This method is non-interactive, and it changes only the specified properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-232">如果`Source`省略和任何一种选择不是在活动工作表或在活动工作表上的嵌入的图表不是现有图表，此方法将失败，发生错误。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-232">If `Source` is omitted and either the selection is not an embedded chart on the active worksheet or the active sheet is not an existing chart, this method fails and an error occurs.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-233">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-233">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-234">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-234">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-235">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.Chart.ChartWizard%2A>方法来创建显示数据序列中的单元格 A1 B5 范围三维柱形图。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-235">The following code example uses the <xref:Microsoft.Office.Tools.Excel.Chart.ChartWizard%2A> method to create a 3-D column chart that displays the data series in the range of cells A1 to B5.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#107](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#107)]
 [!code-vb[Trin_ExcelChart#107](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckBoxes(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.CheckBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling(object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">
          <span data-ttu-id="3a5cf-236">未在主字典中找到单词时要检查的自定义字典的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-236">The file name of the custom dictionary to be examined if the word is not found in the main dictionary.</span>
          </span>
          <span data-ttu-id="3a5cf-237">如果省略此参数，则使用当前指定的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-237">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="3a5cf-238">
            <see langword="true" /> 表示使 Microsoft Office Excel 忽略全部大写的单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-238">
              <see langword="true" /> to have Microsoft Office Excel ignore words that are all uppercase.</span>
          </span>
          <span data-ttu-id="3a5cf-239">如果为 <see langword="false" />，则使 Excel 检查全部大写的单词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-239">
              <see langword="false" /> to have Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="3a5cf-240">如果省略此参数，则使用当前设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-240">If this argument is omitted, the current setting is used.</span>
          </span>
        </param>
        <param name="AlwaysSuggest">
          <span data-ttu-id="3a5cf-241">
            <see langword="true" /> 表示当发现不正确的拼写时让 Excel 显示建议的替换拼写列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-241">
              <see langword="true" /> to have Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span>
          </span>
          <span data-ttu-id="3a5cf-242">如果为 <see langword="false" />，则使 Excel 等待您输入正确的拼写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-242">
              <see langword="false" /> to have Excel wait for you to input the correct spelling.</span>
          </span>
          <span data-ttu-id="3a5cf-243">如果省略此参数，则使用当前设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-243">If this argument is omitted, the current setting is used.</span>
          </span>
        </param>
        <param name="SpellLang">
          <span data-ttu-id="3a5cf-244">所使用的字典的语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-244">The language of the dictionary being used.</span>
          </span>
          <span data-ttu-id="3a5cf-245">可以为 <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> 属性使用的 <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-245">Can be one of the <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-246">检查对象的拼写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-246">Checks the spelling of an object.</span>
          </span>
          <span data-ttu-id="3a5cf-247">Microsoft Office Excel 显示“拼写检查”对话框</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-247">Microsoft Office Excel displays the **Spelling** dialog box</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-248">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-248">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-249">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-249">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-250">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>有标题，然后使用中的拼写错误<xref:Microsoft.Office.Tools.Excel.Chart.CheckSpelling%2A>方法时忽略大写单词并给出建议替换拼写检查图表中的拼写。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-250">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with misspellings in the title, and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.CheckSpelling%2A> method to check the spelling in the chart while ignoring uppercase words and suggesting alternate spellings.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#108](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#108)]
 [!code-vb[Trin_ExcelChart#108](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearToMatchStyle">
      <MemberSignature Language="C#" Value="public void ClearToMatchStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearToMatchStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.ClearToMatchStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-251">清除格式设置为自动的图表元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-251">Clears the chart elements formatting to automatic.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-252">使用此方法重置为自动格式设置的图表元素。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-252">Use this method to reset the chart elements formatting to automatic.</span></span> <span data-ttu-id="3a5cf-253">如果使用此方法时，所有格式 （包括替代） 将重置。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-253">If you use this method, all formatting (including overrides) will be reset.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.CodeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Column3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnGroups">
      <MemberSignature Language="C#" Value="public object ColumnGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ColumnGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.ColumnGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy(object Before, object After) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Copy(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">To be added.</param>
        <param name="After">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyChartBuild">
      <MemberSignature Language="C#" Value="public void CopyChartBuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyChartBuild() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.CopyChartBuild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public void CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture, Microsoft.Office.Interop.Excel.XlPictureAppearance Size = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPicture(valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format, valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat,Microsoft.Office.Interop.Excel.XlPictureAppearance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
        <Parameter Name="Size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
      </Parameters>
      <Docs>
        <param name="Appearance">
          <span data-ttu-id="3a5cf-254">
            <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-254">
              <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          </span>
          <span data-ttu-id="3a5cf-255">指定复制图片的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-255">Specifies how the picture should be copied.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="3a5cf-256">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-256">
              <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          </span>
          <span data-ttu-id="3a5cf-257">该图片的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-257">The format of the picture.</span>
          </span>
        </param>
        <param name="Size">
          <span data-ttu-id="3a5cf-258">
            <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-258">
              <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          </span>
          <span data-ttu-id="3a5cf-259">对象为图表工作表上的图表（未嵌入在工作表上）上时复制的图片的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-259">The size of the copied picture when the object is a chart on a chart sheet (not embedded on a worksheet).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-260">将图表作为图片复制到剪贴板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-260">Copies the chart to the Clipboard as a picture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-261">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-261">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-262">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-262">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-263">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.CopyPicture%2A>方法以将图表复制到剪贴板以位图格式。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-263">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.CopyPicture%2A> method to copy the chart to the Clipboard as a bitmap.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#111](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#111)]
 [!code-vb[Trin_ExcelChart#111](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#111)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Corners">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Corners Corners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Corners Corners" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Corners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Corners</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public void CreatePublisher (object Edition, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlPictureAppearance Size = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreatePublisher(object Edition, valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Size, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ContainsPICT" Type="System.Object" />
        <Parameter Name="ContainsBIFF" Type="System.Object" />
        <Parameter Name="ContainsRTF" Type="System.Object" />
        <Parameter Name="ContainsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Edition">To be added.</param>
        <param name="Appearance">To be added.</param>
        <param name="Size">To be added.</param>
        <param name="ContainsPICT">To be added.</param>
        <param name="ContainsBIFF">To be added.</param>
        <param name="ContainsRTF">To be added.</param>
        <param name="ContainsVALU">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-264">获取在其中创建此 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-264">Gets the application in which this <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-265">
            <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-265">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-266">因为<xref:Microsoft.Office.Tools.Excel.Chart>创建在 Microsoft Office Excel 中，此属性将返回字符串接，这等同于十六进制数字 5843454c。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-266">Because the <xref:Microsoft.Office.Tools.Excel.Chart> was created in Microsoft Office Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-267">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.Creator%2A>属性以验证是否由 Microsoft Office Excel 创建图表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-267">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.Creator%2A> property to verify whether or not the chart was created by Microsoft Office Excel.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#11](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#11)]
 [!code-vb[Trin_ExcelChart#11](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataTable DataTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataTable DataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.DataTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-268">获取一个表示图表数据表的 <see cref="T:Microsoft.Office.Interop.Excel.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-268">Gets a <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> that represents the chart data table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-269">一个表示图表数据表的 <see cref="T:Microsoft.Office.Interop.Excel.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-269">A <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> that represents the chart data table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-270">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.HasDataTable%2A>和<xref:Microsoft.Office.Tools.Excel.Chart.DataTable%2A>属性要在图表中以边框大纲显示数据的表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-270">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.HasDataTable%2A> and <xref:Microsoft.Office.Tools.Excel.Chart.DataTable%2A> properties to display a data table in the chart with a border outline.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#12](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#12)]
 [!code-vb[Trin_ExcelChart#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler Deactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler Deactivate" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.Chart.Deactivate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_DeactivateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-271">在从 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件中移走所选内容以使 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件停用时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-271">Occurs when the selection moves away from the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control, causing the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control to become deactivated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-272">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>的处理程序与<xref:Microsoft.Office.Tools.Excel.Chart.Deactivate>图表被停用时显示一个消息框的事件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-272">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with a handler for the <xref:Microsoft.Office.Tools.Excel.Chart.Deactivate> event that displays a message box when the chart is deactivated.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#204](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#204)]
 [!code-vb[Trin_ExcelChart#204](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#204)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDataSourceUpdateMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataSourceUpdateMode DefaultDataSourceUpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataSourceUpdateMode DefaultDataSourceUpdateMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.DefaultDataSourceUpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataSourceUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-273">获取或设置默认 <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-273">Gets or sets the default <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-274">
            <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-274">One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values.</span>
          </span>
          <span data-ttu-id="3a5cf-275">默认值为 <see cref="F:System.Windows.Forms.DataSourceUpdateMode.Never" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-275">The default is <see cref="F:System.Windows.Forms.DataSourceUpdateMode.Never" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-276">在情况下使用此属性其中<xref:System.Windows.Forms.Binding>而无需<xref:System.Windows.Forms.Binding.DataSourceUpdateMode%2A>指定值添加到<xref:System.Windows.Forms.IBindableComponent.DataBindings%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-276">This property is used in cases where a <xref:System.Windows.Forms.Binding> without a <xref:System.Windows.Forms.Binding.DataSourceUpdateMode%2A> value specified is added to the <xref:System.Windows.Forms.IBindableComponent.DataBindings%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Delete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-277">从工作表中删除动态创建的 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 控件并将其从 <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" /> 中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-277">Deletes a dynamically created <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> control from the worksheet and removes it from the <see cref="T:Microsoft.Office.Tools.Word.ControlCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-278">此方法仅应该用于<xref:Microsoft.Office.Interop.Excel.Chart>在运行时以编程方式创建的控件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-278">This method should only be used with a <xref:Microsoft.Office.Interop.Excel.Chart> control that is created programmatically at run time.</span></span> <span data-ttu-id="3a5cf-279">如果在调用此方法引发异常<xref:Microsoft.Office.Interop.Excel.Chart>在设计时添加到工作表的控件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-279">An exception is thrown if you call this method on a <xref:Microsoft.Office.Interop.Excel.Chart> control that is added to the worksheet at design time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthPercent">
      <MemberSignature Language="C#" Value="public int DepthPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DepthPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.DepthPercent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-280">获取或设置三维图表的深度，以图表宽度的百分比形式（在 20% 到 2000% 之间）表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-280">Gets or sets the depth of a 3-D chart as a percentage of the chart width (between 20 and 2000 percent).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-281">三维图表的深度（以图表宽度的百分比表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-281">The depth of a 3-D chart as a percentage of the chart width.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-282">下面的代码示例创建一个三维<xref:Microsoft.Office.Tools.Excel.Chart>然后通过将更改为图表的宽度的 500%深度<xref:Microsoft.Office.Tools.Excel.Chart.DepthPercent%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-282">The following code example creates a 3-D <xref:Microsoft.Office.Tools.Excel.Chart> and then changes the depth to 500 percent of the chart's width by using the <xref:Microsoft.Office.Tools.Excel.Chart.DepthPercent%2A> property.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#13](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#13)]
 [!code-vb[Trin_ExcelChart#13](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deselect">
      <MemberSignature Language="C#" Value="public void Deselect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deselect() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Deselect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayBlanksAs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.DisplayBlanksAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayBlanksAs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-283">获取或设置在图表上绘制空白单元格的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-283">Gets or sets the way that blank cells are plotted on a chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-284">以下 <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> 值之一：<see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlNotPlotted" />、<see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlInterpolated" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlZero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-284">One of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlNotPlotted" />, <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlInterpolated" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs.xlZero" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-285">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.DisplayBlanksAs%2A>属性指定空白单元格不会绘制图表数据区域中。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-285">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.DisplayBlanksAs%2A> property to specify that blank cells are not plotted in the data range of the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#14](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#14)]
 [!code-vb[Trin_ExcelChart#14](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoughnutGroups">
      <MemberSignature Language="C#" Value="public object DoughnutGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DoughnutGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.DoughnutGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_DragOverEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_DragOverEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.Chart.DragOver" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_DragOverEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-286">当在 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件上拖动单元格范围时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-286">Occurs when a range of cells is dragged over a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-287">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>的处理程序与<xref:Microsoft.Office.Tools.Excel.Chart.DragOver>在图表上拖动时显示一个消息框范围的单元格的事件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-287">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with a handler for the <xref:Microsoft.Office.Tools.Excel.Chart.DragOver> event that displays a message box when a range of cells is dragged over the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#205](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#205)]
 [!code-vb[Trin_ExcelChart#205](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#205)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragPlot">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_DragPlotEventHandler DragPlot;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_DragPlotEventHandler DragPlot" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.Chart.DragPlot" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_DragPlotEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-288">在将单元格范围拖放至 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件上时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-288">Occurs when a range of cells is dragged and dropped on the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-289">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>的处理程序与<xref:Microsoft.Office.Tools.Excel.Chart.DragPlot>拖动和删除在图表上时显示一个消息框范围的单元格的事件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-289">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with a handler for the <xref:Microsoft.Office.Tools.Excel.Chart.DragPlot> event that displays a message box when a range of cells is dragged and dropped on the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#206](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#206)]
 [!code-vb[Trin_ExcelChart#206](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#206)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DrawingObjects(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.DrawingObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Drawings(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Drawings(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DropDowns(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.DropDowns(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy24">
      <MemberSignature Language="C#" Value="public bool Dummy24 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy24" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Dummy24" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy25">
      <MemberSignature Language="C#" Value="public bool Dummy25 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy25" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Dummy25" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elevation">
      <MemberSignature Language="C#" Value="public int Elevation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Elevation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Elevation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-290">获取或设置三维图表视图的仰角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-290">Gets or sets the elevation of the 3-D chart view, in degrees.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-291">三维图表视图的仰角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-291">The elevation of the 3-D chart view, in degrees.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-292">下面的代码示例创建一个三维<xref:Microsoft.Office.Tools.Excel.Chart>然后通过将更改为 75 度提升<xref:Microsoft.Office.Tools.Excel.Chart.Elevation%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-292">The following code example creates a 3-D <xref:Microsoft.Office.Tools.Excel.Chart> and then changes the elevation to 75 degrees by using the <xref:Microsoft.Office.Tools.Excel.Chart.Elevation%2A> property.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#15](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#15)]
 [!code-vb[Trin_ExcelChart#15](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate(object Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Evaluate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="3a5cf-293">对象的名称（使用 Excel 的命名约定）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-293">The name of the object, using the naming convention of Excel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-294">将 Microsoft Office Excel 名称转换为对象或值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-294">Converts a Microsoft Office Excel name to an object or a value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public bool Export (string Filename, object FilterName, object Interactive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Export(string Filename, object FilterName, object Interactive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Export(System.String,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FilterName" Type="System.Object" />
        <Parameter Name="Interactive" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="3a5cf-295">导出文件的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-295">The name of the exported file.</span>
          </span>
        </param>
        <param name="FilterName">
          <span data-ttu-id="3a5cf-296">出现在 HKEY_LOCAL_MACHINE\Software\Microsoft\Shared Tools\Graphics 筛选器根据注册表中时与语言无关的图形过滤器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-296">The language-independent name of the graphic filter as it appears in the registry under HKEY_LOCAL_MACHINE\Software\Microsoft\Shared Tools\Graphics Filters.</span>
          </span>
        </param>
        <param name="Interactive">
          <span data-ttu-id="3a5cf-297">为 <see langword="true" /> 时，显示包含筛选器特定选项的对话框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-297">
              <see langword="true" /> to display the dialog box that contains the filter-specific options.</span>
          </span>
          <span data-ttu-id="3a5cf-298">如果此参数为 <see langword="false" />，则 Microsoft Office Excel 使用筛选器的默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-298">If this argument is <see langword="false" />, Microsoft Office Excel uses the default values for the filter.</span>
          </span>
          <span data-ttu-id="3a5cf-299">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-299">The default value is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-300">以图形格式导出图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-300">Exports the chart in a graphic format.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-301">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-301">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-302">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-302">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-303">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.Export%2A>方法将图表作为 C:\ 目录的根目录下名为 Chart1.gif 图形文件导出。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-303">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.Export%2A> method to export the chart as a graphic file named Chart1.gif at the root of the C:\ directory.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#114](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#114)]
 [!code-vb[Trin_ExcelChart#114](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#114)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat(valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="3a5cf-304">
            <see langword="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" /> 值之一，指定是以 PDF 还是 XPS 格式保存图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-304">One of the <see langword="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" /> values that specifies whether to save the chart in PDF or XPS format.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="3a5cf-305">新 PDF 或 XPS 文件的完整路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-305">The full path of the new PDF or XPS file.</span>
          </span>
          <span data-ttu-id="3a5cf-306">如果省略此参数，Excel 会将文件保存在当前文件夹中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-306">If you omit this parameter, Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="3a5cf-307">其中一个 <see langword="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> 值，该值指定导出文件的质量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-307">One of the <see langword="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> values that specifies the quality of the exported file.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="3a5cf-308">如果要在导出的文件中包含文档属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-308">
              <see langword="true" /> to include document properties in the exported file; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="3a5cf-309">若要在导出时忽略任何打印区域设置，请使用 <see langword="true" />；否则使用 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-309">
              <see langword="true" /> to ignore any print areas set when exporting; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="3a5cf-310">要从其处开始导出的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-310">The number of the page at which to start exporting.</span>
          </span>
          <span data-ttu-id="3a5cf-311">如果省略此参数，则从第一页开始导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-311">If this parameter is omitted, exporting starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="3a5cf-312">要导出的最后一页的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-312">The number of the last page to export.</span>
          </span>
          <span data-ttu-id="3a5cf-313">如果省略此参数，则导出完最后一页后停止导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-313">If this parameter is omitted, exporting ends with the last page.</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="3a5cf-314">如果要在导出图表后打开新文件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-314">
              <see langword="true" /> to open the new file after exporting the chart; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="3a5cf-315">一个指针，指向使图表能够以其他固定格式保存的 <see langword="IMsoDocExporter" /> 接口的实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-315">A pointer to an implementation of the <see langword="IMsoDocExporter" /> interface that enables the chart to be saved in a different fixed format.</span>
          </span>
          <span data-ttu-id="3a5cf-316">有关详细信息，请参阅“扩展 Office (2007) 固定格式导出功能”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-316">For more information, see Extending the Office (2007) Fixed-Format Export Feature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-317">以 PDF 或 XPS 格式保存图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-317">Saves the chart in either PDF or XPS format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-318">你可以将保存为 PDF 或 XPS 文件从 Microsoft Office Excel 仅后提供此功能的外接程序安装。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-318">You can save as a PDF or XPS file from Microsoft Office Excel only after you install an add-in that provides this feature.</span></span> <span data-ttu-id="3a5cf-319">有关详细信息，搜索"启用支持对其他文件格式，例如 PDF 和 XPS"Office online。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-319">For more information, search for "Enable support for other file formats, such as PDF and XPS" on Office Online.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-320">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-320">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-321">有关可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-321">For information about optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-322">下面的代码示例将保存一页的图表`Chart_1`工作表的`Sheet1`以 PDF 格式保存到指定的文件路径和文件的名称，使用标准质量分辨率。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-322">The following code example saves one page of the chart `Chart_1` of worksheet `Sheet1` in PDF format to the specified file path and file name using the standard quality resolution.</span></span> <span data-ttu-id="3a5cf-323">生成的 PDF 文件包括工作簿属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-323">The generated PDF file includes the workbook properties.</span></span> <span data-ttu-id="3a5cf-324">若要运行此代码示例，你的工作簿必须包含名为的表`Sheet1`名为图表`Chart_1`。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-324">To run this code example, your workbook must include a sheet named `Sheet1` with a chart named `Chart_1`.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkbook_Additional#11](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#11)]
 [!code-vb[Trin_ExcelWorkbook_Additional#11](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Floor Floor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Floor Floor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Floor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Floor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-325">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> 对象，该对象表示三维图表的基底。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-325">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-326">一个 <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> 对象，表示三维图表的基底。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-326">A <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D chart.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-327">下面的代码示例创建一个三维<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.Floor%2A>属性来更改图表基底的颜色为绿色。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-327">The following code example creates a 3-D <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.Floor%2A> property to change the color of the chart floor to green.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#15](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#15)]
 [!code-vb[Trin_ExcelChart#15](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GapDepth">
      <MemberSignature Language="C#" Value="public int GapDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GapDepth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.GapDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-328">获取或设置三维图表中数据系列之间的距离（以标记宽度的百分比形式表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-328">Gets or sets the distance between the data series in a 3-D chart, as a percentage of the marker width.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-329">三维图表中数据系列之间的距离（以标记宽度的百分比形式表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-329">The distance between the data series in a 3-D chart, as a percentage of the marker width.</span>
          </span>
          <span data-ttu-id="3a5cf-330">此属性的值必须介于 0 到 500 之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-330">The value of this property must be between 0 and 500.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-331">下面的代码示例创建一个三维<xref:Microsoft.Office.Tools.Excel.Chart>然后将更改为使用标记宽度的 300%的数据序列之间的距离<xref:Microsoft.Office.Tools.Excel.Chart.GapDepth%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-331">The following code example creates a 3-D <xref:Microsoft.Office.Tools.Excel.Chart> and then changes the distance between the data series to 300 percent of the marker width by using the <xref:Microsoft.Office.Tools.Excel.Chart.GapDepth%2A> property.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#16](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#16)]
 [!code-vb[Trin_ExcelChart#16](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChartElement">
      <MemberSignature Language="C#" Value="public void GetChartElement (int x, int y, ref int ElementID, ref int Arg1, ref int Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetChartElement(int32 x, int32 y, int32 ElementID, int32 Arg1, int32 Arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.GetChartElement(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ElementID" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="Arg1" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="Arg2" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="3a5cf-332">图表元素的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-332">The X coordinate of the chart element.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="3a5cf-333">图表元素的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-333">The Y coordinate of the chart element.</span>
          </span>
        </param>
        <param name="ElementID">
          <span data-ttu-id="3a5cf-334">该方法返回时，此参数包含指定坐标上的图表元素的 <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-334">When the method returns, this argument contains the <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> value of the chart element at the specified coordinates.</span>
          </span>
          <span data-ttu-id="3a5cf-335">有关更多信息，请参见“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-335">For more information, see the "Remarks" section.</span>
          </span>
        </param>
        <param name="Arg1">
          <span data-ttu-id="3a5cf-336">该方法返回时，此参数包含与图表元素有关的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-336">When the method returns, this argument contains information related to the chart element.</span>
          </span>
          <span data-ttu-id="3a5cf-337">有关更多信息，请参见“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-337">For more information, see the "Remarks" section.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="3a5cf-338">该方法返回时，此参数包含与图表元素有关的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-338">When the method returns, this argument contains information related to the chart element.</span>
          </span>
          <span data-ttu-id="3a5cf-339">有关更多信息，请参见“备注”部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-339">For more information, see the "Remarks" section.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-340">获取有关指定 X 和 Y 坐标上的图表元素的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-340">Gets information about the chart element at specified X and Y coordinates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-341">中，您指定仅的前两个自变量的值，此方法是异常。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-341">This method is unusual in that you specify values for only the first two arguments.</span></span> <span data-ttu-id="3a5cf-342">Microsoft Office Excel 填写其他参数，并在方法返回时，你的代码应检查这些值。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-342">Microsoft Office Excel fills in the other arguments, and your code should examine those values when the method returns.</span></span>  
  
 <span data-ttu-id="3a5cf-343">值`ElementID`返回此方法确定后是否`Arg1`和`Arg2`包含任何信息，如下表中所示。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-343">The value of `ElementID` after the method returns determines whether `Arg1` and `Arg2` contain any information, as shown in the following table.</span></span>  
  
|<span data-ttu-id="3a5cf-344">ElementID</span><span class="sxs-lookup"><span data-stu-id="3a5cf-344">ElementID</span></span>|<span data-ttu-id="3a5cf-345">arg1</span><span class="sxs-lookup"><span data-stu-id="3a5cf-345">Arg1</span></span>|<span data-ttu-id="3a5cf-346">arg2</span><span class="sxs-lookup"><span data-stu-id="3a5cf-346">Arg2</span></span>|  
|---------------|----------|----------|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlAxis>|<span data-ttu-id="3a5cf-347">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-347">AxisIndex</span></span>|<span data-ttu-id="3a5cf-348">AxisType</span><span class="sxs-lookup"><span data-stu-id="3a5cf-348">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlAxisTitle>|<span data-ttu-id="3a5cf-349">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-349">AxisIndex</span></span>|<span data-ttu-id="3a5cf-350">AxisType</span><span class="sxs-lookup"><span data-stu-id="3a5cf-350">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDisplayUnitLabel>|<span data-ttu-id="3a5cf-351">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-351">AxisIndex</span></span>|<span data-ttu-id="3a5cf-352">AxisType</span><span class="sxs-lookup"><span data-stu-id="3a5cf-352">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlMajorGridlines>|<span data-ttu-id="3a5cf-353">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-353">AxisIndex</span></span>|<span data-ttu-id="3a5cf-354">AxisType</span><span class="sxs-lookup"><span data-stu-id="3a5cf-354">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlMinorGridlines>|<span data-ttu-id="3a5cf-355">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-355">AxisIndex</span></span>|<span data-ttu-id="3a5cf-356">AxisType</span><span class="sxs-lookup"><span data-stu-id="3a5cf-356">AxisType</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlPivotChartDropZone>|<span data-ttu-id="3a5cf-357">DropZoneType</span><span class="sxs-lookup"><span data-stu-id="3a5cf-357">DropZoneType</span></span>|<span data-ttu-id="3a5cf-358">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-358">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlPivotChartFieldButton>|<span data-ttu-id="3a5cf-359">DropZoneType</span><span class="sxs-lookup"><span data-stu-id="3a5cf-359">DropZoneType</span></span>|<span data-ttu-id="3a5cf-360">PivotFieldIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-360">PivotFieldIndex</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDownBars>|<span data-ttu-id="3a5cf-361">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-361">GroupIndex</span></span>|<span data-ttu-id="3a5cf-362">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-362">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDropLines>|<span data-ttu-id="3a5cf-363">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-363">GroupIndex</span></span>|<span data-ttu-id="3a5cf-364">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-364">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlHiLoLines>|<span data-ttu-id="3a5cf-365">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-365">GroupIndex</span></span>|<span data-ttu-id="3a5cf-366">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-366">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlRadarAxisLabels>|<span data-ttu-id="3a5cf-367">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-367">GroupIndex</span></span>|<span data-ttu-id="3a5cf-368">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-368">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlSeriesLines>|<span data-ttu-id="3a5cf-369">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-369">GroupIndex</span></span>|<span data-ttu-id="3a5cf-370">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-370">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlUpBars>|<span data-ttu-id="3a5cf-371">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-371">GroupIndex</span></span>|<span data-ttu-id="3a5cf-372">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-372">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlChartArea>|<span data-ttu-id="3a5cf-373">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-373">None</span></span>|<span data-ttu-id="3a5cf-374">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-374">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlChartTitle>|<span data-ttu-id="3a5cf-375">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-375">None</span></span>|<span data-ttu-id="3a5cf-376">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-376">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlCorners>|<span data-ttu-id="3a5cf-377">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-377">None</span></span>|<span data-ttu-id="3a5cf-378">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-378">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDataTable>|<span data-ttu-id="3a5cf-379">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-379">None</span></span>|<span data-ttu-id="3a5cf-380">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-380">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlFloor>|<span data-ttu-id="3a5cf-381">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-381">None</span></span>|<span data-ttu-id="3a5cf-382">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-382">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLeaderLines>|<span data-ttu-id="3a5cf-383">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-383">None</span></span>|<span data-ttu-id="3a5cf-384">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-384">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLegend>|<span data-ttu-id="3a5cf-385">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-385">None</span></span>|<span data-ttu-id="3a5cf-386">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-386">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlNothing>|<span data-ttu-id="3a5cf-387">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-387">None</span></span>|<span data-ttu-id="3a5cf-388">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-388">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlPlotArea>|<span data-ttu-id="3a5cf-389">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-389">None</span></span>|<span data-ttu-id="3a5cf-390">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-390">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlWalls>|<span data-ttu-id="3a5cf-391">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-391">None</span></span>|<span data-ttu-id="3a5cf-392">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-392">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlDataLabel>|<span data-ttu-id="3a5cf-393">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-393">SeriesIndex</span></span>|<span data-ttu-id="3a5cf-394">PointIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-394">PointIndex</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlErrorBars>|<span data-ttu-id="3a5cf-395">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-395">SeriesIndex</span></span>|<span data-ttu-id="3a5cf-396">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-396">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLegendEntry>|<span data-ttu-id="3a5cf-397">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-397">SeriesIndex</span></span>|<span data-ttu-id="3a5cf-398">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-398">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlLegendKey>|<span data-ttu-id="3a5cf-399">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-399">SeriesIndex</span></span>|<span data-ttu-id="3a5cf-400">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-400">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlSeries>|<span data-ttu-id="3a5cf-401">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-401">SeriesIndex</span></span>|<span data-ttu-id="3a5cf-402">PointIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-402">PointIndex</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlShape>|<span data-ttu-id="3a5cf-403">ShapeIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-403">ShapeIndex</span></span>|<span data-ttu-id="3a5cf-404">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-404">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlTrendline>|<span data-ttu-id="3a5cf-405">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-405">SeriesIndex</span></span>|<span data-ttu-id="3a5cf-406">TrendLineIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-406">TrendLineIndex</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlXErrorBars>|<span data-ttu-id="3a5cf-407">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-407">SeriesIndex</span></span>|<span data-ttu-id="3a5cf-408">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-408">None</span></span>|  
|<xref:Microsoft.Office.Interop.Excel.XlChartItem.xlYErrorBars>|<span data-ttu-id="3a5cf-409">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-409">SeriesIndex</span></span>|<span data-ttu-id="3a5cf-410">无</span><span class="sxs-lookup"><span data-stu-id="3a5cf-410">None</span></span>|  
  
 <span data-ttu-id="3a5cf-411">下表介绍的含义`Arg1`和`Arg2`该方法返回后。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-411">The following table describes the meaning of `Arg1` and `Arg2` after the method returns.</span></span>  
  
|<span data-ttu-id="3a5cf-412">参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-412">Argument</span></span>|<span data-ttu-id="3a5cf-413">描述</span><span class="sxs-lookup"><span data-stu-id="3a5cf-413">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="3a5cf-414">AxisIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-414">AxisIndex</span></span>|<span data-ttu-id="3a5cf-415">指定是否主或辅助轴。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-415">Specifies whether the axis is primary or secondary.</span></span> <span data-ttu-id="3a5cf-416">可以是下列 <xref:Microsoft.Office.Interop.Excel.XlAxisGroup> 常数之一：<xref:Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary> 或 <xref:Microsoft.Office.Interop.Excel.XlAxisGroup.xlSecondary>。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-416">Can be one of the following <xref:Microsoft.Office.Interop.Excel.XlAxisGroup> constants: <xref:Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary> or <xref:Microsoft.Office.Interop.Excel.XlAxisGroup.xlSecondary>.</span></span>|  
|<span data-ttu-id="3a5cf-417">AxisType</span><span class="sxs-lookup"><span data-stu-id="3a5cf-417">AxisType</span></span>|<span data-ttu-id="3a5cf-418">指定的轴类型。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-418">Specifies the axis type.</span></span> <span data-ttu-id="3a5cf-419">可以为以下 <xref:Microsoft.Office.Interop.Excel.XlAxisType> 常数之一：<xref:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory>、<xref:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis> 或 <xref:Microsoft.Office.Interop.Excel.XlAxisType.xlValue>。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-419">Can be one of the following <xref:Microsoft.Office.Interop.Excel.XlAxisType> constants: <xref:Microsoft.Office.Interop.Excel.XlAxisType.xlCategory>, <xref:Microsoft.Office.Interop.Excel.XlAxisType.xlSeriesAxis>, or <xref:Microsoft.Office.Interop.Excel.XlAxisType.xlValue>.</span></span>|  
|<span data-ttu-id="3a5cf-420">DropZoneType</span><span class="sxs-lookup"><span data-stu-id="3a5cf-420">DropZoneType</span></span>|<span data-ttu-id="3a5cf-421">指定的拖放区域类型： 列、 数据、 页上，或行字段。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-421">Specifies the drop zone type: column, data, page, or row field.</span></span> <span data-ttu-id="3a5cf-422">可以是以下之一<xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation>常量： <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField>， <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField>， <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField>，或<xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField>。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-422">Can be one of the following <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation> constants: <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField>, <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField>, <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField>, or <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField>.</span></span> <span data-ttu-id="3a5cf-423">列和行字段常量分别指定序列和类别字段。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-423">The column and row field constants specify the series and category fields, respectively.</span></span>|  
|<span data-ttu-id="3a5cf-424">GroupIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-424">GroupIndex</span></span>|<span data-ttu-id="3a5cf-425">指定的偏移量<xref:Microsoft.Office.Interop.Excel.ChartGroups>特定图表组的集合。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-425">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.ChartGroups> collection for a specific chart group.</span></span>|  
|<span data-ttu-id="3a5cf-426">PivotFieldIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-426">PivotFieldIndex</span></span>|<span data-ttu-id="3a5cf-427">指定的偏移量<xref:Microsoft.Office.Interop.Excel.PivotFields>的特定列 （系列）、 数据、 页上，或行 （类别） 字段的集合。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-427">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.PivotFields> collection for a specific column (series), data, page, or row (category) field.</span></span> <span data-ttu-id="3a5cf-428">拖放区域类型是否为-1 <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField>。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-428">-1 if the drop zone type is <xref:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlDataField>.</span></span>|  
|<span data-ttu-id="3a5cf-429">PointIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-429">PointIndex</span></span>|<span data-ttu-id="3a5cf-430">指定的偏移量<xref:Microsoft.Office.Interop.Excel.Points>一系列中的特定点的集合。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-430">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.Points> collection for a specific point within a series.</span></span> <span data-ttu-id="3a5cf-431">值为 – 1 指示已选择所有数据点。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-431">A value of – 1 indicates that all data points are selected.</span></span>|  
|<span data-ttu-id="3a5cf-432">SeriesIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-432">SeriesIndex</span></span>|<span data-ttu-id="3a5cf-433">指定的偏移量<xref:Microsoft.Office.Interop.Excel.Series>一系列特定的集合。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-433">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.Series> collection for a specific series.</span></span>|  
|<span data-ttu-id="3a5cf-434">ShapeIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-434">ShapeIndex</span></span>|<span data-ttu-id="3a5cf-435">指定的偏移量<xref:Microsoft.Office.Interop.Excel.Shapes>特定形状的集合。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-435">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.Shapes> collection for a specific shape.</span></span>|  
|<span data-ttu-id="3a5cf-436">TrendlineIndex</span><span class="sxs-lookup"><span data-stu-id="3a5cf-436">TrendlineIndex</span></span>|<span data-ttu-id="3a5cf-437">指定的偏移量<xref:Microsoft.Office.Interop.Excel.Trendlines>一系列中的特定趋势线的集合。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-437">Specifies the offset within the <xref:Microsoft.Office.Interop.Excel.Trendlines> collection for a specific trendline within a series.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-438">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart?displayProperty=fullName>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.GetChartElement%2A>方法在用户单击图表时显示的图表元素。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-438">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart?displayProperty=fullName> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.GetChartElement%2A> method to display the chart element when a user clicks the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#115](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#115)]
 [!code-vb[Trin_ExcelChart#115](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupBoxes(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.GroupBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupObjects(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.GroupObjects(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAxis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Excel.Chart_HasAxisType HasAxis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Tools.Excel.Chart_HasAxisType HasAxis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.HasAxis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.Chart_HasAxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-439">获取或设置一个值，该值指示在 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件上是否存在特定的轴。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-439">Gets or sets a value indicating whether a specific axis exists on the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-440">如果 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 上存在指定的轴，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-440">
              <see langword="true" /> if the specified axis exists on the <see cref="T:Microsoft.Office.Tools.Excel.Chart" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-441">使用<xref:Microsoft.Office.Tools.Excel.Chart.HasAxis%2A>属性来隐藏或显示特定轴上<xref:Microsoft.Office.Tools.Excel.Chart>。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-441">Use the <xref:Microsoft.Office.Tools.Excel.Chart.HasAxis%2A> property to hide or show a particular axis on a <xref:Microsoft.Office.Tools.Excel.Chart>.</span></span> <span data-ttu-id="3a5cf-442"><xref:Microsoft.Office.Tools.Excel.Chart.HasAxis%2A>属性应与以下参数一起使用。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-442">The <xref:Microsoft.Office.Tools.Excel.Chart.HasAxis%2A> property is intended to be used with the following parameters.</span></span>  
  
|<span data-ttu-id="3a5cf-443">参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-443">Parameter</span></span>|<span data-ttu-id="3a5cf-444">描述</span><span class="sxs-lookup"><span data-stu-id="3a5cf-444">Description</span></span>|  
|---------------|-----------------|  
|`Index1`|<span data-ttu-id="3a5cf-445">之一<xref:Microsoft.Office.Interop.Excel.XlAxisType>指定轴类型的值。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-445">One of the <xref:Microsoft.Office.Interop.Excel.XlAxisType> values that specifies the axis type.</span></span> <span data-ttu-id="3a5cf-446">序列轴仅应用于三维图表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-446">Series axes apply only to 3-D charts.</span></span>|  
|`Index2`|<span data-ttu-id="3a5cf-447">之一<xref:Microsoft.Office.Interop.Excel.XlAxisGroup>指定轴组的值。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-447">One of the <xref:Microsoft.Office.Interop.Excel.XlAxisGroup> values that specifies the axis group.</span></span> <span data-ttu-id="3a5cf-448">三维图表有只有一组轴。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-448">3-D charts have only one set of axes.</span></span>|  
  
 <span data-ttu-id="3a5cf-449">如果你尝试使用<xref:Microsoft.Office.Tools.Excel.Chart.HasAxis%2A>无需指定参数，<xref:Microsoft.Office.Tools.Excel.Chart.HasAxis%2A>将获取<xref:Microsoft.Office.Tools.Excel.Chart._HasAxisType>对象属于的 Office 开发工具在 Visual Studio 基础结构和不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-449">If you attempt to use <xref:Microsoft.Office.Tools.Excel.Chart.HasAxis%2A> without specifying parameters, <xref:Microsoft.Office.Tools.Excel.Chart.HasAxis%2A> will get a <xref:Microsoft.Office.Tools.Excel.Chart._HasAxisType> object that is part of the Office development tools in Visual Studio infrastructure and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="3a5cf-450">Microsoft Office Excel 可以创建或删除轴，如果更改图表类型或<xref:Microsoft.Office.Interop.Excel.Axis.AxisGroup%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-450">Microsoft Office Excel may create or delete axes if you change the chart type or the <xref:Microsoft.Office.Interop.Excel.Axis.AxisGroup%2A> property.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-451">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-451">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-452">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-452">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-453">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.HasAxis%2A>属性来隐藏主类别轴的图表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-453">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.HasAxis%2A> property to hide the primary category axis of the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#41](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#41)]
 [!code-vb[Trin_ExcelChart#41](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDataTable">
      <MemberSignature Language="C#" Value="public bool HasDataTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.HasDataTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-454">获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件是否包含数据表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-454">Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control has a data table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-455">如果 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件包含数据表，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-455">
              <see langword="true" /> if the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control has a data table; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-456">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.HasDataTable%2A>和<xref:Microsoft.Office.Tools.Excel.Chart.DataTable%2A>属性要在图表中以边框大纲显示数据的表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-456">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.HasDataTable%2A> and <xref:Microsoft.Office.Tools.Excel.Chart.DataTable%2A> properties to display a data table in the chart with a border outline.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#12](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#12)]
 [!code-vb[Trin_ExcelChart#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLegend">
      <MemberSignature Language="C#" Value="public bool HasLegend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLegend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.HasLegend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-457">获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件是否包含图例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-457">Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control has a legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-458">如果 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件包含图例，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-458">
              <see langword="true" /> if the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control has a legend; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPivotFields">
      <MemberSignature Language="C#" Value="public bool HasPivotFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPivotFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.HasPivotFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTitle">
      <MemberSignature Language="C#" Value="public bool HasTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.HasTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-459">获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件是否具有标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-459">Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control has a title.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-460">如果 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件具有可见标题，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-460">
              <see langword="true" /> if the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control has a visible title; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-461">由表示轴标题<xref:Microsoft.Office.Interop.Excel.AxisTitle>对象。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-461">An axis title is represented by an <xref:Microsoft.Office.Interop.Excel.AxisTitle> object.</span></span>  
  
 <span data-ttu-id="3a5cf-462">图表标题由<xref:Microsoft.Office.Interop.Excel.ChartTitle>对象。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-462">A chart title is represented by a <xref:Microsoft.Office.Interop.Excel.ChartTitle> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeightPercent">
      <MemberSignature Language="C#" Value="public int HeightPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HeightPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.HeightPercent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-463">获取或设置三维图表的高度（以 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件宽度的百分比形式表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-463">Gets or sets the height of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control width.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-464">三维图表的高度，以 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件宽度的百分比形式表示（介于 5% 到 500% 之间）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-464">The height of a 3-D chart as a percentage of the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control width (between 5 and 500 percent).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-465">下面的代码示例创建一个三维<xref:Microsoft.Office.Tools.Excel.Chart>然后通过将更改的图表宽度 250%图表高度<xref:Microsoft.Office.Tools.Excel.Chart.HeightPercent%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-465">The following code example creates a 3-D <xref:Microsoft.Office.Tools.Excel.Chart> and then changes the height of the chart to 250 percent of the chart width by using the <xref:Microsoft.Office.Tools.Excel.Chart.HeightPercent%2A> property.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#17](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#17)]
 [!code-vb[Trin_ExcelChart#17](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Hyperlinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-466">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> 集合，该集合表示范围或工作表的超链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-466">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-467">
            <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> 集合，表示范围或工作表的超链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-467">A <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart InnerObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart InnerObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.InnerObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-468">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Chart" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 的基础本机对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-468">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.Chart" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-469">一个 <see cref="T:Microsoft.Office.Interop.Excel.Chart" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 的基础本机对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-469">A <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.Chart" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Labels(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Labels(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Legend Legend { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Legend Legend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Legend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Legend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-470">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> 对象，该对象表示图表的图例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-470">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> object that represents the legend for the chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-471">
            <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> 对象，表示图表的图例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-471">A <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> object that represents the legend for the chart.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-472">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.Legend%2A>属性修改图例边框的颜色。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-472">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.Legend%2A> property to modify the color of the legend border.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#21](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#21)]
 [!code-vb[Trin_ExcelChart#21](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Line3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Line3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineGroups">
      <MemberSignature Language="C#" Value="public object LineGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LineGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.LineGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lines(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Lines(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListBoxes(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.ListBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Location (Microsoft.Office.Interop.Excel.XlChartLocation Where, object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Chart Location(valuetype Microsoft.Office.Interop.Excel.XlChartLocation Where, object Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Location(Microsoft.Office.Interop.Excel.XlChartLocation,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Where" Type="Microsoft.Office.Interop.Excel.XlChartLocation" />
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Where">
          <span data-ttu-id="3a5cf-473">
            <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-473">
              <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" />.</span>
          </span>
          <span data-ttu-id="3a5cf-474">要将图表移动到的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-474">Where to move the chart.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="3a5cf-475">图表所嵌入的工作表的名称（<c>Where</c> 为 <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsObject" /> 时），或新工作表的名称（<c>Where</c> 为 <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsNewSheet" /> 时）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-475">The name of the sheet where the chart is embedded if <c>Where</c> is <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsObject" /> or the name of the new sheet if <c>Where</c> is <see cref="F:Microsoft.Office.Interop.Excel.XlChartLocation.xlLocationAsNewSheet" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-476">将 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件移动到新位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-476">Moves the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control to a new location.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-477">如果你想要将图表移到另一个位置上一个表,，使用<xref:Microsoft.Office.Interop.Excel.ChartArea.Top%2A>属性和<xref:Microsoft.Office.Interop.Excel.ChartArea.Left%2A>属性<xref:Microsoft.Office.Interop.Excel.ChartArea>。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-477">If you want to move a chart to another position on a sheet, use the <xref:Microsoft.Office.Interop.Excel.ChartArea.Top%2A> property and <xref:Microsoft.Office.Interop.Excel.ChartArea.Left%2A> property of the <xref:Microsoft.Office.Interop.Excel.ChartArea>.</span></span> <span data-ttu-id="3a5cf-478">你可以获取<xref:Microsoft.Office.Interop.Excel.ChartArea>对象<xref:Microsoft.Office.Tools.Excel.Chart>使用<xref:Microsoft.Office.Tools.Excel.Chart.ChartArea%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-478">You can get the <xref:Microsoft.Office.Interop.Excel.ChartArea> object of the <xref:Microsoft.Office.Tools.Excel.Chart> by using the <xref:Microsoft.Office.Tools.Excel.Chart.ChartArea%2A> property.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-479">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-479">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-480">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-480">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-481">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.Location%2A>方法将图表移到名为"Sales"的新工作表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-481">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.Location%2A> method to move the chart to a new sheet named "Sales".</span></span>  
  
 [!code-csharp[Trin_ExcelChart#117](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#117)]
 [!code-vb[Trin_ExcelChart#117](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#117)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.MailEnvelope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-482">表示文档的电子邮件标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-482">Represents an e-mail header for a document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-483">
            <see cref="T:Microsoft.Office.Core.MsoEnvelope" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-483">One of the <see cref="T:Microsoft.Office.Core.MsoEnvelope" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-484">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.MailEnvelope%2A>属性设置的电子邮件标头的简介。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-484">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.MailEnvelope%2A> property to set the introduction of the e-mail header.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#23](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#23)]
 [!code-vb[Trin_ExcelChart#23](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.Chart.MouseDown" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_MouseDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-485">当指针位于 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件上，按下鼠标按钮时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-485">Occurs when a mouse button is pressed when the pointer is over a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-486">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>的处理程序与<xref:Microsoft.Office.Tools.Excel.Chart.MouseDown>D14 单元格中显示鼠标指针的坐标，当图表上按下鼠标按钮的事件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-486">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with a handler for the <xref:Microsoft.Office.Tools.Excel.Chart.MouseDown> event that displays the coordinates of the mouse pointer in cell D14 when the mouse button is pressed while the pointer is over the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#207](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#207)]
 [!code-vb[Trin_ExcelChart#207](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#207)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.Chart.MouseMove" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_MouseMoveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-487">当鼠标指针的位置在 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件上更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-487">Occurs when the position of the mouse pointer changes over the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-488">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>的处理程序与<xref:Microsoft.Office.Tools.Excel.Chart.MouseMove>D14 单元格中显示一条消息，当在移动鼠标指针位于图表上的事件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-488">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with a handler for the <xref:Microsoft.Office.Tools.Excel.Chart.MouseMove> event that displays a message in cell D14 when the mouse moves while the pointer is over the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#208](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#208)]
 [!code-vb[Trin_ExcelChart#208](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#208)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.Chart.MouseUp" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_MouseUpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-489">当指针位于 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件上，释放鼠标按钮时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-489">Occurs when a mouse button is released when the pointer is over the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-490">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>的处理程序与<xref:Microsoft.Office.Tools.Excel.Chart.MouseUp>D14 单元格中显示一条消息，当鼠标指针位于图表上并释放鼠标按钮的事件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-490">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with a handler for the <xref:Microsoft.Office.Tools.Excel.Chart.MouseUp> event that displays a message in cell D14 when the mouse button is released while the pointer is over the chart.</span></span> <span data-ttu-id="3a5cf-491">此示例还使用`x`和`y`显示鼠标指针的坐标的事件处理程序参数。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-491">The example also uses the `x` and `y` parameters of the event handler to display the coordinates of the mouse pointer.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#209](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#209)]
 [!code-vb[Trin_ExcelChart#209](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#209)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move(object Before, object After) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Move(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">To be added.</param>
        <param name="After">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-492">若要将图表移到另一个工作表，使用<xref:Microsoft.Office.Tools.Excel.Chart.Location%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-492">To move the chart to another worksheet, use the <xref:Microsoft.Office.Tools.Excel.Chart.Location%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-493">获取 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-493">Gets the name of the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-494">
            <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-494">The name of the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-495">当你创建<xref:Microsoft.Office.Tools.Excel.Chart>控制，Excel 集<xref:Microsoft.Office.Tools.Excel.Chart.Name%2A>到字符串的属性"*sheetname*图表* n *"，其中* n *是工作表上嵌入图表的数。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-495">When you create a <xref:Microsoft.Office.Tools.Excel.Chart> control, Excel sets the <xref:Microsoft.Office.Tools.Excel.Chart.Name%2A> property to the string "*sheetname* Chart *n*", where *n* is the number of embedded charts on the worksheet.</span></span> <span data-ttu-id="3a5cf-496">例如，如果你添加<xref:Microsoft.Office.Tools.Excel.Chart>到`Sheet1`它并且在表上的第一个嵌入的图表<xref:Microsoft.Office.Tools.Excel.Chart.Name%2A>属性将具有值`Sheet1 Chart 1`。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-496">For example, if you add a <xref:Microsoft.Office.Tools.Excel.Chart> to `Sheet1` and it is the first embedded chart on the worksheet, the <xref:Microsoft.Office.Tools.Excel.Chart.Name%2A> property will have the value `Sheet1 Chart 1`.</span></span>  
  
 <span data-ttu-id="3a5cf-497">尽管<xref:Microsoft.Office.Tools.Excel.Chart.Name%2A>属性是只读的你可以通过修改名称的一部分<xref:Microsoft.Office.Interop.Excel.ChartObject.Name%2A>的父属性<xref:Microsoft.Office.Interop.Excel.ChartObject?displayProperty=fullName>。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-497">Although the <xref:Microsoft.Office.Tools.Excel.Chart.Name%2A> property is read-only, you can modify a portion of the name by using the <xref:Microsoft.Office.Interop.Excel.ChartObject.Name%2A> property of the parent <xref:Microsoft.Office.Interop.Excel.ChartObject?displayProperty=fullName>.</span></span> <span data-ttu-id="3a5cf-498">指定替换的新名称"图表* n *"返回的字符串中子字符串<xref:Microsoft.Office.Tools.Excel.Chart.Name%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-498">The new name you specify replaces the "Chart *n*" substring in the string returned by the <xref:Microsoft.Office.Tools.Excel.Chart.Name%2A> property.</span></span> <span data-ttu-id="3a5cf-499">例如，下面的代码更改<xref:Microsoft.Office.Tools.Excel.Chart.Name%2A>属性值<xref:Microsoft.Office.Tools.Excel.Chart>控件从`Sheet1 Chart 1`到`Sheet1 SalesChart`。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-499">For example, the following code changes the <xref:Microsoft.Office.Tools.Excel.Chart.Name%2A> property value of a <xref:Microsoft.Office.Tools.Excel.Chart> control from `Sheet1 Chart 1` to `Sheet1 SalesChart`.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#42](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#42)]
 [!code-vb[Trin_ExcelChart#42](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.OnDoubleClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.OnSheetActivate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.OnSheetDeactivate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OptionButtons(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.OptionButtons(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ovals(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Ovals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.PageSetup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-500">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" />，包含指定对象的所有页面设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-500">Gets a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> that contains all the page setup settings for the specified object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-501">一个 <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" />，包含指定对象的所有页面设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-501">A <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> that contains all the page setup settings for the specified object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-502">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.PageSetup%2A>属性修改方向。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-502">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.PageSetup%2A> property to modify the orientation.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#26](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#26)]
 [!code-vb[Trin_ExcelChart#26](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-503">获取 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件的父对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-503">Gets the parent object for the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-504">一个 <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件的父对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-504">A <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> that represents the parent object for the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-505">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.Parent%2A>选择父级的属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-505">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.Parent%2A> property to select the parent.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#27](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#27)]
 [!code-vb[Trin_ExcelChart#27](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste(object Type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Paste(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="3a5cf-506">如果图表位于剪贴板上，则指定要粘贴的图表信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-506">Specifies the chart information to paste if a chart is on the Clipboard.</span>
          </span>
          <span data-ttu-id="3a5cf-507">可以为以下 <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormats" />、<see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulas" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-507">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormats" />, <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteFormulas" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />.</span>
          </span>
          <span data-ttu-id="3a5cf-508">默认值为 <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-508">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll" />.</span>
          </span>
          <span data-ttu-id="3a5cf-509">如果剪贴板上有图表之外的数据，则不能使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-509">If there is data other than a chart on the Clipboard, this argument cannot be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-510">从剪贴板将图表数据粘贴到指定的 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-510">Pastes chart data from the Clipboard into the specified <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-511">此方法将更改当前所选内容。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-511">This method changes the current selection.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-512">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-512">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-513">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-513">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-514">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.Paste%2A>方法以将其他范围数据从剪贴板粘贴到图表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-514">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.Paste%2A> method to paste additional range data from the Clipboard into the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#118](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#118)]
 [!code-vb[Trin_ExcelChart#118](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#118)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Perspective">
      <MemberSignature Language="C#" Value="public int Perspective { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Perspective" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Perspective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-515">获取或设置三维图表视图的透视系数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-515">Gets or sets the perspective for the 3-D chart view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-516">三维图表视图的透视系数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-516">The perspective for the 3-D chart view.</span>
          </span>
          <span data-ttu-id="3a5cf-517">必须介于 0 到 100 之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-517">Must be between 0 and 100.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-518">如果忽略此属性<xref:Microsoft.Office.Tools.Excel.Chart.RightAngleAxes%2A>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-518">This property is ignored if the <xref:Microsoft.Office.Tools.Excel.Chart.RightAngleAxes%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-519">下面的代码示例创建一个三维<xref:Microsoft.Office.Tools.Excel.Chart>然后通过将更改为 50 角度<xref:Microsoft.Office.Tools.Excel.Chart.Perspective%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-519">The following code example creates a 3-D <xref:Microsoft.Office.Tools.Excel.Chart> and then changes the perspective to 50 by using the <xref:Microsoft.Office.Tools.Excel.Chart.Perspective%2A> property.</span></span> <span data-ttu-id="3a5cf-520">该示例设置<xref:Microsoft.Office.Tools.Excel.Chart.RightAngleAxes%2A>属性`false`之前设置<xref:Microsoft.Office.Tools.Excel.Chart.Perspective%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-520">The example sets the <xref:Microsoft.Office.Tools.Excel.Chart.RightAngleAxes%2A> property to `false` before setting the <xref:Microsoft.Office.Tools.Excel.Chart.Perspective%2A> property.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#28](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#28)]
 [!code-vb[Trin_ExcelChart#28](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pictures(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Pictures(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pie3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Pie3DGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PieGroups">
      <MemberSignature Language="C#" Value="public object PieGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PieGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.PieGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotLayout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotLayout PivotLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotLayout PivotLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.PivotLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-521">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> 对象，该对象表示数据透视图报表中字段的位置和数据透视图报表中轴的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-521">Gets a <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> object that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-522">一个 <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> 对象，表示数据透视图报表中字段的位置和数据透视图报表中轴的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-522">A <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> object that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-523">如果<xref:Microsoft.Office.Tools.Excel.Chart>你指定的控件不是数据透视图报表，此属性的值是`null`。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-523">If the <xref:Microsoft.Office.Tools.Excel.Chart> control you specify is not a PivotChart report, the value of this property is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-524">下面的代码示例现有数据透视图到名为"Canada。"的页设置的当前页</span><span class="sxs-lookup"><span data-stu-id="3a5cf-524">The following code example sets the current page for an existing PivotChart to the page named "Canada."</span></span> <span data-ttu-id="3a5cf-525">此示例假定当前工作表包含<xref:Microsoft.Office.Tools.Excel.Chart>名为`pivotChart1`，它是数据透视图报表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-525">This example assumes that the current worksheet contains a <xref:Microsoft.Office.Tools.Excel.Chart> named `pivotChart1` that is a PivotChart report.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#30](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#30)]
 [!code-vb[Trin_ExcelChart#30](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PlotArea PlotArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PlotArea PlotArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.PlotArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PlotArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-526">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> 对象，该对象表示图表的绘图区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-526">Gets a <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-527">一个 <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> 对象，表示图表的绘图区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-527">A <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a chart.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-528">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.PlotArea%2A>属性可以更改图表绘图区的边框的颜色。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-528">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.PlotArea%2A> property to change the color of the border around the plot area of the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#31](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#31)]
 [!code-vb[Trin_ExcelChart#31](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotBy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlRowCol PlotBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlRowCol PlotBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.PlotBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlRowCol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-529">获取或设置在图表上将列或行用作数据系列的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-529">Gets or sets the way columns or rows are used as data series on the chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-530">以下 <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> 值之一：<see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-530">One of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> values: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-531">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>按列，绘制数据，然后提示用户按与行绘制数据<xref:Microsoft.Office.Tools.Excel.Chart.PlotBy%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-531">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with data plotted by columns, and then prompts the user to plot data by rows with the <xref:Microsoft.Office.Tools.Excel.Chart.PlotBy%2A> property.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#32](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#32)]
 [!code-vb[Trin_ExcelChart#32](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotVisibleOnly">
      <MemberSignature Language="C#" Value="public bool PlotVisibleOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PlotVisibleOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.PlotVisibleOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-532">获取或设置一个值，该值指示是否只绘制可见单元格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-532">Gets or sets a value that indicates whether only visible cells are plotted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-533">如果只绘制可见单元格，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-533">
              <see langword="true" /> if only visible cells are plotted.</span>
          </span>
          <span data-ttu-id="3a5cf-534">如果可见单元格和隐藏单元格都要绘制，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-534">
              <see langword="false" /> if both visible and hidden cells are plotted.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.PrintedCommentPages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-535">获取要为当前图表打印的注释页的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-535">Gets the number of comment pages that will be printed for the current chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-536">要为当前图表打印的注释页的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-536">The number of comment pages that will be printed for the current chart.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-537">由于图表和图表工作表不支持注释，<xref:Microsoft.Office.Tools.Excel.Chart.PrintedCommentPages%2A>属性<xref:Microsoft.Office.Tools.Excel.Chart>对象将始终返回零。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-537">Because charts and chart sheets do not support comments, the <xref:Microsoft.Office.Tools.Excel.Chart.PrintedCommentPages%2A> property of the <xref:Microsoft.Office.Tools.Excel.Chart> object will always return zero.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a5cf-538">此属性将出现在 IntelliSense Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-538">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="3a5cf-539">但是，不能在 Excel 2007 项目中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-539">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="3a5cf-540">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-540">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut(object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx(object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="3a5cf-541">要从其处开始打印的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-541">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="3a5cf-542">如果省略此参数，则打印从第一页开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-542">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="3a5cf-543">要打印的最后一页的页码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-543">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="3a5cf-544">若忽略此参数，则打印至最后一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-544">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="3a5cf-545">要打印的份数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-545">The number of copies to print.</span>
          </span>
          <span data-ttu-id="3a5cf-546">如果忽略此参数，则打印一份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-546">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="3a5cf-547">若要在打印对象前让 Microsoft Office Excel 调用打印预览，请使用 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-547">
              <see langword="true" /> to have Microsoft Office Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="3a5cf-548">为 <see langword="false" />（或省略）时，立即打印对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-548">
              <see langword="false" /> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="3a5cf-549">设置活动打印机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-549">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="3a5cf-550">若要打印到文件，请使用 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-550">
              <see langword="true" /> to print to a file.</span>
          </span>
          <span data-ttu-id="3a5cf-551">若未指定 <c>PrToFileName</c>，则 Excel 会提示用户输入输出文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-551">If <c>PrToFileName</c> is not specified, Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="3a5cf-552">若逐份打印多个副本，请使用 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-552">
              <see langword="true" /> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="3a5cf-553">要打印到的文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-553">The name of the file to print to.</span>
          </span>
          <span data-ttu-id="3a5cf-554">只有在 <c>PrintToFile</c> 为 <see langword=" true" /> 时，才使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-554">This parameter is used only if <c>PrintToFile</c> is<see langword=" true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-555">打印图表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-555">Prints the chart.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-556">"页"中的说明`From`和`To`指打印页-不是所有页中的表或工作簿。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-556">"Pages" in the descriptions of `From` and `To` refers to printed pages— not overall pages in the sheet or workbook.</span></span>  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-557">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-557">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-558">有关可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-558">For information about optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-559">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.Chart.PrintOutEx%2A>方法要打印一份图表的前两页`Chart_1`到默认打印机。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-559">The following code example uses the <xref:Microsoft.Office.Tools.Excel.Chart.PrintOutEx%2A> method to print one copy of the first two pages of the chart `Chart_1` to the default printer.</span></span> <span data-ttu-id="3a5cf-560">若要运行此代码示例，你的工作簿必须包含名为工作表`Sheet1`名为图表`Chart_1`。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-560">To run this code example, your workbook must contain a worksheet named `Sheet1` with a chart named `Chart_1`.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkBook_Additional#15](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#15)]
 [!code-vb[Trin_ExcelWorkBook_Additional#15](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview(object EnableChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.PrintPreview(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="3a5cf-561">如果可以更改打印预览窗口，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-561">
              <see langword="true" /> if changes can be made to the print preview window; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-562">显示 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件的预览（显示打印时的外观）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-562">Shows a preview of the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control as it would look when printed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-563">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.PrintPreview%2A>方法来预览打印输出的图表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-563">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.PrintPreview%2A> method to preview the printout of the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#121](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#121)]
 [!code-vb[Trin_ExcelChart#121](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ProtectContents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectData">
      <MemberSignature Language="C#" Value="public bool ProtectData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ProtectData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-564">获取或设置一个值，该值指示是否禁止修改系列公式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-564">Gets or sets a value that indicates whether modification of series formulas is prevented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-565">如果用户不能修改系列公式，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-565">
              <see langword="true" /> if series formulas cannot be modified by the user; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ProtectDrawingObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectFormatting">
      <MemberSignature Language="C#" Value="public bool ProtectFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ProtectFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-566">获取或设置一个值，该值指示是否禁止修改 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件格式设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-566">Gets or sets a value that indicates whether modification of <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control formatting is prevented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-567">如果用户不能修改 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件格式设置，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-567">
              <see langword="true" /> if <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control formatting cannot be modified by the user; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-568">当此属性是`true`、**对象**命令**格式**菜单将被禁用，无法添加图表类型下拉列表中的图表元素图表命令栏上，移动、 调整大小，或删除。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-568">When this property is `true`, the **Object** command on the **Format** menu is disabled, the chart type dropdown on the chart command bar and chart elements cannot be added, moved, resized, or deleted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectGoalSeek">
      <MemberSignature Language="C#" Value="public bool ProtectGoalSeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectGoalSeek" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ProtectGoalSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ProtectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSelection">
      <MemberSignature Language="C#" Value="public bool ProtectSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ProtectSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-569">获取或设置一个值，该值指示是否禁止 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-569">Gets or sets a value that indicates whether selection of <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control elements is prevented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-570">如果不能选择 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-570">
              <see langword="true" /> if <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control elements cannot be selected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-571">当此属性是`true`，无法将形状添加到<xref:Microsoft.Office.Tools.Excel.Chart>控件，与`Click`和`DoubleClick`事件<xref:Microsoft.Office.Tools.Excel.Chart>控件元素不会发生。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-571">When this property is `true`, shapes cannot be added to the <xref:Microsoft.Office.Tools.Excel.Chart> control, and the `Click` and `DoubleClick` events for <xref:Microsoft.Office.Tools.Excel.Chart> control elements do not occur.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadarGroups">
      <MemberSignature Language="C#" Value="public object RadarGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RadarGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.RadarGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Rectangles(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Rectangles(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Refresh" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-572">更新 <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> 或 <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 对象的缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-572">Updates the cache of the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler Resize;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler Resize" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.Chart.Resize" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_ResizeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-573">当更改 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件的大小时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-573">Occurs when the size of the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-574">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>的处理程序与<xref:Microsoft.Office.Tools.Excel.Chart.Resize>显示一个消息框，在调整图表大小时的事件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-574">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with a handler for the <xref:Microsoft.Office.Tools.Excel.Chart.Resize> event that displays a message box when the chart is resized.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#210](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#210)]
 [!code-vb[Trin_ExcelChart#210](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#210)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightAngleAxes">
      <MemberSignature Language="C#" Value="public object RightAngleAxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RightAngleAxes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.RightAngleAxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-575">获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件轴是否成直角（与图表旋转角或仰角无关）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-575">Gets or sets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control axes are at right angles, independent of chart rotation or elevation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-576">如果 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件轴成直角（与图表旋转角或仰角无关），则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-576">
              <see langword="true" /> if the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control axes are at right angles, independent of chart rotation or elevation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-577">适用于仅三维折线图、 柱形图和条形图。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-577">Applies only to 3-D line, column, and bar charts.</span></span> <span data-ttu-id="3a5cf-578">如果此属性为`true`、<xref:Microsoft.Office.Tools.Excel.Chart.Perspective%2A>忽略属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-578">If this property is `true`, the <xref:Microsoft.Office.Tools.Excel.Chart.Perspective%2A> property is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-579">下面的代码示例创建一个三维<xref:Microsoft.Office.Tools.Excel.Chart>然后通过将更改角度<xref:Microsoft.Office.Tools.Excel.Chart.Perspective%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-579">The following code example creates a 3-D <xref:Microsoft.Office.Tools.Excel.Chart> and then changes the perspective by using the <xref:Microsoft.Office.Tools.Excel.Chart.Perspective%2A> property.</span></span> <span data-ttu-id="3a5cf-580">该示例设置<xref:Microsoft.Office.Tools.Excel.Chart.RightAngleAxes%2A>属性`false`以便能够改动透视。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-580">The example sets the <xref:Microsoft.Office.Tools.Excel.Chart.RightAngleAxes%2A> property to `false` so that the perspective can be changed.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#28](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#28)]
 [!code-vb[Trin_ExcelChart#28](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public object Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-581">获取或设置三维图表视图的旋转角（绘图区绕 z 轴的旋转角，以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-581">Gets or sets the rotation of the 3-D chart view (the rotation of the plot area around the z-axis, in degrees).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-582">三维图表视图的旋转角（绘图区绕 z 轴的旋转角，以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-582">The rotation of the 3-D chart view (the rotation of the plot area around the z-axis, in degrees).</span>
          </span>
          <span data-ttu-id="3a5cf-583">默认值为 20。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-583">The default value is 20.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-584">此属性的值必须在 0 到 360 之间，但三维条形图除外（其中该值必须在 0 到 44 之间）。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-584">The value of this property must be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44.</span></span> <span data-ttu-id="3a5cf-585">仅适用于三维图表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-585">Applies only to 3-D charts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-586">下面的代码示例创建一个三维<xref:Microsoft.Office.Tools.Excel.Chart>然后通过将更改旋转<xref:Microsoft.Office.Tools.Excel.Chart.Rotation%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-586">The following code example creates a 3-D <xref:Microsoft.Office.Tools.Excel.Chart> and then changes the rotation by using the <xref:Microsoft.Office.Tools.Excel.Chart.Rotation%2A> property.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#34](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#34)]
 [!code-vb[Trin_ExcelChart#34](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChartTemplate">
      <MemberSignature Language="C#" Value="public void SaveChartTemplate (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChartTemplate(string Filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.SaveChartTemplate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="3a5cf-587">新图表模板的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-587">The name of the new chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-588">将当前图表作为自定义模板保存在可用图表模板的列表中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-588">Saves the current chart as a custom template in the list of available chart templates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-589">默认情况下，此方法将当前的图表保存到用户的图表模板目录。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-589">By default, this method saves the current chart to the user's chart template directory.</span></span> <span data-ttu-id="3a5cf-590">如果指定的 UNC 或 URL，则将保存图表到指定的位置。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-590">If a UNC or URL is specified, the chart will be saved to the specified location instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Scripts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollBars(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.ScrollBars(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectEvent">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler SelectEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler SelectEvent" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.Chart.SelectEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_SelectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-591">当选择 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-591">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control is selected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-592">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>的处理程序与<xref:Microsoft.Office.Tools.Excel.Chart.SelectEvent>显示一个消息框，选择图表的主轴时的事件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-592">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with a handler for the <xref:Microsoft.Office.Tools.Excel.Chart.SelectEvent> event that displays a message box when the primary axis of the chart is selected.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#211](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#211)]
 [!code-vb[Trin_ExcelChart#211](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#211)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesChange">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler SeriesChange;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler SeriesChange" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.Chart.SeriesChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartEvents_SeriesChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-593">当更改 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件数据点的值时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-593">Occurs when the value of a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control data point is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-594">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>的处理程序与<xref:Microsoft.Office.Tools.Excel.Chart.SeriesChange>将点的边框颜色设置为绿色，更改图表的数据点时的事件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-594">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> with a handler for the <xref:Microsoft.Office.Tools.Excel.Chart.SeriesChange> event that sets a point's border color to green when a data point of the chart is changed.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#212](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#212)]
 [!code-vb[Trin_ExcelChart#212](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#212)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesCollection">
      <MemberSignature Language="C#" Value="public object SeriesCollection (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SeriesCollection(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.SeriesCollection(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="3a5cf-595">系列的名称或编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-595">The name or number of the series.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-596">获取图表或图表组中的单个系列（<see cref="T:Microsoft.Office.Interop.Excel.Series" /> 对象）或所有系列的集合（<see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> 集合）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-596">Gets either a single series (a <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object) or a collection of all the series (a <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection) in the chart or chart group.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-597">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-597">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-598">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-598">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-599">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.SeriesCollection%2A>方法将数据标签添加到图表中的第一个序列。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-599">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.SeriesCollection%2A> method to add data labels to the first series in the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#125](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#125)]
 [!code-vb[Trin_ExcelChart#125](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#125)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundPicture(string Filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.SetBackgroundPicture(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="3a5cf-600">图形文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-600">The name of the graphic file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-601">设置 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件的背景图形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-601">Sets the background graphic for <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-602">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.SetBackgroundPicture%2A>方法以设置图表背景图像文件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-602">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.SetBackgroundPicture%2A> method to set the background of the chart to an image file.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#126](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#126)]
 [!code-vb[Trin_ExcelChart#126](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#126)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart(object Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.SetDefaultChart(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="3a5cf-603">一个字符串，表示在创建新图表时要使用的默认图表模板的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-603">A string that indicates the name of the default chart template that will be used to create new charts.</span>
          </span>
          <span data-ttu-id="3a5cf-604">该名称可以标识用户定义的模板库中的图表，它也可以是指定内置图表模板的 <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-604">This name can identify a chart in the gallery for a user-defined template, or it can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" /> values that specifies a built-in chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-605">指定 Microsoft Office Excel 在创建新图表时使用的图表模板的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-605">Specifies the name of the chart template that Microsoft Office Excel uses when it creates new charts.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-606">下面的代码示例将默认图表模板设置为线图图表类型。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-606">The following code example sets the default chart template to the line chart type.</span></span> <span data-ttu-id="3a5cf-607">接下来的示例将新的图表添加到活动工作表，并填充工作表上指定范围中的其源数据。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-607">Next the example adds a new chart to the active worksheet and populates its source data from a specified range on the worksheet.</span></span> <span data-ttu-id="3a5cf-608">若要运行此代码示例，你的工作簿必须包含名为工作表`Sheet1`名为图表`Chart_1`。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-608">To run this code example, your workbook must contain a worksheet named `Sheet1` with a chart named `Chart_1`.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkBook_Additional#19](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#19)]
 [!code-vb[Trin_ExcelWorkBook_Additional#19](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetElement">
      <MemberSignature Language="C#" Value="public void SetElement (Microsoft.Office.Core.MsoChartElementType Element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetElement(valuetype Microsoft.Office.Core.MsoChartElementType Element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Element" Type="Microsoft.Office.Core.MsoChartElementType" />
      </Parameters>
      <Docs>
        <param name="Element">
          <span data-ttu-id="3a5cf-609">
            <see langword="Microsoft.Office.Core.MsoChartElementType" /> 值之一，指定元素修改的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-609">One of the <see langword="Microsoft.Office.Core.MsoChartElementType" /> values that specifies the type of element modification.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-610">修改图表中的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-610">Modifies an element on the chart.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-611">使用<xref:Microsoft.Office.Tools.Excel.Chart.SetElement%2A>方法来修改指定的选项根据图表元素`Microsoft.Office.Core.MsoChartElementType`值。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-611">Use the <xref:Microsoft.Office.Tools.Excel.Chart.SetElement%2A> method to modify an element of the chart according to the options specified by the `Microsoft.Office.Core.MsoChartElementType` values.</span></span> <span data-ttu-id="3a5cf-612">例如，若要隐藏表图例，将值传递`Microsoft.Office.Core.MsoChartElementType.msoElementLegendNone`到<xref:Microsoft.Office.Tools.Excel.Chart.SetElement%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-612">For example, to hide the table legend, pass the value `Microsoft.Office.Core.MsoChartElementType.msoElementLegendNone` to the <xref:Microsoft.Office.Tools.Excel.Chart.SetElement%2A> method.</span></span>  
  
 <span data-ttu-id="3a5cf-613">你可以通过使用此方法执行的操作对应于以下按钮上**布局**选项卡的功能区时选择图表：</span><span class="sxs-lookup"><span data-stu-id="3a5cf-613">The operations you can perform by using this method correspond to the following buttons on the **Layout** tab of the Ribbon when a chart is selected:</span></span>  
  
-   <span data-ttu-id="3a5cf-614">中的所有按钮**标签**组。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-614">All buttons in the **Labels** group.</span></span>  
  
-   <span data-ttu-id="3a5cf-615">中的所有按钮**轴**组。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-615">All buttons in the **Axes** group.</span></span>  
  
-   <span data-ttu-id="3a5cf-616">中的所有按钮**分析**组。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-616">All buttons in the **Analysis** group.</span></span>  
  
-   <span data-ttu-id="3a5cf-617">**绘图区**，**图表背景墙**，和**图表基底**按钮**后台**组。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-617">The **Plot Area**, **Chart Wall**, and **Chart Floor** buttons in the **Background** group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-618">下面的代码示例应用可用于的图表类型的第 10 个布局`Chart_1`图表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-618">The following code example applies the tenth layout that is available for the chart type of the `Chart_1` chart.</span></span> <span data-ttu-id="3a5cf-619">此外，该示例使用<xref:Microsoft.Office.Tools.Excel.Chart.SetElement%2A>方法应用更多布局更改： 设置图表标题为居中且位于图表网格区域内的样式、 添加的水平轴的标题以及添加垂直轴的旋转的标题。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-619">In addition, the example uses the <xref:Microsoft.Office.Tools.Excel.Chart.SetElement%2A> method to apply further layout changes: setting the style of the chart title to be centered and to lie inside the chart grid area, adding a title for the horizontal axis, and adding a rotated title for the vertical axis.</span></span> <span data-ttu-id="3a5cf-620">若要运行此代码示例，必须将添加名为簇状的柱形二维图表`Chart_1`默认表`Sheet1`。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-620">To run this code example, you must add a clustered column two-dimensional chart with the name `Chart_1` to the default sheet `Sheet1`.</span></span>  
  
 [!code-csharp[Trin_ExcelWorkBook_Additional#17](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#17)]
 [!code-vb[Trin_ExcelWorkBook_Additional#17](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSourceData">
      <MemberSignature Language="C#" Value="public void SetSourceData (Microsoft.Office.Interop.Excel.Range Source, object PlotBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSourceData(class Microsoft.Office.Interop.Excel.Range Source, object PlotBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.SetSourceData(Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="PlotBy" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="3a5cf-621">
            <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-621">
              <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="3a5cf-622">包含源数据的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-622">The range that contains the source data.</span>
          </span>
        </param>
        <param name="PlotBy">
          <span data-ttu-id="3a5cf-623">指定绘制数据的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-623">Specifies the way the data is to be plotted.</span>
          </span>
          <span data-ttu-id="3a5cf-624">可以为以下 <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> 常数之一：<see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> 或 <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-624">Can be either of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlColumns" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlRowCol.xlRows" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a5cf-625">设置 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件的源数据范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-625">Sets the source data range for the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="optional-parameters"></a><span data-ttu-id="3a5cf-626">可选参数</span><span class="sxs-lookup"><span data-stu-id="3a5cf-626">Optional Parameters</span></span>  
 <span data-ttu-id="3a5cf-627">可选参数的信息，请参阅[Office 解决方案中的可选参数](/visualstudio/vsto/optional-parameters-in-office-solutions.md)。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-627">For information on optional parameters, see [Optional Parameters in Office Solutions](/visualstudio/vsto/optional-parameters-in-office-solutions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-628">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.SetSourceData%2A>方法将图表的数据源设置为包含单元格 A1 到 B5 的范围。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-628">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.SetSourceData%2A> method to set the data source of the chart to a range that contains cells A1 through B5.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#127](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#127)]
 [!code-vb[Trin_ExcelChart#127](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#127)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Shapes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-629">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件上的所有形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-629">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-630">一个 <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> 对象，表示工作表或图表工作表上的所有形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-630">A <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-631">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.Shapes%2A>属性以便在图表上绘制圆环图形状。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-631">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.Shapes%2A> property to draw a doughnut shape on the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#36](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#36)]
 [!code-vb[Trin_ExcelChart#36](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAllFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAllFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ShowAllFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-632">获取或设置是否在数据透视图上显示所有字段按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-632">Gets or sets whether to display all field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-633">如果要在指定的数据透视图上显示所有字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-633">
              <see langword="true" /> to display all field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-634">设置<xref:Microsoft.Office.Tools.Excel.Chart.ShowAllFieldButtons%2A>属性`true`无法在指定的数据透视图显示所有字段按钮。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-634">Set the <xref:Microsoft.Office.Tools.Excel.Chart.ShowAllFieldButtons%2A> property to `true` to display all field buttons on the specified PivotChart.</span></span> <span data-ttu-id="3a5cf-635">将属性设置为`false`若要隐藏的所有字段按钮。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-635">Set the property to `false` to hide all field buttons.</span></span>  
  
 <span data-ttu-id="3a5cf-636"><xref:Microsoft.Office.Tools.Excel.Chart.ShowAllFieldButtons%2A>属性对应于**全部隐藏**命令**字段按钮**的下拉列表**分析**在 Excel 中，这是可用的选项卡选定数据透视图。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-636">The <xref:Microsoft.Office.Tools.Excel.Chart.ShowAllFieldButtons%2A> property corresponds to the **Hide All** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a5cf-637">此属性将出现在 IntelliSense Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-637">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="3a5cf-638">但是，不能在 Excel 2007 项目中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-638">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="3a5cf-639">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-639">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShowAxisFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAxisFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAxisFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ShowAxisFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-640">获取或设置是否在数据透视图上显示轴字段按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-640">Gets or sets whether to display axis field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-641">若要在指定的数据透视图上显示轴字段按钮，请使用 <see langword="true" />；否则使用 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-641">
              <see langword="true" /> to display axis field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-642">设置<xref:Microsoft.Office.Tools.Excel.Chart.ShowAxisFieldButtons%2A>属性`true`无法在指定的数据透视图显示轴字段按钮。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-642">Set the <xref:Microsoft.Office.Tools.Excel.Chart.ShowAxisFieldButtons%2A> property to `true` to display axis field buttons on the specified PivotChart.</span></span> <span data-ttu-id="3a5cf-643">将属性设置为`false`隐藏按钮。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-643">Set the property to `false` to hide the buttons.</span></span>  
  
 <span data-ttu-id="3a5cf-644"><xref:Microsoft.Office.Tools.Excel.Chart.ShowAxisFieldButtons%2A>属性对应于**显示轴字段****按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，它在选定的数据透视图时才可用的选项卡。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-644">The <xref:Microsoft.Office.Tools.Excel.Chart.ShowAxisFieldButtons%2A> property corresponds to the **Show Axis Field** **Buttons** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a5cf-645">此属性将出现在 IntelliSense Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-645">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="3a5cf-646">但是，不能在 Excel 2007 项目中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-646">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="3a5cf-647">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-647">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShowDataLabelsOverMaximum">
      <MemberSignature Language="C#" Value="public bool ShowDataLabelsOverMaximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDataLabelsOverMaximum" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ShowDataLabelsOverMaximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-648">获取或设置一个值，该值指示当值大于数值轴上的最大值时是否显示数据标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-648">Gets or sets a value that indicates whether to show the data labels when the value is greater than the maximum value on the value axis.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-649">如果当值大于数值轴上的最大值时显示数据标签，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-649">
              <see langword="true" /> to show the data labels when the value is greater than the maximum value on the value axis; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-650">如果你更改中变得比的数据点的大小小数值轴，你可以使用此属性设置是否显示数据标签。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-650">If you change the value axis in such a way that it becomes smaller than the size of the data points, you can use this property to set whether to show the data labels.</span></span> <span data-ttu-id="3a5cf-651">此属性适用于仅二维图表。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-651">This property applies to 2-D charts only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowLegendFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowLegendFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLegendFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ShowLegendFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-652">获取或设置是否在数据透视图上显示图例字段按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-652">Gets or sets whether to display legend field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-653">如果要在指定的数据透视图上显示所有图例字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-653">
              <see langword="true" /> to display all legend field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-654">设置<xref:Microsoft.Office.Tools.Excel.Chart.ShowLegendFieldButtons%2A>属性`true`无法在指定的数据透视图显示图例字段按钮。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-654">Set the <xref:Microsoft.Office.Tools.Excel.Chart.ShowLegendFieldButtons%2A> property to `true` to display legend field buttons on the specified PivotChart.</span></span> <span data-ttu-id="3a5cf-655">将属性设置为`false`隐藏按钮。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-655">Set the property to `false` to hide the buttons.</span></span>  
  
 <span data-ttu-id="3a5cf-656"><xref:Microsoft.Office.Tools.Excel.Chart.ShowLegendFieldButtons%2A>属性对应于**显示图例字段按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，这是选项卡在选中某个数据透视图才可用。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-656">The <xref:Microsoft.Office.Tools.Excel.Chart.ShowLegendFieldButtons%2A> property corresponds to the **Show Legend Field Buttons** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a5cf-657">此属性将出现在 IntelliSense Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-657">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="3a5cf-658">但是，不能在 Excel 2007 项目中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-658">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="3a5cf-659">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-659">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShowReportFilterFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowReportFilterFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReportFilterFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ShowReportFilterFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-660">获取或设置是否在数据透视图上显示报告筛选器字段按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-660">Gets or sets whether to display the report filter field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-661">如果要在指定的数据透视图上显示报告筛选器字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-661">
              <see langword="true" /> to display the report filter field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-662">设置<xref:Microsoft.Office.Tools.Excel.Chart.ShowReportFilterFieldButtons%2A>属性`true`无法在指定的数据透视图显示报表筛选器字段按钮。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-662">Set the <xref:Microsoft.Office.Tools.Excel.Chart.ShowReportFilterFieldButtons%2A> property to `true` to display the Report Filter Field buttons on the specified PivotChart.</span></span> <span data-ttu-id="3a5cf-663">将属性设置为`false`隐藏按钮。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-663">Set the property to `false` to hide the buttons.</span></span>  
  
 <span data-ttu-id="3a5cf-664"><xref:Microsoft.Office.Tools.Excel.Chart.ShowReportFilterFieldButtons%2A>属性对应于**显示报表筛选器字段按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，选项卡的当选定数据透视图才可用。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-664">The <xref:Microsoft.Office.Tools.Excel.Chart.ShowReportFilterFieldButtons%2A> property corresponds to the **Show Report Filter Field Buttons** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a5cf-665">此属性将出现在 IntelliSense Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-665">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="3a5cf-666">但是，不能在 Excel 2007 项目中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-666">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="3a5cf-667">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-667">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShowValueFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowValueFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowValueFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ShowValueFieldButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-668">获取或设置是否在数据透视图上显示值字段按钮。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-668">Gets or sets whether to display the value field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-669">如果要在指定的数据透视图上显示值字段按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-669">
              <see langword="true" /> to display the value field buttons on the specified PivotChart; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-670">设置<xref:Microsoft.Office.Tools.Excel.Chart.ShowValueFieldButtons%2A>属性`true`来显示值`field`上指定的数据透视图按钮。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-670">Set the <xref:Microsoft.Office.Tools.Excel.Chart.ShowValueFieldButtons%2A> property to `true` to display the Value `field` buttons on the specified PivotChart.</span></span> <span data-ttu-id="3a5cf-671">将属性设置为`false`隐藏按钮。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-671">Set the property to `false` to hide the button.</span></span>  
  
 <span data-ttu-id="3a5cf-672"><xref:Microsoft.Office.Tools.Excel.Chart.ShowValueFieldButtons%2A>属性对应于**显示值字段按钮**命令**字段按钮**的下拉列表**分析**在 Excel 中，这是选项卡在选中某个数据透视图才可用。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-672">The <xref:Microsoft.Office.Tools.Excel.Chart.ShowValueFieldButtons%2A> property corresponds to the **Show Value Field Buttons** command on the **Field Buttons** drop-down list of the **Analyze** tab in Excel, which is available when a PivotChart is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a5cf-673">此属性将出现在 IntelliSense Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-673">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="3a5cf-674">但是，不能在 Excel 2007 项目中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-674">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="3a5cf-675">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-675">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShowWindow">
      <MemberSignature Language="C#" Value="public bool ShowWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.ShowWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SideWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls SideWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls SideWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.SideWall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-676">获取一个对象，该对象表示三维图表的侧面墙。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-676">Gets an object that represents the side wall of a 3-D chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-677">一个 <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，表示三维图表的侧面墙。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-677">A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the side wall of a 3-D chart.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-678">使用<xref:Microsoft.Office.Tools.Excel.Chart.SideWall%2A>端三维图表的墙进行格式设置的属性。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-678">Use the <xref:Microsoft.Office.Tools.Excel.Chart.SideWall%2A> property to format the side wall of a 3-D chart.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5cf-679">下面的代码示例将添加到三维簇状的柱形图`Sheet1`并设置其样式为样式 4。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-679">The following code example adds a 3-D clustered column chart to `Sheet1` and sets its style to style 4.</span></span> <span data-ttu-id="3a5cf-680">然后，示例创建的任意数据范围，并将其设置为图表源数据。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-680">The example then creates a range of arbitrary data and sets it as the chart source data.</span></span> <span data-ttu-id="3a5cf-681">接下来，该代码指定图表背景墙和层的颜色。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-681">Next, the code specifies the colors of the chart walls and floor.</span></span>  
  
 [!code-csharp[Trin_Excelworkbook_Additional#37](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#37)]
 [!code-vb[Trin_Excelworkbook_Additional#37](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeWithWindow">
      <MemberSignature Language="C#" Value="public bool SizeWithWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SizeWithWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.SizeWithWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Spinners(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.Spinners(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubType">
      <MemberSignature Language="C#" Value="public int SubType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.SubType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfaceGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.SurfaceGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Tab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-682">获取 <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> 控件的 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-682">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-683">
            <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> 控件的 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-683">A <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-684">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.Tab%2A>属性来确定是否将选项卡的颜色索引设置为 none。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-684">The following code example creates a <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.Tab%2A> property to determine whether or not the color index of the tab is set to none.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#38](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#38)]
 [!code-vb[Trin_ExcelChart#38](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-685">获取或设置包含有关 <see cref="P:Microsoft.Office.Tools.Excel.Chart.Tag" /> 控件的数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-685">Gets or sets the object that contains data about the <see cref="P:Microsoft.Office.Tools.Excel.Chart.Tag" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-686">一个包含有关 <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> 控件的数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-686">An object that contains data about the <see cref="T:Microsoft.Office.Tools.Excel.Chart" /> control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5cf-687">一个常见用途<xref:Microsoft.Office.Tools.Excel.Chart.Tag%2A>属性是与紧密关联的数据存储<xref:Microsoft.Office.Tools.Excel.Chart>控件。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-687">A common use for the <xref:Microsoft.Office.Tools.Excel.Chart.Tag%2A> property is to store data that is closely associated with the <xref:Microsoft.Office.Tools.Excel.Chart> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextBoxes(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.TextBoxes(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Walls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls Walls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls Walls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.Walls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a5cf-688">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，该对象表示三维图表的墙纸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-688">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a5cf-689">
            <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> 对象，表示三维图表的墙纸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a5cf-689">A <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D chart.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a5cf-690">下面的代码示例创建一个三维<xref:Microsoft.Office.Tools.Excel.Chart>，然后使用<xref:Microsoft.Office.Tools.Excel.Chart.Walls%2A>属性设置权重和图表的墙的颜色。</span><span class="sxs-lookup"><span data-stu-id="3a5cf-690">The following code example creates a 3-D <xref:Microsoft.Office.Tools.Excel.Chart> and then uses the <xref:Microsoft.Office.Tools.Excel.Chart.Walls%2A> property to set the weight and color of the walls of the chart.</span></span>  
  
 [!code-csharp[Trin_ExcelChart#39](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelChart/CS/Sheet1.cs#39)]
 [!code-vb[Trin_ExcelChart#39](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelChart/VB/Sheet1.vb#39)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WallsAndGridlines2D">
      <MemberSignature Language="C#" Value="public bool WallsAndGridlines2D { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WallsAndGridlines2D" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.Chart.WallsAndGridlines2D" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XYGroups">
      <MemberSignature Language="C#" Value="public object XYGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object XYGroups(object Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.Chart.XYGroups(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>