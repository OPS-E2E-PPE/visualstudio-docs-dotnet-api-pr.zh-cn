<Type Name="ListObject" FullName="Microsoft.Office.Tools.Excel.ListObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf8e5ce23b73a82c8cbc299c7d47014489e5c494" />
    <Meta Name="ms.sourcegitcommit" Value="66ccc1ab172558cdfd2b9ffb616a60e4c9105be3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/19/2018" />
    <Meta Name="ms.locfileid" Value="46457490" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ListObject : IDisposable, System.ComponentModel.IComponent, System.ComponentModel.ISupportInitialize, System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ListObject implements class System.ComponentModel.IComponent, class System.ComponentModel.ISupportInitialize, class System.IDisposable, class System.Windows.Forms.IBindableComponent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Tools.Excel.ListObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Excel.v4.0.Utilities</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IBindableComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("48eb309a-698d-4d40-95af-d9d083e63d30")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeIdentifier</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9fc29-101">
        <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件在一系列行和列中显示数据。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9fc29-101">The <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control displays data in a series of rows and columns.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-102">有关详细信息，请参阅[ListObject 控件](/visualstudio/vsto/listobject-control)。</span><span class="sxs-lookup"><span data-stu-id="9fc29-102">For more information, see [ListObject Control](/visualstudio/vsto/listobject-control).</span></span>  
  
 [!INCLUDE[vsto_interface](~/includes/vsto-interface-md.md)]  
  
## <a name="usage"></a><span data-ttu-id="9fc29-103">用法</span><span class="sxs-lookup"><span data-stu-id="9fc29-103">Usage</span></span>  
 [!INCLUDE[vsto_net35mref](~/includes/vsto-net35mref-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string _Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject._Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="public bool Active { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-104">获取一个值，该值指示工作表上的 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件是否处于活动状态；即，活动单元格是否位于 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的范围内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-104">Gets a value that indicates whether a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control on a worksheet is active; that is, whether the active cell is inside the range of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-105">如果活动单元格位于 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的范围内，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-105">
              <see langword="true" /> if the active cell is inside the range of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-106">因为没有任何`Activate`方法<xref:Microsoft.Office.Tools.Excel.ListObject>控件，可以激活<xref:Microsoft.Office.Tools.Excel.ListObject>仅通过激活单元格范围列表中的控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-106">Because there is no `Activate` method for the <xref:Microsoft.Office.Tools.Excel.ListObject> control, you can activate a <xref:Microsoft.Office.Tools.Excel.ListObject> control only by activating a cell range within the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternativeText">
      <MemberSignature Language="C#" Value="public string AlternativeText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternativeText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.AlternativeText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-107">获取或设置指定表的说明性（可选）文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-107">Gets or sets the descriptive (alternative) text string for the specified table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-108">一个字符串，表示指定表的说明性（可选）文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-108">A string that represents the descriptive (alternative) text string for the specified table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-109">值<xref:Microsoft.Office.Tools.Excel.ListObject.AlternativeText%2A>的设置的属性相对应**标题**框中**可选文字**对话框中，右键单击某个表，指向显示**表**，然后单击**可选文字**。</span><span class="sxs-lookup"><span data-stu-id="9fc29-109">The value of the <xref:Microsoft.Office.Tools.Excel.ListObject.AlternativeText%2A> property corresponds to the setting of the **Title** box in the **Alternative Text** dialog box, which is displayed by right-clicking a table, pointing to **Table**, and then clicking **Alternative Text**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9fc29-110">此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="9fc29-110">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="9fc29-111">但是，此属性不能使用 Excel 2007 项目中。</span><span class="sxs-lookup"><span data-stu-id="9fc29-111">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="9fc29-112">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-112">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-113">获取一个表示 Microsoft Office Excel 应用程序或 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 创建者的 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-113">Gets an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents either the Microsoft Office Excel application or the creator of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-114">一个表示 <see cref="T:Microsoft.Office.Interop.Excel.Application" /> 创建者的 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-114">An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> that represents the creator of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9fc29-115">下面的代码示例获取的名称和版本的应用程序包含<xref:Microsoft.Office.Tools.Excel.ListObject>并在消息框中显示的信息。</span><span class="sxs-lookup"><span data-stu-id="9fc29-115">The following code example gets the name and version of the application that contains the <xref:Microsoft.Office.Tools.Excel.ListObject> and displays the information in a message box.</span></span>  
  
 <span data-ttu-id="9fc29-116">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-116">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#8](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#8)]
 [!code-vb[Trin_ExcelListObject#8](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoFilter AutoFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoFilter AutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.AutoFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-117">获取一个筛选的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-117">Gets a filtered table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-118">一个 <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" />，其中包含筛选的表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-118">An <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> that contains a filtered table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9fc29-119">下面的代码示例添加<xref:Microsoft.Office.Tools.Excel.ListObject>到工作表，它对应于 Excel 中的表。</span><span class="sxs-lookup"><span data-stu-id="9fc29-119">The following code example adds a <xref:Microsoft.Office.Tools.Excel.ListObject> to the worksheet, which corresponds to a table in Excel.</span></span> <span data-ttu-id="9fc29-120">然后，示例使用两个行的任意数据填充表，并指定上筛选出所有行的第一列的值的表的筛选器不等于"bb"的字符串值。</span><span class="sxs-lookup"><span data-stu-id="9fc29-120">The example then populates the table with two rows of arbitrary data and specifies a filter on the table that filters out all the rows whose first column value is not equal to the string value "bb".</span></span> <span data-ttu-id="9fc29-121">接下来，此示例显示表中找到的活动筛选器的数。</span><span class="sxs-lookup"><span data-stu-id="9fc29-121">Next, the example displays the number of active filters found in the table.</span></span>  
  
 <span data-ttu-id="9fc29-122">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-122">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_Excelworkbook_Additional#32](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/Sheet3.cs#32)]
 [!code-vb[Trin_Excelworkbook_Additional#32](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/Sheet3.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSelectRows">
      <MemberSignature Language="C#" Value="public bool AutoSelectRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSelectRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.AutoSelectRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-123">获取或设置一个值，该值指示在 <see cref="P:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex" /> 发生更改时是否选择整行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-123">Gets or sets a value that indicates whether the entire row is selected when the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex" /> changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-124">如果选择整行，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-124">
              <see langword="true" /> to select the entire row; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9fc29-125">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-125">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-126">中的整个行<xref:Microsoft.Office.Tools.Excel.ListObject>对应的控件用户界面<xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex%2A>时此属性设置为选择`true`。</span><span class="sxs-lookup"><span data-stu-id="9fc29-126">The entire row in the <xref:Microsoft.Office.Tools.Excel.ListObject> control user interface that corresponds to the <xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex%2A> is selected when this property is set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-127">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.ListObject>当前工作表上。</span><span class="sxs-lookup"><span data-stu-id="9fc29-127">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> on the current worksheet.</span></span> <span data-ttu-id="9fc29-128">它使用<xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex%2A>和<xref:Microsoft.Office.Tools.Excel.ListObject.AutoSelectRows%2A>属性来选择第二行并指定当用户单击行选择整行。</span><span class="sxs-lookup"><span data-stu-id="9fc29-128">It uses the <xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex%2A> and <xref:Microsoft.Office.Tools.Excel.ListObject.AutoSelectRows%2A> properties to select the second row and to specify that the entire row is selected when the user clicks a row.</span></span> <span data-ttu-id="9fc29-129">此代码示例还创建的事件处理程序<xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndexChanged>显示一个消息框，选择一个新行时的事件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-129">The code example also creates an event handler for the <xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndexChanged> event that displays a message box whenever a new row is selected.</span></span>  
  
 <span data-ttu-id="9fc29-130">此版本是文档级自定义项。</span><span class="sxs-lookup"><span data-stu-id="9fc29-130">This version is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#2)]
 [!code-vb[Trin_ExcelListObject#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#2)]  
  
 <span data-ttu-id="9fc29-131">此版本用于针对应用程序级外接程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-131">This version is for an application-level add-in.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject_AppLevelAddIn#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/CS/ThisAddIn.cs#2)]
 [!code-vb[Trin_ExcelListObject_AppLevelAddIn#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/VB/ThisAddIn.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSetDataBoundColumnHeaders">
      <MemberSignature Language="C#" Value="public bool AutoSetDataBoundColumnHeaders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSetDataBoundColumnHeaders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.AutoSetDataBoundColumnHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-132">获取或设置一个值，该值确定是否自动将列标题设置为与数据源相匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-132">Gets or sets a value that determines whether the column headers are automatically set to match the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-133">如果自动设置列名，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-133">
              <see langword="true" /> to automatically set the column names; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9fc29-134">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-134">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-135">如果设置为`true`，此属性会导致在每个列的列标题<xref:Microsoft.Office.Tools.Excel.ListObject>控件以匹配数据源的相应列标题。</span><span class="sxs-lookup"><span data-stu-id="9fc29-135">When set to `true`, this property causes the column header of each column in the <xref:Microsoft.Office.Tools.Excel.ListObject> control to match the corresponding column header of the data source.</span></span>  
  
 <span data-ttu-id="9fc29-136">此属性设置为使用工作表的人员不能更改列标题`true`。</span><span class="sxs-lookup"><span data-stu-id="9fc29-136">The person using the worksheet cannot change the column headers when this property is set to `true`.</span></span> <span data-ttu-id="9fc29-137">如果更改列标题，它将还原回以匹配数据源，用户切换焦点从标头单元格上时。</span><span class="sxs-lookup"><span data-stu-id="9fc29-137">If the column header is changed, it will revert back to match the data source when the user shifts focus away from the header cell.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeAddDataBoundRow">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Tools.Excel.BeforeAddDataBoundRowEventHandler BeforeAddDataBoundRow;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Excel.BeforeAddDataBoundRowEventHandler BeforeAddDataBoundRow" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ListObject.BeforeAddDataBoundRow" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.BeforeAddDataBoundRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-138">恰好在尝试向绑定到数据的 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件添加新行之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-138">Occurs just before an attempt to add a new row to a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control that is bound to data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-139">仅当引发此事件<xref:Microsoft.Office.Tools.Excel.ListObject>控件绑定到数据。</span><span class="sxs-lookup"><span data-stu-id="9fc29-139">This event is raised only if the <xref:Microsoft.Office.Tools.Excel.ListObject> control is bound to data.</span></span>  
  
 <span data-ttu-id="9fc29-140">仅当通过 Microsoft Office Excel 用户界面添加一个新行时，引发此事件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-140">This event is raised only when a new row is added through the Microsoft Office Excel user interface.</span></span> <span data-ttu-id="9fc29-141">以编程方式添加一个新行时，它将不引发。</span><span class="sxs-lookup"><span data-stu-id="9fc29-141">It is not raised when a new row is added programmatically.</span></span>  
  
 <span data-ttu-id="9fc29-142">处理此事件来执行其他验证，或若要取消添加一行。</span><span class="sxs-lookup"><span data-stu-id="9fc29-142">Handle this event to perform additional validation, or to cancel addition of a row.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-143">下面的代码示例将创建<xref:System.Data.DataTable>和一个<xref:Microsoft.Office.Tools.Excel.ListObject>，并将绑定<xref:Microsoft.Office.Tools.Excel.ListObject>到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-143">The following code example creates a <xref:System.Data.DataTable> and a <xref:Microsoft.Office.Tools.Excel.ListObject>, and binds the <xref:Microsoft.Office.Tools.Excel.ListObject> to the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9fc29-144">然后，它创建<xref:Microsoft.Office.Tools.Excel.ListObject.BeforeAddDataBoundRow>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-144">It then creates a <xref:Microsoft.Office.Tools.Excel.ListObject.BeforeAddDataBoundRow> event handler.</span></span> <span data-ttu-id="9fc29-145">若要测试事件，请手动添加到一个新行<xref:Microsoft.Office.Tools.Excel.ListObject>表 1 上。</span><span class="sxs-lookup"><span data-stu-id="9fc29-145">To test the event, manually add a new row to the <xref:Microsoft.Office.Tools.Excel.ListObject> on sheet 1.</span></span> <span data-ttu-id="9fc29-146">事件处理程序中删除相应行，并显示一条消息。</span><span class="sxs-lookup"><span data-stu-id="9fc29-146">The event handler removes the row and displays a message.</span></span>  
  
 <span data-ttu-id="9fc29-147">此版本是文档级自定义项。</span><span class="sxs-lookup"><span data-stu-id="9fc29-147">This version is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#9)]
 [!code-vb[Trin_ExcelListObject#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#9)]  
  
 <span data-ttu-id="9fc29-148">此版本用于针对应用程序级外接程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-148">This version is for an application-level add-in.</span></span> <span data-ttu-id="9fc29-149">若要使用此代码示例，请添加`using System.Data;`指令，如果使用的 C# 或`Imports System.Data`语句，如果使用的 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="9fc29-149">To use this code example, add the `using System.Data;` directive if you are using C# or the `Imports System.Data` statement if you are using Visual Basic.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject_AppLevelAddIn#9](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/CS/ThisAddIn.cs#9)]
 [!code-vb[Trin_ExcelListObject_AppLevelAddIn#9](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/VB/ThisAddIn.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeDoubleClick">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_BeforeDoubleClickEventHandler BeforeDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_BeforeDoubleClickEventHandler BeforeDoubleClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ListObject.BeforeDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_BeforeDoubleClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-150">在双击 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件时，但在默认双击操作之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-150">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control is double-clicked, before the default double-click action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9fc29-151">下面的代码示例将创建<xref:Microsoft.Office.Tools.Excel.ListObject>和一个<xref:Microsoft.Office.Tools.Excel.ListObject.BeforeDoubleClick>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-151">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> and a <xref:Microsoft.Office.Tools.Excel.ListObject.BeforeDoubleClick> event handler.</span></span> <span data-ttu-id="9fc29-152">当<xref:Microsoft.Office.Tools.Excel.ListObject>双击之后，显示一条消息，指示是否<xref:Microsoft.Office.Tools.Excel.ListObject>绑定到数据。</span><span class="sxs-lookup"><span data-stu-id="9fc29-152">When the <xref:Microsoft.Office.Tools.Excel.ListObject> is double-clicked, a message is displayed that indicates whether the <xref:Microsoft.Office.Tools.Excel.ListObject> is bound to data.</span></span>  
  
 <span data-ttu-id="9fc29-153">此版本是文档级自定义项。</span><span class="sxs-lookup"><span data-stu-id="9fc29-153">This version is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#10](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#10)]
 [!code-vb[Trin_ExcelListObject#10](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#10)]  
  
 <span data-ttu-id="9fc29-154">此版本用于针对应用程序级外接程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-154">This version is for an application-level add-in.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject_AppLevelAddIn#10](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/CS/ThisAddIn.cs#10)]
 [!code-vb[Trin_ExcelListObject_AppLevelAddIn#10](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/VB/ThisAddIn.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeRightClick">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_BeforeRightClickEventHandler BeforeRightClick;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_BeforeRightClickEventHandler BeforeRightClick" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ListObject.BeforeRightClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_BeforeRightClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-155">在右击 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件时，但在默认右击操作之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-155">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control is right-clicked, before the default right-click action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9fc29-156">下面的代码示例将创建<xref:Microsoft.Office.Tools.Excel.ListObject>和一个<xref:Microsoft.Office.Tools.Excel.ListObject.BeforeRightClick>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-156">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> and a <xref:Microsoft.Office.Tools.Excel.ListObject.BeforeRightClick> event handler.</span></span> <span data-ttu-id="9fc29-157">右击列表对象时，将显示一条消息，指示是否将列表对象绑定到数据。</span><span class="sxs-lookup"><span data-stu-id="9fc29-157">When the list object is right-clicked, a message is displayed that indicates whether the list object is bound to data.</span></span>  
  
 <span data-ttu-id="9fc29-158">此版本是文档级自定义项。</span><span class="sxs-lookup"><span data-stu-id="9fc29-158">This version is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#11](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#11)]
 [!code-vb[Trin_ExcelListObject#11](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#11)]  
  
 <span data-ttu-id="9fc29-159">此版本用于针对应用程序级外接程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-159">This version is for an application-level add-in.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject_AppLevelAddIn#11](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/CS/ThisAddIn.cs#11)]
 [!code-vb[Trin_ExcelListObject_AppLevelAddIn#11](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/VB/ThisAddIn.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ListObject.BindingContextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Tools.Excel.ListObjectChangeHandler Change;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Excel.ListObjectChangeHandler Change" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ListObject.Change" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.ListObjectChangeHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-160">当 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件中发生更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-160">Occurs when something changes in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-161">如果引发此事件<xref:Microsoft.Office.Tools.Excel.ListObject>通过以编程方式修改或用户交互更改控制。</span><span class="sxs-lookup"><span data-stu-id="9fc29-161">This event is raised if the <xref:Microsoft.Office.Tools.Excel.ListObject> control is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="9fc29-162">不会触发重新计算的单元格更改此事件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-162">This event does not occur when cells change during a recalculation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-163">下面的代码示例将创建<xref:Microsoft.Office.Tools.Excel.ListObject>和一个<xref:Microsoft.Office.Tools.Excel.ListObject.Change>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-163">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> and a <xref:Microsoft.Office.Tools.Excel.ListObject.Change> event handler.</span></span> <span data-ttu-id="9fc29-164">若要引发<xref:Microsoft.Office.Tools.Excel.ListObject.Change>事件，将文本添加到中的单元格之一<xref:Microsoft.Office.Tools.Excel.ListObject>，然后按 ENTER。</span><span class="sxs-lookup"><span data-stu-id="9fc29-164">To raise the <xref:Microsoft.Office.Tools.Excel.ListObject.Change> event, add text to one of the cells in the <xref:Microsoft.Office.Tools.Excel.ListObject> and then press ENTER.</span></span>  
  
 <span data-ttu-id="9fc29-165">此版本是文档级自定义项。</span><span class="sxs-lookup"><span data-stu-id="9fc29-165">This version is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#12](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#12)]
 [!code-vb[Trin_ExcelListObject#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#12)]  
  
 <span data-ttu-id="9fc29-166">此版本用于针对应用程序级外接程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-166">This version is for an application-level add-in.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject_AppLevelAddIn#12](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/CS/ThisAddIn.cs#12)]
 [!code-vb[Trin_ExcelListObject_AppLevelAddIn#12](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/VB/ThisAddIn.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-167">获取或设置与 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 关联的注释。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-167">Gets or sets a comment that is associated with the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-168">一个字符串，表示与 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 关联的注释。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-168">A string that represents a comment that is associated with the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-169">获取在其中创建 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-169">Gets the application in which the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-170">在其中创建 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-170">The application in which the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> was created.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-171">如果在 Microsoft Office Excel 中创建对象时，此属性返回字符串 XCEL，这与十六进制数 5843454c。</span><span class="sxs-lookup"><span data-stu-id="9fc29-171">If the object was created in Microsoft Office Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-172">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.ListObject>和检查的创建者代码是否与 Excel 相匹配。</span><span class="sxs-lookup"><span data-stu-id="9fc29-172">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> and checks whether the creator code matches Excel.</span></span> <span data-ttu-id="9fc29-173">如果创建者代码与匹配，代码将显示一个消息框。</span><span class="sxs-lookup"><span data-stu-id="9fc29-173">If the creator code matches, the code displays a message box.</span></span>  
  
 <span data-ttu-id="9fc29-174">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-174">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#13](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#13)]
 [!code-vb[Trin_ExcelListObject#13](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindingFailure">
      <MemberSignature Language="C#" Value="public event EventHandler DataBindingFailure;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataBindingFailure" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ListObject.DataBindingFailure" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-175">当某个条件导致 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的数据绑定失败时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-175">Occurs when a condition causes the data binding of a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to fail.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-176">导致失败的条件的一个示例是如果用户将<xref:Microsoft.Office.Tools.Excel.ListObject>控件拖到另一个<xref:Microsoft.Office.Tools.Excel.ListObject>控件中的放置位置。</span><span class="sxs-lookup"><span data-stu-id="9fc29-176">An example of a condition that causes failure is if a user drops a <xref:Microsoft.Office.Tools.Excel.ListObject> control onto another <xref:Microsoft.Office.Tools.Excel.ListObject> control that is already in the drop location.</span></span> <span data-ttu-id="9fc29-177">新控件的数据绑定失败，并且该控件会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-177">The new control's data binding fails and the control raises this event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-178">下面的代码示例将创建<xref:Microsoft.Office.Tools.Excel.ListObject>，并将添加的事件处理程序<xref:Microsoft.Office.Tools.Excel.ListObject.DataBindingFailure>事件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-178">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> and adds an event handler for the <xref:Microsoft.Office.Tools.Excel.ListObject.DataBindingFailure> event.</span></span> <span data-ttu-id="9fc29-179">如果列表 1 绑定到数据源，然后绑定失败，该事件将捕获并显示绑定的状态显示一条消息。</span><span class="sxs-lookup"><span data-stu-id="9fc29-179">If list1 is bound to a data source and then the binding fails, the event is caught and a message appears showing the state of the binding.</span></span>  
  
 <span data-ttu-id="9fc29-180">此版本是文档级自定义项。</span><span class="sxs-lookup"><span data-stu-id="9fc29-180">This version is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#14](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#14)]
 [!code-vb[Trin_ExcelListObject#14](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#14)]  
  
 <span data-ttu-id="9fc29-181">此版本用于针对应用程序级外接程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-181">This version is for an application-level add-in.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject_AppLevelAddIn#14](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/CS/ThisAddIn.cs#14)]
 [!code-vb[Trin_ExcelListObject_AppLevelAddIn#14](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/VB/ThisAddIn.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBodyRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DataBodyRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DataBodyRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.DataBodyRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-182">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" />，它表示包含标题行和插入行之间列表中数据区域的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-182">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range that contains the data area in the list between the header row and the insert row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-183">一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" />，表示包含标题行和插入行之间列表中数据区域的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-183">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range that contains the data area in the list between the header row and the insert row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-184">如果<xref:Microsoft.Office.Tools.Excel.ListObject>控件不具有<xref:Microsoft.Office.Tools.Excel.ListObject.DataBodyRange%2A>，此属性返回`null`。</span><span class="sxs-lookup"><span data-stu-id="9fc29-184">If the <xref:Microsoft.Office.Tools.Excel.ListObject> control does not have a <xref:Microsoft.Office.Tools.Excel.ListObject.DataBodyRange%2A>, this property returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-185">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.ListObject>然后显示可用于数据的行数。</span><span class="sxs-lookup"><span data-stu-id="9fc29-185">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> and then shows the number of rows that are available for data.</span></span>  
  
 <span data-ttu-id="9fc29-186">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-186">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#15](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#15)]
 [!code-vb[Trin_ExcelListObject#15](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBoundFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlRangeAutoFormat DataBoundFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlRangeAutoFormat DataBoundFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlRangeAutoFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-187">获取或设置数据绑定 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的格式样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-187">Gets or sets the format style for data-bound <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-188">
            <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-188">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-189"><xref:Microsoft.Office.Tools.Excel.ListObject>控件必须绑定到数据，然后才能使用此属性。</span><span class="sxs-lookup"><span data-stu-id="9fc29-189">The <xref:Microsoft.Office.Tools.Excel.ListObject> control must be bound to data before you can use this property.</span></span>  
  
 <span data-ttu-id="9fc29-190">指定的格式应用于整个列表对象，包括更高版本添加的行。</span><span class="sxs-lookup"><span data-stu-id="9fc29-190">The specified format is applied to the entire list object, including rows that are added later.</span></span>  
  
 <span data-ttu-id="9fc29-191">若要删除格式设置，请设置<xref:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormat%2A>到<xref:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatNone>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-191">To remove formatting, set <xref:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormat%2A> to <xref:Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatNone>.</span></span>  
  
 <span data-ttu-id="9fc29-192">使用<xref:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormatSettings%2A>来排除特定类型的格式如模式、 字体或样式中的宽度。</span><span class="sxs-lookup"><span data-stu-id="9fc29-192">Use <xref:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormatSettings%2A> to exclude specific types of formatting such as pattern, font, or width from the style.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-193">下面的代码示例将创建<xref:System.Data.DataTable>和一个<xref:Microsoft.Office.Tools.Excel.ListObject>，并将绑定<xref:Microsoft.Office.Tools.Excel.ListObject>到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-193">The following code example creates a <xref:System.Data.DataTable> and a <xref:Microsoft.Office.Tools.Excel.ListObject>, and binds the <xref:Microsoft.Office.Tools.Excel.ListObject> to the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9fc29-194">然后，它使用<xref:Microsoft.Office.Interop.Excel.XlRangeAutoFormat>要设置格式值<xref:Microsoft.Office.Tools.Excel.ListObject>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-194">It then uses an <xref:Microsoft.Office.Interop.Excel.XlRangeAutoFormat> value to format the <xref:Microsoft.Office.Tools.Excel.ListObject>.</span></span>  
  
 <span data-ttu-id="9fc29-195">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-195">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#16](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#16)]
 [!code-vb[Trin_ExcelListObject#16](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBoundFormatSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Tools.Excel.FormatSettings DataBoundFormatSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Tools.Excel.FormatSettings DataBoundFormatSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormatSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.FormatSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-196">获取或设置要向 <see cref="T:Microsoft.Office.Tools.Excel.FormatSettings" /> 控件应用指定 <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" /> 的哪个 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-196">Gets or sets which <see cref="T:Microsoft.Office.Tools.Excel.FormatSettings" /> of the specified <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" /> are applied to the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-197">
            <see cref="T:Microsoft.Office.Tools.Excel.FormatSettings" /> 值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-197">A bitwise combination of the <see cref="T:Microsoft.Office.Tools.Excel.FormatSettings" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-198">默认情况下中的信息的所有<xref:Microsoft.Office.Interop.Excel.XlRangeAutoFormat>应用样式。</span><span class="sxs-lookup"><span data-stu-id="9fc29-198">By default, all of the information in the <xref:Microsoft.Office.Interop.Excel.XlRangeAutoFormat> style is applied.</span></span> <span data-ttu-id="9fc29-199">但是，以便此样式不应用于这些项，则可以删除特定项。</span><span class="sxs-lookup"><span data-stu-id="9fc29-199">However, specific items can be removed so that the style is not applied to those items.</span></span> <span data-ttu-id="9fc29-200">这些项是：</span><span class="sxs-lookup"><span data-stu-id="9fc29-200">These items are:</span></span>  
  
-   <span data-ttu-id="9fc29-201">数字</span><span class="sxs-lookup"><span data-stu-id="9fc29-201">Number</span></span>  
  
-   <span data-ttu-id="9fc29-202">字体</span><span class="sxs-lookup"><span data-stu-id="9fc29-202">Font</span></span>  
  
-   <span data-ttu-id="9fc29-203">对齐方式</span><span class="sxs-lookup"><span data-stu-id="9fc29-203">Alignment</span></span>  
  
-   <span data-ttu-id="9fc29-204">Border</span><span class="sxs-lookup"><span data-stu-id="9fc29-204">Border</span></span>  
  
-   <span data-ttu-id="9fc29-205">模式</span><span class="sxs-lookup"><span data-stu-id="9fc29-205">Pattern</span></span>  
  
-   <span data-ttu-id="9fc29-206">宽度</span><span class="sxs-lookup"><span data-stu-id="9fc29-206">Width</span></span>  
  
 <span data-ttu-id="9fc29-207">若要将应用仅选择样式，请设置<xref:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormatSettings%2A>之前<xref:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormat%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="9fc29-207">To apply only selected styles, set <xref:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormatSettings%2A> before the <xref:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormat%2A> property is set.</span></span> <span data-ttu-id="9fc29-208"><xref:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormatSettings%2A> 如果将无法工作<xref:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormat%2A>已设置。</span><span class="sxs-lookup"><span data-stu-id="9fc29-208"><xref:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormatSettings%2A> will not work if <xref:Microsoft.Office.Tools.Excel.ListObject.DataBoundFormat%2A> is already set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-209">下面的代码示例将创建<xref:System.Data.DataTable>和一个<xref:Microsoft.Office.Tools.Excel.ListObject>，并将绑定<xref:Microsoft.Office.Tools.Excel.ListObject>到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-209">The following code example creates a <xref:System.Data.DataTable> and a <xref:Microsoft.Office.Tools.Excel.ListObject>, and binds the <xref:Microsoft.Office.Tools.Excel.ListObject> to the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9fc29-210">然后，它设置<xref:Microsoft.Office.Tools.Excel.FormatSettings>要应用于<xref:Microsoft.Office.Tools.Excel.ListObject>，并使用<xref:Microsoft.Office.Interop.Excel.XlRangeAutoFormat>提供该格式的值。</span><span class="sxs-lookup"><span data-stu-id="9fc29-210">It then sets the <xref:Microsoft.Office.Tools.Excel.FormatSettings> to apply to the <xref:Microsoft.Office.Tools.Excel.ListObject> and uses an <xref:Microsoft.Office.Interop.Excel.XlRangeAutoFormat> value to supply the format.</span></span>  
  
 <span data-ttu-id="9fc29-211">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-211">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#17](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#17)]
 [!code-vb[Trin_ExcelListObject#17](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-212">获取或设置多成员数据源中要绑定到 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的特定数据成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-212">Gets or sets the specific data member in a multimember data source to bind to the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-213">多成员数据源中的数据成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-213">A data member from a multimember data source.</span>
          </span>
          <span data-ttu-id="9fc29-214">默认值为 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-214">The default value is <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-215">如果数据源具有只有一个成员，不需要。</span><span class="sxs-lookup"><span data-stu-id="9fc29-215">Not needed if the data source has only one member.</span></span>  
  
 <span data-ttu-id="9fc29-216">使用<xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A>属性来指定要绑定到从多成员数据源成员<xref:Microsoft.Office.Tools.Excel.ListObject>控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-216">Use the <xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A> property to specify a member from a multimember data source to bind to the <xref:Microsoft.Office.Tools.Excel.ListObject> control.</span></span> <span data-ttu-id="9fc29-217">例如，如果有多个表中指定的数据源<xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A>属性，请使用<xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A>属性来指定要绑定到的表<xref:Microsoft.Office.Tools.Excel.ListObject>控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-217">For example, if you have a data source with more than one table specified in the <xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A> property, use the <xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A> property to specify which table to bind to the <xref:Microsoft.Office.Tools.Excel.ListObject> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-218">下面的代码示例创建具有两个 <xref:System.Data.DataSet> 对象的 <xref:System.Data.DataTable> ，并使用数据填充其中一个表。</span><span class="sxs-lookup"><span data-stu-id="9fc29-218">The following code example creates a <xref:System.Data.DataSet> with two <xref:System.Data.DataTable> objects and populates one of the tables with data.</span></span> <span data-ttu-id="9fc29-219">代码随后设置<xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A>并<xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A>的属性<xref:Microsoft.Office.Tools.Excel.ListObject>要绑定到包含数据的表。</span><span class="sxs-lookup"><span data-stu-id="9fc29-219">The code then sets the <xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A> and <xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A> properties of the <xref:Microsoft.Office.Tools.Excel.ListObject> to bind to the table that contains data.</span></span>  
  
 <span data-ttu-id="9fc29-220">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-220">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#18](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#18)]
 [!code-vb[Trin_ExcelListObject#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataMemberChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ListObject.DataMemberChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-221">当 <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataMember" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-221">Occurs when the value of the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataMember" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-222">如果引发此事件<xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="9fc29-222">This event is raised if the <xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-223">获取或设置包含用于填充该控件中的项的值列表的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-223">Gets or sets the source that contains a list of values that are used to populate the items within the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-224">包含用于填充该控件中的项的值列表的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-224">The source that contains a list of values that are used to populate the items within the control.</span>
          </span>
          <span data-ttu-id="9fc29-225">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-225">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-226">在运行时，使用<xref:Microsoft.Office.Tools.Excel.ListObject.SetDataBinding%2A>方法以设置<xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A>和<xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9fc29-226">At run time, use the <xref:Microsoft.Office.Tools.Excel.ListObject.SetDataBinding%2A> method to set the <xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A> and <xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A> properties.</span></span>  
  
 <span data-ttu-id="9fc29-227">以下数据源是有效的：</span><span class="sxs-lookup"><span data-stu-id="9fc29-227">The following data sources are valid:</span></span>  
  
-   <span data-ttu-id="9fc29-228"><xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-228">A <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="9fc29-229"><xref:System.Data.DataView>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-229">A <xref:System.Data.DataView>.</span></span>  
  
-   <span data-ttu-id="9fc29-230"><xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-230">A <xref:System.Data.DataSet>.</span></span>  
  
-   <span data-ttu-id="9fc29-231"><xref:System.Data.DataViewManager>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-231">A <xref:System.Data.DataViewManager>.</span></span>  
  
-   <span data-ttu-id="9fc29-232">实现 <xref:System.ComponentModel.IListSource> 接口的任意组件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-232">Any component that implements the <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
-   <span data-ttu-id="9fc29-233">实现 <xref:System.Collections.IList> 接口的任意组件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-233">Any component that implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="9fc29-234">请参阅<xref:System.Windows.Forms.Binding>类概述的数据源的详细信息。</span><span class="sxs-lookup"><span data-stu-id="9fc29-234">See the <xref:System.Windows.Forms.Binding> class overview for more information on data sources.</span></span>  
  
 <span data-ttu-id="9fc29-235">如果<xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A>引用包含多个表或属性，则必须设置<xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A>属性设置为一个字符串，指定要绑定到的表。</span><span class="sxs-lookup"><span data-stu-id="9fc29-235">If the <xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A> reference contains more than one table or property, you must set the <xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A> property to a string that specifies the table to bind to.</span></span> <span data-ttu-id="9fc29-236">例如，如果<xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A>是<xref:System.Data.DataSet>或<xref:System.Data.DataViewManager>，其中包含名为客户、 订单和订单明细的三个表，必须指定要绑定到的表。</span><span class="sxs-lookup"><span data-stu-id="9fc29-236">For example, if the <xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A> is a <xref:System.Data.DataSet> or <xref:System.Data.DataViewManager> that contains three tables named Customers, Orders, and OrderDetails, you must specify the table to bind to.</span></span>  
  
 <span data-ttu-id="9fc29-237">设置<xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A>未实现的对象<xref:System.Collections.IList>接口或<xref:System.ComponentModel.IListSource>将导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="9fc29-237">Setting the <xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A> to an object that does not implement the <xref:System.Collections.IList> interface or an <xref:System.ComponentModel.IListSource> will cause an exception to be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-238">下面的代码示例创建具有两个 <xref:System.Data.DataSet> 对象的 <xref:System.Data.DataTable> ，并使用数据填充其中一个表。</span><span class="sxs-lookup"><span data-stu-id="9fc29-238">The following code example creates a <xref:System.Data.DataSet> with two <xref:System.Data.DataTable> objects and populates one of the tables with data.</span></span> <span data-ttu-id="9fc29-239">代码随后设置<xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A>并<xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A>的属性<xref:Microsoft.Office.Tools.Excel.ListObject>要绑定到包含数据的表。</span><span class="sxs-lookup"><span data-stu-id="9fc29-239">The code then sets the <xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A> and <xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A> properties of the <xref:Microsoft.Office.Tools.Excel.ListObject> to bind to the table that contains data.</span></span>  
  
 <span data-ttu-id="9fc29-240">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-240">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#18](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#18)]
 [!code-vb[Trin_ExcelListObject#18](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ListObject.DataSourceChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-241">当 <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataSource" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-241">Occurs when the value of the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataSource" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-242">如果引发此事件<xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="9fc29-242">This event is raised if the <xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDataSourceUpdateMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataSourceUpdateMode DefaultDataSourceUpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataSourceUpdateMode DefaultDataSourceUpdateMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.DefaultDataSourceUpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataSourceUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-243">获取或设置默认 <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-243">Gets or sets the default <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-244">
            <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-244">One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values.</span>
          </span>
          <span data-ttu-id="9fc29-245">默认值为 <see cref="F:System.Windows.Forms.DataSourceUpdateMode.Never" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-245">The default is <see cref="F:System.Windows.Forms.DataSourceUpdateMode.Never" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-246">此属性可在情况下，<xref:System.Windows.Forms.Binding>而无需<xref:System.Windows.Forms.Binding.DataSourceUpdateMode%2A>指定值添加到<xref:System.Windows.Forms.IBindableComponent.DataBindings%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="9fc29-246">This property is used in cases where a <xref:System.Windows.Forms.Binding> without a <xref:System.Windows.Forms.Binding.DataSourceUpdateMode%2A> value specified is added to the <xref:System.Windows.Forms.IBindableComponent.DataBindings%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.Delete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-247">删除动态创建的 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件，清除工作表中的单元格数据，并将该控件从 <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" /> 中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-247">Deletes a dynamically created <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control, clears the cell data from the worksheet, and removes the control from the <see cref="T:Microsoft.Office.Tools.Excel.ControlCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-248">此方法只应该用于<xref:Microsoft.Office.Tools.Excel.ListObject>在运行时以编程方式创建的控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-248">This method should only be used with a <xref:Microsoft.Office.Tools.Excel.ListObject> control that is created programmatically at run time.</span></span> <span data-ttu-id="9fc29-249">如果在调用此方法引发异常<xref:Microsoft.Office.Tools.Excel.ListObject>，在设计时添加到文档。</span><span class="sxs-lookup"><span data-stu-id="9fc29-249">An exception is thrown if you call this method on a <xref:Microsoft.Office.Tools.Excel.ListObject> that is added to the document at design time.</span></span>  
  
 <span data-ttu-id="9fc29-250">如果列表对象链接到 SharePoint 站点中，删除它不会影响运行 Windows SharePoint Services 服务器上的数据。</span><span class="sxs-lookup"><span data-stu-id="9fc29-250">If the list object is linked to a SharePoint site, deleting it does not affect data on the server that is running Windows SharePoint Services.</span></span> <span data-ttu-id="9fc29-251">对本地列表对象所做的任何未提交的更改不会发送到 SharePoint 列表。</span><span class="sxs-lookup"><span data-stu-id="9fc29-251">Any uncommitted changes made to the local list object are not sent to the SharePoint list.</span></span> <span data-ttu-id="9fc29-252">（没有任何警告，这些未提交的更改将丢失。）</span><span class="sxs-lookup"><span data-stu-id="9fc29-252">(There is no warning that these uncommitted changes are lost.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-253">下面的代码示例将创建<xref:Microsoft.Office.Tools.Excel.ListObject>在当前工作表，然后显示一个消息框，询问用户是否删除<xref:Microsoft.Office.Tools.Excel.ListObject>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-253">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> on the current worksheet and then displays a message box that asks the user whether to delete the <xref:Microsoft.Office.Tools.Excel.ListObject>.</span></span> <span data-ttu-id="9fc29-254">如果用户接受，则<xref:Microsoft.Office.Tools.Excel.ListObject.Delete%2A>调用方法来删除<xref:Microsoft.Office.Tools.Excel.ListObject>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-254">If the user accepts, then the <xref:Microsoft.Office.Tools.Excel.ListObject.Delete%2A> method is called to remove the <xref:Microsoft.Office.Tools.Excel.ListObject>.</span></span>  
  
 <span data-ttu-id="9fc29-255">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-255">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#3](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#3)]
 [!code-vb[Trin_ExcelListObject#3](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deselected">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler Deselected;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler Deselected" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ListObject.Deselected" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-256">当所选内容从 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件移到 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件外部时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-256">Occurs when selection moves from the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to outside of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-257">引发此事件时，才<xref:Microsoft.Office.Tools.Excel.ListObject>控件具有焦点，然后焦点传输离开<xref:Microsoft.Office.Tools.Excel.ListObject>控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-257">This event is raised only when the <xref:Microsoft.Office.Tools.Excel.ListObject> control has focus, and then focus is transferred away from the <xref:Microsoft.Office.Tools.Excel.ListObject> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-258">下面的代码示例将创建<xref:Microsoft.Office.Tools.Excel.ListObject>和一个<xref:Microsoft.Office.Tools.Excel.ListObject.Deselected>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-258">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> and a <xref:Microsoft.Office.Tools.Excel.ListObject.Deselected> event handler.</span></span> <span data-ttu-id="9fc29-259">当<xref:Microsoft.Office.Tools.Excel.ListObject>处于选中状态和外部的对象<xref:Microsoft.Office.Tools.Excel.ListObject>是选择，显示一条消息是，该值指示所选内容已更改。</span><span class="sxs-lookup"><span data-stu-id="9fc29-259">When the <xref:Microsoft.Office.Tools.Excel.ListObject> is selected and then an object outside of the <xref:Microsoft.Office.Tools.Excel.ListObject> is selected, a message is displayed that indicates that the selection has changed.</span></span>  
  
 <span data-ttu-id="9fc29-260">此版本是文档级自定义项。</span><span class="sxs-lookup"><span data-stu-id="9fc29-260">This version is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#19](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#19)]
 [!code-vb[Trin_ExcelListObject#19](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#19)]  
  
 <span data-ttu-id="9fc29-261">此版本用于针对应用程序级外接程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-261">This version is for an application-level add-in.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject_AppLevelAddIn#19](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/CS/ThisAddIn.cs#19)]
 [!code-vb[Trin_ExcelListObject_AppLevelAddIn#19](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/VB/ThisAddIn.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="public void Disconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Disconnect() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.Disconnect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-262">从 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件移除数据绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-262">Removes data binding from the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-263">此方法则断开<xref:Microsoft.Office.Tools.Excel.ListObject>控件从数据源，集<xref:Microsoft.Office.Tools.Excel.ListObject.IsBinding%2A>属性设置为 false，并重置<xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A>和<xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9fc29-263">This method disconnects the <xref:Microsoft.Office.Tools.Excel.ListObject> control from the data source, sets the <xref:Microsoft.Office.Tools.Excel.ListObject.IsBinding%2A> property to false, and resets the <xref:Microsoft.Office.Tools.Excel.ListObject.DataSource%2A> and <xref:Microsoft.Office.Tools.Excel.ListObject.DataMember%2A> properties.</span></span> <span data-ttu-id="9fc29-264">现有数据将保留在<xref:Microsoft.Office.Tools.Excel.ListObject>控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-264">Existing data remains in the <xref:Microsoft.Office.Tools.Excel.ListObject> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-265">获取或设置显示名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-265">Gets or sets the displayed name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-266">一个字符串，表示 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 的显示名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-266">A string that represents the display name of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool DisplayRightToLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.DisplayRightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-267">获取一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 是否从右向左（而非从左向右）显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-267">Gets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> is displayed from right to left instead of from left to right.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-268">如果 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 从右向左（而非从左向右）显示，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-268">
              <see langword="true" /> if the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> is displayed from right to left instead of from left to right; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorAddDataBoundRow">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Tools.Excel.ErrorAddDataBoundRowEventHandler ErrorAddDataBoundRow;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Excel.ErrorAddDataBoundRowEventHandler ErrorAddDataBoundRow" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ListObject.ErrorAddDataBoundRow" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.ErrorAddDataBoundRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-269">在用户尝试向数据绑定 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件添加行，但是该行无法添加时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-269">Occurs when a user tries to add a row to a data-bound <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control, but the row cannot be added.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-270">仅当引发此事件<xref:Microsoft.Office.Tools.Excel.ListObject>控件绑定到数据。</span><span class="sxs-lookup"><span data-stu-id="9fc29-270">This event is raised only if the <xref:Microsoft.Office.Tools.Excel.ListObject> control is bound to data.</span></span>  
  
 <span data-ttu-id="9fc29-271">处理此事件以尝试纠正可能出现的错误。</span><span class="sxs-lookup"><span data-stu-id="9fc29-271">Handle this event to attempt to correct possible errors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-272">下面的代码示例将创建<xref:System.Data.DataTable>和一个<xref:Microsoft.Office.Tools.Excel.ListObject>，并将绑定<xref:Microsoft.Office.Tools.Excel.ListObject>到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-272">The following code example creates a <xref:System.Data.DataTable> and a <xref:Microsoft.Office.Tools.Excel.ListObject>, and binds the <xref:Microsoft.Office.Tools.Excel.ListObject> to the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9fc29-273">然后，它创建<xref:Microsoft.Office.Tools.Excel.ListObject.ErrorAddDataBoundRow>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-273">It then creates an <xref:Microsoft.Office.Tools.Excel.ListObject.ErrorAddDataBoundRow> event handler.</span></span> <span data-ttu-id="9fc29-274">若要测试事件，请手动添加到一个新行<xref:Microsoft.Office.Tools.Excel.ListObject>并输入"更改"的姓氏和名字。</span><span class="sxs-lookup"><span data-stu-id="9fc29-274">To test the event, manually add a new row to the <xref:Microsoft.Office.Tools.Excel.ListObject> and enter the last name "Chan" and a first name.</span></span> <span data-ttu-id="9fc29-275">事件处理程序会显示一条消息。</span><span class="sxs-lookup"><span data-stu-id="9fc29-275">The event handler displays a message.</span></span>  
  
 <span data-ttu-id="9fc29-276">此版本是文档级自定义项。</span><span class="sxs-lookup"><span data-stu-id="9fc29-276">This version is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#20](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#20)]
 [!code-vb[Trin_ExcelListObject#20](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#20)]  
  
 <span data-ttu-id="9fc29-277">此版本用于针对应用程序级外接程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-277">This version is for an application-level add-in.</span></span> <span data-ttu-id="9fc29-278">若要使用此代码示例，请添加`using System.Data;`指令，如果使用的 C# 或`Imports System.Data`语句，如果使用的 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="9fc29-278">To use this code example, add the `using System.Data;` directive if you are using C# or the `Imports System.Data` statement if you are using Visual Basic.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject_AppLevelAddIn#20](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/CS/ThisAddIn.cs#20)]
 [!code-vb[Trin_ExcelListObject_AppLevelAddIn#20](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/VB/ThisAddIn.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportToVisio">
      <MemberSignature Language="C#" Value="public void ExportToVisio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportToVisio() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.ExportToVisio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-279">将 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 导出到 Visio。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-279">Exports a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> to Visio.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderRowRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range HeaderRowRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range HeaderRowRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.HeaderRowRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-280">获取一个表示标题行范围的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-280">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range of the header row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-281">一个表示标题行范围的 <see cref="T:Microsoft.Office.Interop.Excel.Range" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-281">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range of the header row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-282">如果没有标头行，<xref:Microsoft.Office.Tools.Excel.ListObject.HeaderRowRange%2A>返回`null`。</span><span class="sxs-lookup"><span data-stu-id="9fc29-282">If there is no header row, <xref:Microsoft.Office.Tools.Excel.ListObject.HeaderRowRange%2A> returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-283">下面的代码示例将创建<xref:System.Data.DataTable>和一个<xref:Microsoft.Office.Tools.Excel.ListObject>，并将绑定<xref:Microsoft.Office.Tools.Excel.ListObject>到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-283">The following code example creates a <xref:System.Data.DataTable> and a <xref:Microsoft.Office.Tools.Excel.ListObject>, and binds the <xref:Microsoft.Office.Tools.Excel.ListObject> to the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9fc29-284">然后获取包含标头行，并且更改将标头行的字体为粗体的范围。</span><span class="sxs-lookup"><span data-stu-id="9fc29-284">It then gets the range that contains the header row and changes the header row font to bold.</span></span>  
  
 <span data-ttu-id="9fc29-285">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-285">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#21](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#21)]
 [!code-vb[Trin_ExcelListObject#21](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject InnerObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject InnerObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.InnerObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-286">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.ListObject" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 的基础本机对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-286">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-287">一个 <see cref="T:Microsoft.Office.Interop.Excel.ListObject" />，表示 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 的基础本机对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-287">A <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> that represents the underlying native object for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range InsertRowRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range InsertRowRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.InsertRowRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-288">获取一个表示 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 控件的插入行（如果有的话）的 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-288">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the Insert row, if any, of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-289">一个表示 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 控件的插入行（如果有的话）的 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-289">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the Insert row, if any, of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-290">如果没有插入行，<xref:Microsoft.Office.Tools.Excel.ListObject.InsertRowRange%2A>返回`null`。</span><span class="sxs-lookup"><span data-stu-id="9fc29-290">If there is no Insert row, <xref:Microsoft.Office.Tools.Excel.ListObject.InsertRowRange%2A> returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-291">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.ListObject>，获取包含插入行，然后显示一条消息，显示多少的单元格插入行的范围包含。</span><span class="sxs-lookup"><span data-stu-id="9fc29-291">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject>, gets the range that contains the Insert row, and then displays a message showing how many cells the Insert row contains.</span></span>  
  
 <span data-ttu-id="9fc29-292">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-292">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#22](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#22)]
 [!code-vb[Trin_ExcelListObject#22](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBinding">
      <MemberSignature Language="C#" Value="public bool IsBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.IsBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-293">获取一个值，该值指示数据绑定功能是否处于活动状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-293">Gets a value that indicates whether data binding is active.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-294">如果数据绑定功能处于活动状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-294">
              <see langword="true" /> if data binding is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-295">满足这些条件时，绑定处于活动状态： 所有属性均都设置、 用户未调用<xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A>或<xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A>上<xref:System.Windows.Forms.BindingManagerBase>的<xref:System.Windows.Forms.Binding>所属，以及对其控制<xref:System.Windows.Forms.Binding>所属已创建。</span><span class="sxs-lookup"><span data-stu-id="9fc29-295">A binding is active when it meets these conditions: all its properties are set, the user did not call <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> or <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> on the <xref:System.Windows.Forms.BindingManagerBase> that the <xref:System.Windows.Forms.Binding> belongs to, and the control to which the <xref:System.Windows.Forms.Binding> belongs has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.IsSelected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-296">获取一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 是否处于选定状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-296">Gets a value that indicates whether the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> is selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-297">如果 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 处于选定状态，或者包括 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 一部分的任何范围处于选定状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-297">
              <see langword="true" /> if the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> is selected, or if any range that includes part of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> is selected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListColumns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListColumns ListColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListColumns ListColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.ListColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListColumns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-298">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.ListColumns" /> 集合，该集合表示 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件中的所有列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-298">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ListColumns" /> collection that represents all the columns in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-299">一个 <see cref="T:Microsoft.Office.Interop.Excel.ListColumns" /> 集合，表示 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件中的所有列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-299">A <see cref="T:Microsoft.Office.Interop.Excel.ListColumns" /> collection that represents all the columns in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-300">要从此集合中删除任何项，请勿使用`Delete`项的方法。</span><span class="sxs-lookup"><span data-stu-id="9fc29-300">To delete any items from this collection, do not use the `Delete` method of the item.</span></span> <span data-ttu-id="9fc29-301">使用`Delete`要删除的项; 的项范围的方法为例`ListColumns.Item(1).Range.Delete()`。</span><span class="sxs-lookup"><span data-stu-id="9fc29-301">Use the `Delete` method of the range of the item to delete the item; for example `ListColumns.Item(1).Range.Delete()`.</span></span> <span data-ttu-id="9fc29-302">请注意，不能删除的列<xref:Microsoft.Office.Tools.Excel.ListObject>绑定到数据源的控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-302">Note that you cannot delete columns of a <xref:Microsoft.Office.Tools.Excel.ListObject> control that are bound to a data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-303">下面的代码示例将创建<xref:Microsoft.Office.Tools.Excel.ListObject>，获取列的集合，然后显示一条消息，显示列数<xref:Microsoft.Office.Tools.Excel.ListObject>包含。</span><span class="sxs-lookup"><span data-stu-id="9fc29-303">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject>, gets the collection of columns, and then displays a message showing how many columns the <xref:Microsoft.Office.Tools.Excel.ListObject> contains.</span></span>  
  
 <span data-ttu-id="9fc29-304">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-304">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#23](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#23)]
 [!code-vb[Trin_ExcelListObject#23](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListRows ListRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListRows ListRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.ListRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListRows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-305">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.ListRows" /> 对象，该对象表示 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件中的所有数据行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-305">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ListRows" /> object that represents all the rows of data in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-306">一个 <see cref="T:Microsoft.Office.Interop.Excel.ListRows" /> 对象，表示 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件中的所有数据行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-306">A <see cref="T:Microsoft.Office.Interop.Excel.ListRows" /> object that represents all the rows of data in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-307"><xref:Microsoft.Office.Interop.Excel.ListRows>返回的对象不包含标头，总计行或插入行。</span><span class="sxs-lookup"><span data-stu-id="9fc29-307">The <xref:Microsoft.Office.Interop.Excel.ListRows> object returned does not include the header, Total, or Insert rows.</span></span>  
  
 <span data-ttu-id="9fc29-308">要从此集合中删除任何项，请勿使用`Delete`项的方法。</span><span class="sxs-lookup"><span data-stu-id="9fc29-308">To delete any items from this collection, do not use the `Delete` method of the item.</span></span> <span data-ttu-id="9fc29-309">使用`Delete`要删除的项; 的项范围的方法为例`ListRows.Item(1).Range.Delete()`。</span><span class="sxs-lookup"><span data-stu-id="9fc29-309">Use the `Delete` method of the range of the item to delete the item; for example `ListRows.Item(1).Range.Delete()`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-310">下面的代码示例将创建<xref:Microsoft.Office.Tools.Excel.ListObject>，获取行的集合，然后显示一条消息，显示行数<xref:Microsoft.Office.Tools.Excel.ListObject>包含。</span><span class="sxs-lookup"><span data-stu-id="9fc29-310">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject>, gets the collection of rows, and then displays a message showing how many rows the <xref:Microsoft.Office.Tools.Excel.ListObject> contains.</span></span>  
  
 <span data-ttu-id="9fc29-311">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-311">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#24](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#24)]
 [!code-vb[Trin_ExcelListObject#24](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MappedColumns">
      <MemberSignature Language="C#" Value="public string[] MappedColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MappedColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.MappedColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-312">获取或设置 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-312">Gets or sets the name of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-313">
            <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-313">The name of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-314">此名称仅用作的唯一标识符<xref:Microsoft.Office.Interop.Excel.ListObjects.Item%2A?displayProperty=fullName>属性的<xref:Microsoft.Office.Interop.Excel.ListObjects?displayProperty=fullName>集合。</span><span class="sxs-lookup"><span data-stu-id="9fc29-314">This name is used solely as a unique identifier for the <xref:Microsoft.Office.Interop.Excel.ListObjects.Item%2A?displayProperty=fullName> property of the <xref:Microsoft.Office.Interop.Excel.ListObjects?displayProperty=fullName> collection.</span></span> <span data-ttu-id="9fc29-315">此属性只能通过对象模型进行设置。</span><span class="sxs-lookup"><span data-stu-id="9fc29-315">This property can only be set through the object model.</span></span>  
  
 <span data-ttu-id="9fc29-316">默认情况下，每个<xref:Microsoft.Office.Tools.Excel.ListObject>控件的名称以单词"列表"中后, 接一个数字 （无空格） 开始。</span><span class="sxs-lookup"><span data-stu-id="9fc29-316">By default, each <xref:Microsoft.Office.Tools.Excel.ListObject> control name begins with the word "List", followed by a number (no spaces).</span></span> <span data-ttu-id="9fc29-317">如果尝试设置<xref:Microsoft.Office.Tools.Excel.ListObject.Name%2A>属性设置为已由另一名称<xref:Microsoft.Office.Tools.Excel.ListObject>控件，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="9fc29-317">If an attempt is made to set the <xref:Microsoft.Office.Tools.Excel.ListObject.Name%2A> property to a name already used by another <xref:Microsoft.Office.Tools.Excel.ListObject> control, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-318">下面的代码示例将创建<xref:Microsoft.Office.Tools.Excel.ListObject>在当前工作表，然后使用<xref:Microsoft.Office.Tools.Excel.ListObject.Name%2A>属性的名称设置<xref:Microsoft.Office.Tools.Excel.ListObject>到的"Employees"。</span><span class="sxs-lookup"><span data-stu-id="9fc29-318">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> in the current worksheet and then uses the <xref:Microsoft.Office.Tools.Excel.ListObject.Name%2A> property to set the name of the <xref:Microsoft.Office.Tools.Excel.ListObject> to "Employees".</span></span>  
  
 <span data-ttu-id="9fc29-319">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-319">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#1](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#1)]
 [!code-vb[Trin_ExcelListObject#1](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalDataRestored">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Tools.Excel.OriginalDataRestoredEventHandler OriginalDataRestored;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Tools.Excel.OriginalDataRestoredEventHandler OriginalDataRestored" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ListObject.OriginalDataRestored" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Tools.Excel.OriginalDataRestoredEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-320">在用户执行被禁止的操作时发生，<see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件随后会恢复回其原始状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-320">Occurs when a user performs an action that is not allowed, and the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control then reverts back to its original state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-321">将导致引发此事件的一个示例是操作的如果用户对更改数据是操作的只读的。</span><span class="sxs-lookup"><span data-stu-id="9fc29-321">An example of an action that would cause this event to be raised is if a user makes changes to data that is read-only.</span></span> <span data-ttu-id="9fc29-322"><xref:Microsoft.Office.Tools.Excel.ListObject>控件撤消所做的更改，并替换原始值。</span><span class="sxs-lookup"><span data-stu-id="9fc29-322">The <xref:Microsoft.Office.Tools.Excel.ListObject> control undoes the changes and replaces the original values.</span></span>  
  
 <span data-ttu-id="9fc29-323">此事件提供了一个包含内容已还原的枚举中的信息和原因。</span><span class="sxs-lookup"><span data-stu-id="9fc29-323">This event provides information in an enumeration that contains what was restored and why.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-324">下面的代码示例将创建<xref:System.Data.DataTable>和一个<xref:Microsoft.Office.Tools.Excel.ListObject>，并将绑定<xref:Microsoft.Office.Tools.Excel.ListObject>到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-324">The following code example creates a <xref:System.Data.DataTable> and a <xref:Microsoft.Office.Tools.Excel.ListObject>, and binds the <xref:Microsoft.Office.Tools.Excel.ListObject> to the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9fc29-325">然后，它创建<xref:Microsoft.Office.Tools.Excel.ListObject.OriginalDataRestored>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-325">It then creates an <xref:Microsoft.Office.Tools.Excel.ListObject.OriginalDataRestored> event handler.</span></span> <span data-ttu-id="9fc29-326">若要测试事件，请右键单击上方的列字母<xref:Microsoft.Office.Tools.Excel.ListObject>在工作表 1，然后单击**删除**的快捷菜单中。</span><span class="sxs-lookup"><span data-stu-id="9fc29-326">To test the event, right-click a column letter above the <xref:Microsoft.Office.Tools.Excel.ListObject> on sheet 1 and then click **Delete** in the shortcut menu.</span></span> <span data-ttu-id="9fc29-327">事件处理程序替换的列和列标题数据，并显示每个操作的消息。</span><span class="sxs-lookup"><span data-stu-id="9fc29-327">The event handler replaces the column and column header data and displays a message for each action.</span></span>  
  
 <span data-ttu-id="9fc29-328">此版本是文档级自定义项。</span><span class="sxs-lookup"><span data-stu-id="9fc29-328">This version is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#25](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#25)]
 [!code-vb[Trin_ExcelListObject#25](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#25)]  
  
 <span data-ttu-id="9fc29-329">此版本用于针对应用程序级外接程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-329">This version is for an application-level add-in.</span></span> <span data-ttu-id="9fc29-330">若要使用此代码示例，请添加`using System.Data;`指令，如果使用的 C# 或`Imports System.Data`语句，如果使用的 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="9fc29-330">To use this code example, add the `using System.Data;` directive if you are using C# or the `Imports System.Data` statement if you are using Visual Basic.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject_AppLevelAddIn#25](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/CS/ThisAddIn.cs#25)]
 [!code-vb[Trin_ExcelListObject_AppLevelAddIn#25](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/VB/ThisAddIn.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-331">获取 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的父对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-331">Gets the parent object of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-332">
            <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的父对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-332">The parent object of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9fc29-333">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.ListObject>，然后在消息中显示其父对象的名称。</span><span class="sxs-lookup"><span data-stu-id="9fc29-333">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> and then displays the name of its parent object in a message.</span></span>  
  
 <span data-ttu-id="9fc29-334">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-334">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#26](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#26)]
 [!code-vb[Trin_ExcelListObject#26](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Publish">
      <MemberSignature Language="C#" Value="public string Publish (object Target, bool LinkSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Publish(object Target, bool LinkSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.Publish(System.Object,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Target" Type="System.Object" />
        <Parameter Name="LinkSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Target">
          <span data-ttu-id="9fc29-335">包含字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-335">Contains an array of strings.</span>
          </span>
          <span data-ttu-id="9fc29-336">下表描述了此数组的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-336">The following table describes the elements of this array.</span>
          </span>
          <span data-ttu-id="9fc29-337">[1|1] 元素 #</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-337">[1|1] Element#</span>
          </span>
          <span data-ttu-id="9fc29-338">[1|2] 内容</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-338">[1|2] Contents</span>
          </span>
          <span data-ttu-id="9fc29-339">[2|1] 0</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-339">[2|1] 0</span>
          </span>
          <span data-ttu-id="9fc29-340">[2|2] SharePoint 服务器的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-340">[2|2] URL of SharePoint server.</span>
          </span>
          <span data-ttu-id="9fc29-341">[3|1] 1</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-341">[3|1] 1</span>
          </span>
          <span data-ttu-id="9fc29-342">[3|2] ListName（显示名称）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-342">[3|2] ListName (Display Name).</span>
          </span>
          <span data-ttu-id="9fc29-343">[4|1] 2</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-343">[4|1] 2</span>
          </span>
          <span data-ttu-id="9fc29-344">[4|2] 列表的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-344">[4|2] Description of the list.</span>
          </span>
        </param>
        <param name="LinkSource">
          <span data-ttu-id="9fc29-345">布尔值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-345">Boolean.</span>
          </span>
          <span data-ttu-id="9fc29-346">（请参见“备注”部分。）</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-346">(See Remarks section.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fc29-347">将 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件发布到运行 Microsoft Windows SharePoint Services 的服务器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-347">Publishes the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to a server that is running Microsoft Windows SharePoint Services.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fc29-348">SharePoint 站点上已发布列表的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-348">The URL of the published list on the SharePoint site.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-349">如果<xref:Microsoft.Office.Tools.Excel.ListObject>控制当前未链接到 SharePoint 站点上，设置列表`LinkSource`到`true`将指定的 SharePoint 站点上创建一个新列表。</span><span class="sxs-lookup"><span data-stu-id="9fc29-349">If the <xref:Microsoft.Office.Tools.Excel.ListObject> control is not currently linked to a list on a SharePoint site, setting `LinkSource` to `true` will create a new list on the specified SharePoint site.</span></span> <span data-ttu-id="9fc29-350">如果<xref:Microsoft.Office.Tools.Excel.ListObject>控件当前已链接到 SharePoint 站点，则设置`LinkSource`参数`true`将替换现有的链接 （只能将链接列表到一个 SharePoint 站点）。</span><span class="sxs-lookup"><span data-stu-id="9fc29-350">If the <xref:Microsoft.Office.Tools.Excel.ListObject> control is currently linked to a SharePoint site, setting the `LinkSource` argument to `true` will replace the existing link (you can only link the list to one SharePoint site).</span></span> <span data-ttu-id="9fc29-351">如果<xref:Microsoft.Office.Tools.Excel.ListObject>控制当前未链接，设置`LinkSource`到`false`将保留<xref:Microsoft.Office.Tools.Excel.ListObject>已取消链接控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-351">If the <xref:Microsoft.Office.Tools.Excel.ListObject> control is not currently linked, setting `LinkSource` to `false` will leave the <xref:Microsoft.Office.Tools.Excel.ListObject> control unlinked.</span></span> <span data-ttu-id="9fc29-352">如果<xref:Microsoft.Office.Tools.Excel.ListObject>控件当前已链接到 SharePoint 站点，则设置`LinkSource`到`false`将保留<xref:Microsoft.Office.Tools.Excel.ListObject>控件链接到当前的 SharePoint 站点。</span><span class="sxs-lookup"><span data-stu-id="9fc29-352">If the <xref:Microsoft.Office.Tools.Excel.ListObject> control is currently linked to a SharePoint site, setting `LinkSource` to `false` will keep the <xref:Microsoft.Office.Tools.Excel.ListObject> control linked to the current SharePoint site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-353">下面的代码示例将创建<xref:Microsoft.Office.Tools.Excel.ListObject>在当前工作表，然后调用<xref:Microsoft.Office.Tools.Excel.ListObject.Publish%2A>方法来发布<xref:Microsoft.Office.Tools.Excel.ListObject>到运行 Microsoft Windows SharePoint Services 的网站。</span><span class="sxs-lookup"><span data-stu-id="9fc29-353">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> on the current worksheet and then calls the <xref:Microsoft.Office.Tools.Excel.ListObject.Publish%2A> method to publish the <xref:Microsoft.Office.Tools.Excel.ListObject> to a Web site that is running Microsoft Windows SharePoint Services.</span></span> <span data-ttu-id="9fc29-354">此示例假定`SharePointURL`参数标识一个运行 Microsoft Windows SharePoint Services 网站的有效 URL。</span><span class="sxs-lookup"><span data-stu-id="9fc29-354">This example assumes that the `SharePointURL` parameter identifies a valid URL to a Web site running Microsoft Windows SharePoint Services.</span></span>  
  
 <span data-ttu-id="9fc29-355">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-355">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#4](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#4)]
 [!code-vb[Trin_ExcelListObject#4](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTable QueryTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTable QueryTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.QueryTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-356">获取 <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />，它为 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件提供指向列表服务器的链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-356">Gets the <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> that provides a link for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to the list server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-357">
            <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" />，为 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件提供指向列表服务器的链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-357">The <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> that provides a link for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to the list server.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9fc29-358">下面的代码示例使用<xref:Microsoft.Office.Tools.Excel.ListObject.QueryTable%2A>属性来刷新相交的查询表<xref:Microsoft.Office.Tools.Excel.ListObject>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-358">The following code example uses the <xref:Microsoft.Office.Tools.Excel.ListObject.QueryTable%2A> property to refresh the query table that intersects a <xref:Microsoft.Office.Tools.Excel.ListObject>.</span></span> <span data-ttu-id="9fc29-359">此代码示例假定当前工作表包含<xref:Microsoft.Office.Tools.Excel.ListObject>名为`customerListObject`查询表与相交。</span><span class="sxs-lookup"><span data-stu-id="9fc29-359">This code example assumes that the current worksheet contains a <xref:Microsoft.Office.Tools.Excel.ListObject> named `customerListObject` that is intersected by a query table.</span></span>  
  
 <span data-ttu-id="9fc29-360">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-360">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#27](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#27)]
 [!code-vb[Trin_ExcelListObject#27](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.Range" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-361">获取一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" />，表示要应用 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-361">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range to which the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> applies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-362">一个 <see cref="T:Microsoft.Office.Interop.Excel.Range" />，表示要应用 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-362">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the range to which the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> applies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-363">如果显示，包括标头、 插入行和总计行。</span><span class="sxs-lookup"><span data-stu-id="9fc29-363">Includes the header, Insert row and Totals row if displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-364">下面的代码示例将创建<xref:Microsoft.Office.Tools.Excel.ListObject>，然后显示一条消息显示到其中的范围中有多少个单元格<xref:Microsoft.Office.Tools.Excel.ListObject>适用。</span><span class="sxs-lookup"><span data-stu-id="9fc29-364">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> and then displays a message showing how many cells are in the range to which the <xref:Microsoft.Office.Tools.Excel.ListObject> applies.</span></span>  
  
 <span data-ttu-id="9fc29-365">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-365">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#28](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#28)]
 [!code-vb[Trin_ExcelListObject#28](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.Refresh" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-366">用运行 Microsoft Windows SharePoint Services 的服务器上的当前数据和架构更新 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-366">Updates the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control with current data and schema from a server that is running Microsoft Windows SharePoint Services.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-367">此方法可仅与<xref:Microsoft.Office.Tools.Excel.ListObject>都链接到 SharePoint 站点的控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-367">This method can be used only with <xref:Microsoft.Office.Tools.Excel.ListObject> controls that are linked to a SharePoint site.</span></span> <span data-ttu-id="9fc29-368">如果 SharePoint 站点不可用，则调用此方法将导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="9fc29-368">If the SharePoint site is not available, calling this method will cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="9fc29-369">调用此方法不会提交对更改<xref:Microsoft.Office.Tools.Excel.ListObject>Excel 工作簿中。</span><span class="sxs-lookup"><span data-stu-id="9fc29-369">Calling this method does not commit changes to the <xref:Microsoft.Office.Tools.Excel.ListObject> in the Excel workbook.</span></span> <span data-ttu-id="9fc29-370">在 Excel 中的列表对象中未提交的更改将被丢弃时<xref:Microsoft.Office.Tools.Excel.ListObject.Refresh%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="9fc29-370">Uncommitted changes in the list object in Excel are discarded when the <xref:Microsoft.Office.Tools.Excel.ListObject.Refresh%2A> method is called.</span></span> <span data-ttu-id="9fc29-371">若要避免丢失任何未提交的更改，请调用<xref:Microsoft.Office.Tools.Excel.ListObject.UpdateChanges%2A>方法<xref:Microsoft.Office.Tools.Excel.ListObject>控件之前调用<xref:Microsoft.Office.Tools.Excel.ListObject.Refresh%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9fc29-371">To avoid losing any uncommitted changes, call the <xref:Microsoft.Office.Tools.Excel.ListObject.UpdateChanges%2A> method of the <xref:Microsoft.Office.Tools.Excel.ListObject> control before calling the <xref:Microsoft.Office.Tools.Excel.ListObject.Refresh%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDataRow">
      <MemberSignature Language="C#" Value="public void RefreshDataRow (int dataRowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshDataRow(int32 dataRowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.RefreshDataRow(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataRowIndex">
          <span data-ttu-id="9fc29-372">数据源中数据行的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-372">The index of the data row in the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fc29-373">更新与指定数据行关联的 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 数据行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-373">Updates the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> data row that is associated with the specified data row.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-374">此方法不会发送到中的数据所做的更改<xref:Microsoft.Office.Tools.Excel.ListObject>返回到数据源中; 它仅获取信息。</span><span class="sxs-lookup"><span data-stu-id="9fc29-374">This method does not send changes that were made to the data in the <xref:Microsoft.Office.Tools.Excel.ListObject> back to the data source; it only gets information.</span></span>  
  
 <span data-ttu-id="9fc29-375">如果此数据对象不会引发通知事件数据发生更改时，例如，如果创建一个类来保存数据，但不是包括事件以通知的更改的侦听器，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="9fc29-375">Use this method if the data object does not raise a notification event when the data changes, for example, if you create a class to hold data but do not include an event to notify listeners of changes.</span></span> <span data-ttu-id="9fc29-376">如果此数据对象不会引发一个事件，<xref:Microsoft.Office.Tools.Excel.ListObject>不会自动更新。</span><span class="sxs-lookup"><span data-stu-id="9fc29-376">If the data object does not raise an event, the <xref:Microsoft.Office.Tools.Excel.ListObject> is not updated automatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDataRows">
      <MemberSignature Language="C#" Value="public void RefreshDataRows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshDataRows() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.RefreshDataRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-377">使用数据源中的数据更新 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 中的所有行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-377">Updates all of the rows in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> with data from the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-378">此方法不会发送到中的数据所做的更改<xref:Microsoft.Office.Tools.Excel.ListObject>返回到数据源中; 它仅获取信息。</span><span class="sxs-lookup"><span data-stu-id="9fc29-378">This method does not send changes that were made to the data in the <xref:Microsoft.Office.Tools.Excel.ListObject> back to the data source; it only gets information.</span></span>  
  
 <span data-ttu-id="9fc29-379">如果此数据对象不会引发通知事件数据发生更改时，例如，如果创建一个类来保存数据，但不是包括事件以通知的更改的侦听器，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="9fc29-379">Use this method if the data object does not raise a notification event when the data changes, for example, if you create a class to hold data but do not include an event to notify listeners of changes.</span></span> <span data-ttu-id="9fc29-380">如果此数据对象不会引发一个事件，<xref:Microsoft.Office.Tools.Excel.ListObject>不会自动更新。</span><span class="sxs-lookup"><span data-stu-id="9fc29-380">If the data object does not raise an event, the <xref:Microsoft.Office.Tools.Excel.ListObject> is not updated automatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPersistedBindingInformation">
      <MemberSignature Language="C#" Value="public void ResetPersistedBindingInformation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetPersistedBindingInformation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.ResetPersistedBindingInformation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-381">清除有关用户对 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件所做的更改的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-381">Clears information about changes made to the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control by the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-382">如果用户更改的列或行的顺序，在工作表中存储有关所做的更改的信息，以便<xref:Microsoft.Office.Tools.Excel.ListObject>控件是自定义配置在下次打开该工作表中。</span><span class="sxs-lookup"><span data-stu-id="9fc29-382">If the user changes the order of columns or rows, the information about that change is stored in the worksheet so that the <xref:Microsoft.Office.Tools.Excel.ListObject> control is in the custom configuration the next time the worksheet is opened.</span></span> <span data-ttu-id="9fc29-383"><xref:Microsoft.Office.Tools.Excel.ListObject.ResetPersistedBindingInformation%2A> 清除存储的信息，以便<xref:Microsoft.Office.Tools.Excel.ListObject>控件会出现在默认配置。</span><span class="sxs-lookup"><span data-stu-id="9fc29-383"><xref:Microsoft.Office.Tools.Excel.ListObject.ResetPersistedBindingInformation%2A> clears the stored information so that the <xref:Microsoft.Office.Tools.Excel.ListObject> control appears in the default configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public void Resize (Microsoft.Office.Interop.Excel.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resize(class Microsoft.Office.Interop.Excel.Range Range) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.Resize(Microsoft.Office.Interop.Excel.Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Range">
          <span data-ttu-id="9fc29-384">列表的新范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-384">The new range for the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fc29-385">允许在新范围上调整 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-385">Enables a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to be resized over a new range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-386">插入或移动此属性没有单元格。</span><span class="sxs-lookup"><span data-stu-id="9fc29-386">No cells are inserted or moved by this property.</span></span>  
  
 <span data-ttu-id="9fc29-387">标头必须保留在同一行中，并且生成的列表必须重叠的原始列表。</span><span class="sxs-lookup"><span data-stu-id="9fc29-387">The header must remain in the same row and the resulting list must overlap the original list.</span></span> <span data-ttu-id="9fc29-388">列表必须包含一个标题行和至少一个数据行。</span><span class="sxs-lookup"><span data-stu-id="9fc29-388">The list must contain a header row and at least one row of data.</span></span>  
  
 <span data-ttu-id="9fc29-389">有关链接到正在运行 Microsoft Windows SharePoint Services 的服务器的列表，您可以调整大小，从而使用此方法的列表`Range`参数不同于当前范围的<xref:Microsoft.Office.Tools.Excel.ListObject>仅在的行数中它包含。</span><span class="sxs-lookup"><span data-stu-id="9fc29-389">For lists that are linked to a server that is running Microsoft Windows SharePoint Services, you can resize the list using this method by providing a `Range` argument that differs from the current range of the <xref:Microsoft.Office.Tools.Excel.ListObject> only in the number of rows it contains.</span></span> <span data-ttu-id="9fc29-390">尝试重设列表大小链接到 Windows SharePoint Services 通过添加或删除列 (在`Range`参数) 会导致运行时错误。</span><span class="sxs-lookup"><span data-stu-id="9fc29-390">Attempting to resize lists linked to Windows SharePoint Services by adding or deleting columns (in the `Range` argument) results in a run-time error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-391">下面的代码示例将创建<xref:Microsoft.Office.Tools.Excel.ListObject>在当前工作表，然后调用<xref:Microsoft.Office.Tools.Excel.ListObject.Resize%2A>方法来增加的大小<xref:Microsoft.Office.Tools.Excel.ListObject>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-391">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> on the current worksheet and then calls the <xref:Microsoft.Office.Tools.Excel.ListObject.Resize%2A> method to increase the size of the <xref:Microsoft.Office.Tools.Excel.ListObject>.</span></span>  
  
 <span data-ttu-id="9fc29-392">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-392">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#5](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#5)]
 [!code-vb[Trin_ExcelListObject#5](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveSortOrder">
      <MemberSignature Language="C#" Value="public bool SaveSortOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSortOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.SaveSortOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-393">获取或设置一个值，该值指示 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的行顺序是否已保存到工作表中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-393">Gets or sets a value that indicates whether the row order of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control is saved in the worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-394">若要将行顺序保存到工作表中，请使用 <see langword="true" />；否则使用 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-394">
              <see langword="true" /> to save the row order in the worksheet; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9fc29-395">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-395">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-396">此属性仅适用于<xref:Microsoft.Office.Tools.Excel.ListObject>绑定到数据的控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-396">This property only applies to <xref:Microsoft.Office.Tools.Excel.ListObject> controls that are bound to data.</span></span>  
  
 <span data-ttu-id="9fc29-397">如果你未设置此属性的行顺序<xref:Microsoft.Office.Tools.Excel.ListObject>将匹配数据源的行顺序的下次打开该工作簿时，即使用户对排序进行了更改并保存该工作簿。</span><span class="sxs-lookup"><span data-stu-id="9fc29-397">If you do not set this property, the row order of the <xref:Microsoft.Office.Tools.Excel.ListObject> will match the row order of the data source the next time the workbook is opened, even if the user made changes to the sorting and saved the workbook.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ListObject.Selected" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-398">当选择 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-398">Occurs when the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control is selected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-399">为所选内容更改时引发此事件<xref:Microsoft.Office.Tools.Excel.ListObject>控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-399">This event is raised when the selection changes to the <xref:Microsoft.Office.Tools.Excel.ListObject> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-400">下面的代码示例将创建<xref:Microsoft.Office.Tools.Excel.ListObject>，然后创建的事件处理程序<xref:Microsoft.Office.Tools.Excel.ListObject.Selected>事件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-400">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> and then creates an event handler for the <xref:Microsoft.Office.Tools.Excel.ListObject.Selected> event.</span></span> <span data-ttu-id="9fc29-401">若要测试的事件处理程序，请确保<xref:Microsoft.Office.Tools.Excel.ListObject>未选择，并选择它。</span><span class="sxs-lookup"><span data-stu-id="9fc29-401">To test the event handler, ensure that the <xref:Microsoft.Office.Tools.Excel.ListObject> is not selected, and then select it.</span></span>  
  
 <span data-ttu-id="9fc29-402">此版本是文档级自定义项。</span><span class="sxs-lookup"><span data-stu-id="9fc29-402">This version is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#29](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#29)]
 [!code-vb[Trin_ExcelListObject#29](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#29)]  
  
 <span data-ttu-id="9fc29-403">此版本用于针对应用程序级外接程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-403">This version is for an application-level add-in.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject_AppLevelAddIn#29](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/CS/ThisAddIn.cs#29)]
 [!code-vb[Trin_ExcelListObject_AppLevelAddIn#29](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/VB/ThisAddIn.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-404">获取或设置当前选定的行的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-404">Gets or sets the index of the row that is currently selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-405">当前选定的行的索引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-405">The index number of the currently selected row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-406">此属性是从 1 开始，不是从 0 开始。</span><span class="sxs-lookup"><span data-stu-id="9fc29-406">This property is 1-based, not 0-based.</span></span> <span data-ttu-id="9fc29-407">中的第一个数据行<xref:Microsoft.Office.Tools.Excel.ListObject>控件具有索引号为 1。</span><span class="sxs-lookup"><span data-stu-id="9fc29-407">The first data row in a <xref:Microsoft.Office.Tools.Excel.ListObject> control has an index number of 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-408">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.ListObject>当前工作表上。</span><span class="sxs-lookup"><span data-stu-id="9fc29-408">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> on the current worksheet.</span></span> <span data-ttu-id="9fc29-409">它使用<xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex%2A>和<xref:Microsoft.Office.Tools.Excel.ListObject.AutoSelectRows%2A>属性来选择第二行并指定当用户单击行选择整行。</span><span class="sxs-lookup"><span data-stu-id="9fc29-409">It uses the <xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex%2A> and <xref:Microsoft.Office.Tools.Excel.ListObject.AutoSelectRows%2A> properties to select the second row and to specify that the entire row is selected when the user clicks a row.</span></span> <span data-ttu-id="9fc29-410">此代码示例还创建的事件处理程序<xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndexChanged>显示一个消息框，选择一个新行时的事件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-410">The code example also creates an event handler for the <xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndexChanged> event that displays a message box whenever a new row is selected.</span></span>  
  
 <span data-ttu-id="9fc29-411">此版本是文档级自定义项。</span><span class="sxs-lookup"><span data-stu-id="9fc29-411">This version is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#2)]
 [!code-vb[Trin_ExcelListObject#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#2)]  
  
 <span data-ttu-id="9fc29-412">此版本用于针对应用程序级外接程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-412">This version is for an application-level add-in.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject_AppLevelAddIn#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/CS/ThisAddIn.cs#2)]
 [!code-vb[Trin_ExcelListObject_AppLevelAddIn#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/VB/ThisAddIn.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ListObject.SelectedIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-413">当 <see cref="P:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex" /> 属性的值更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-413">Occurs when the value of the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-414">如果选择标头、 插入行或总计行，不引发此事件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-414">This event is not raised if the header, Insert row or Total row is selected.</span></span>  
  
 <span data-ttu-id="9fc29-415">如果引发此事件<xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex%2A>属性更改通过以编程方式修改或用户交互。</span><span class="sxs-lookup"><span data-stu-id="9fc29-415">This event is raised if the <xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-416">下面的代码示例创建<xref:Microsoft.Office.Tools.Excel.ListObject>当前工作表上。</span><span class="sxs-lookup"><span data-stu-id="9fc29-416">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> on the current worksheet.</span></span> <span data-ttu-id="9fc29-417">它使用<xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex%2A>和<xref:Microsoft.Office.Tools.Excel.ListObject.AutoSelectRows%2A>属性来选择第二行并指定当用户单击行选择整行。</span><span class="sxs-lookup"><span data-stu-id="9fc29-417">It uses the <xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndex%2A> and <xref:Microsoft.Office.Tools.Excel.ListObject.AutoSelectRows%2A> properties to select the second row and to specify that the entire row is selected when the user clicks a row.</span></span> <span data-ttu-id="9fc29-418">此代码示例还创建的事件处理程序<xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndexChanged>显示一个消息框，选择一个新行时的事件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-418">The code example also creates an event handler for the <xref:Microsoft.Office.Tools.Excel.ListObject.SelectedIndexChanged> event that displays a message box whenever a new row is selected.</span></span>  
  
 <span data-ttu-id="9fc29-419">此版本是文档级自定义项。</span><span class="sxs-lookup"><span data-stu-id="9fc29-419">This version is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#2)]
 [!code-vb[Trin_ExcelListObject#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#2)]  
  
 <span data-ttu-id="9fc29-420">此版本用于针对应用程序级外接程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-420">This version is for an application-level add-in.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject_AppLevelAddIn#2](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/CS/ThisAddIn.cs#2)]
 [!code-vb[Trin_ExcelListObject_AppLevelAddIn#2](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/VB/ThisAddIn.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChange">
      <MemberSignature Language="C#" Value="public event Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler SelectionChange;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler SelectionChange" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Office.Tools.Excel.ListObject.SelectionChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DocEvents_SelectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-421">在 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件内部的所选内容更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-421">Occurs when the selection changes inside the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-422">当任何所选范围内的时，将引发此事件<xref:Microsoft.Office.Tools.Excel.ListObject>更改。</span><span class="sxs-lookup"><span data-stu-id="9fc29-422">This event is raised when any selected range inside the <xref:Microsoft.Office.Tools.Excel.ListObject> changes.</span></span>  
  
 <span data-ttu-id="9fc29-423">从移动焦点时不会引发此事件内<xref:Microsoft.Office.Tools.Excel.ListObject>外部的控制转移到<xref:Microsoft.Office.Tools.Excel.ListObject>控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-423">This event is not raised when focus moves from inside a <xref:Microsoft.Office.Tools.Excel.ListObject> control to outside of the <xref:Microsoft.Office.Tools.Excel.ListObject> control.</span></span> <span data-ttu-id="9fc29-424">引发时焦点从外部<xref:Microsoft.Office.Tools.Excel.ListObject>控制对<xref:Microsoft.Office.Tools.Excel.ListObject>控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-424">It is raised when focus moves from outside a <xref:Microsoft.Office.Tools.Excel.ListObject> control to the <xref:Microsoft.Office.Tools.Excel.ListObject> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-425">下面的代码示例将创建<xref:Microsoft.Office.Tools.Excel.ListObject>，然后创建的事件处理程序<xref:Microsoft.Office.Tools.Excel.ListObject.SelectionChange>事件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-425">The following code example creates a <xref:Microsoft.Office.Tools.Excel.ListObject> and then creates an event handler for the <xref:Microsoft.Office.Tools.Excel.ListObject.SelectionChange> event.</span></span> <span data-ttu-id="9fc29-426">若要测试的事件处理程序，请选择中的单元格<xref:Microsoft.Office.Tools.Excel.ListObject>，然后选择在不同的单元格<xref:Microsoft.Office.Tools.Excel.ListObject>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-426">To test the event handler, select a cell in the <xref:Microsoft.Office.Tools.Excel.ListObject> and then select a different cell in the <xref:Microsoft.Office.Tools.Excel.ListObject>.</span></span>  
  
 <span data-ttu-id="9fc29-427">此版本是文档级自定义项。</span><span class="sxs-lookup"><span data-stu-id="9fc29-427">This version is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#30](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#30)]
 [!code-vb[Trin_ExcelListObject#30](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#30)]  
  
 <span data-ttu-id="9fc29-428">此版本用于针对应用程序级外接程序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-428">This version is for an application-level add-in.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject_AppLevelAddIn#30](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/CS/ThisAddIn.cs#30)]
 [!code-vb[Trin_ExcelListObject_AppLevelAddIn#30](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject_AppLevelAddIn/VB/ThisAddIn.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataBinding">
      <MemberSignature Language="C#" Value="public void SetDataBinding (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDataBinding(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.SetDataBinding(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <span data-ttu-id="9fc29-429">要用作 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的数据源的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-429">The object to use as a data source for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fc29-430">将 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件绑定到数据源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-430">Binds a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to a data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-431">数据源可以是任何对象，它实现<xref:System.Collections.IList>， <xref:System.ComponentModel.IListSource>， <xref:System.ComponentModel.IBindingList>，或<xref:System.Collections.IEnumerable>，如<xref:System.Data.DataTable>或一维数组。</span><span class="sxs-lookup"><span data-stu-id="9fc29-431">The data source can be any object that implements <xref:System.Collections.IList>, <xref:System.ComponentModel.IListSource>, <xref:System.ComponentModel.IBindingList>, or <xref:System.Collections.IEnumerable>, such as a <xref:System.Data.DataTable> or a one-dimensional array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-432">下面的代码示例演示如何使用<xref:Microsoft.Office.Tools.Excel.ListObject.SetDataBinding%2A>方法将绑定<xref:Microsoft.Office.Tools.Excel.ListObject>到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-432">The following code example demonstrates how to use the <xref:Microsoft.Office.Tools.Excel.ListObject.SetDataBinding%2A> method to bind a <xref:Microsoft.Office.Tools.Excel.ListObject> to a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9fc29-433"><xref:System.Data.DataTable>包含两个列，其中包含名称和员工的年龄和表示员工条目的四个行。</span><span class="sxs-lookup"><span data-stu-id="9fc29-433">The <xref:System.Data.DataTable> contains two columns, which contain the names and ages of employees, and four rows that represent employee entries.</span></span>  
  
 <span data-ttu-id="9fc29-434">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-434">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#7](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#7)]
 [!code-vb[Trin_ExcelListObject#7](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Office.Tools.Excel.SetDataBindingFailedException">
          <span data-ttu-id="9fc29-435">未能绑定到指定的数据源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-435">Could not bind to the specified data source.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9fc29-436">该参数无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-436">The argument is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9fc29-437">
            <paramref name="dataSource" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-437">The <paramref name="dataSource" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetDataBinding">
      <MemberSignature Language="C#" Value="public void SetDataBinding (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDataBinding(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.SetDataBinding(System.Object,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <span data-ttu-id="9fc29-438">要用作 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的数据源的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-438">The object to use as a data source for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </param>
        <param name="dataMember">
          <span data-ttu-id="9fc29-439">由 <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataMember" /> 返回的对象中用来指定要绑定到的属性的 <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-439">The <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataMember" /> that specifies the property to bind to within the object returned by the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataSource" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fc29-440">将 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件绑定到数据源的指定数据成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-440">Binds a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to a specified data member of a data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-441">数据源可以是任何对象，它实现<xref:System.Collections.IList>， <xref:System.ComponentModel.IListSource>， <xref:System.ComponentModel.IBindingList>，或<xref:System.Collections.IEnumerable>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-441">The data source can be any object that implements <xref:System.Collections.IList>, <xref:System.ComponentModel.IListSource>, <xref:System.ComponentModel.IBindingList>, or <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="9fc29-442">数据成员必须是返回可绑定集合的数据源的属性。</span><span class="sxs-lookup"><span data-stu-id="9fc29-442">The data member must be a property of the data source that returns a bindable collection.</span></span> <span data-ttu-id="9fc29-443">例如，<xref:System.Data.DataSet>源具有表作为数据成员。</span><span class="sxs-lookup"><span data-stu-id="9fc29-443">For example, a <xref:System.Data.DataSet> source has tables as data members.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-444">下面的代码示例将创建<xref:System.Data.DataSet>、 一个<xref:System.Data.DataTable>，和一个<xref:Microsoft.Office.Tools.Excel.ListObject>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-444">The following code example creates a <xref:System.Data.DataSet>, a <xref:System.Data.DataTable>, and a <xref:Microsoft.Office.Tools.Excel.ListObject>.</span></span> <span data-ttu-id="9fc29-445">然后将绑定到列表对象<xref:System.Data.DataSet>和<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-445">It then binds the list object to the <xref:System.Data.DataSet> and the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="9fc29-446">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-446">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#31](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#31)]
 [!code-vb[Trin_ExcelListObject#31](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Office.Tools.Excel.SetDataBindingFailedException">
          <span data-ttu-id="9fc29-447">未能绑定到指定的数据源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-447">Could not bind to the specified data source.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9fc29-448">一个或多个参数无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-448">One or more of the arguments are invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9fc29-449">
            <paramref name="dataSource" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-449">The <paramref name="dataSource" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetDataBinding">
      <MemberSignature Language="C#" Value="public void SetDataBinding (object dataSource, string dataMember, string[] mappedColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDataBinding(object dataSource, string dataMember, string[] mappedColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.SetDataBinding(System.Object,System.String,System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
        <Parameter Name="mappedColumns" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dataSource">
          <span data-ttu-id="9fc29-450">要用作 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的数据源的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-450">The object to use as a data source for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </param>
        <param name="dataMember">
          <span data-ttu-id="9fc29-451">由 <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataMember" /> 返回的对象中用来指定要绑定到的属性的 <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-451">The <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataMember" /> that specifies the property to bind to within the object returned by the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.DataSource" />.</span>
          </span>
        </param>
        <param name="mappedColumns">
          <span data-ttu-id="9fc29-452">数据成员中要显示在 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件中的列名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-452">Names of columns in the data member that you want to display in the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
          <span data-ttu-id="9fc29-453">若要添加未映射的列，请在数组中包括一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-453">To add an unmapped column, include an empty string in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fc29-454">将 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件绑定到数据源的指定数据成员，并且仅显示该数据成员的指定列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-454">Binds a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control to a specified data member of a data source, and shows only specified columns of that data member.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-455">`dataSource`参数可以是任何对象，它实现<xref:System.Collections.IList>， <xref:System.ComponentModel.IListSource>， <xref:System.ComponentModel.IBindingList>，或<xref:System.Collections.IEnumerable>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-455">The `dataSource` parameter can be any object that implements <xref:System.Collections.IList>, <xref:System.ComponentModel.IListSource>, <xref:System.ComponentModel.IBindingList>, or <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="9fc29-456">`dataMember`参数必须是返回可绑定集合的数据源的属性。</span><span class="sxs-lookup"><span data-stu-id="9fc29-456">The `dataMember` parameter must be a property of the data source that returns a bindable collection.</span></span> <span data-ttu-id="9fc29-457">例如，<xref:System.Data.DataSet>源具有表作为数据成员。</span><span class="sxs-lookup"><span data-stu-id="9fc29-457">For example, a <xref:System.Data.DataSet> source has tables as data members.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-458">下面的代码示例将创建<xref:System.Data.DataSet>、 一个<xref:System.Data.DataTable>，和一个<xref:Microsoft.Office.Tools.Excel.ListObject>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-458">The following code example creates a <xref:System.Data.DataSet>, a <xref:System.Data.DataTable>, and a <xref:Microsoft.Office.Tools.Excel.ListObject>.</span></span> <span data-ttu-id="9fc29-459">然后将绑定<xref:Microsoft.Office.Tools.Excel.ListObject>到<xref:System.Data.DataSet>并<xref:System.Data.DataTable>，但仅包括两个可能的表的列中的一个<xref:Microsoft.Office.Tools.Excel.ListObject>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-459">It then binds the <xref:Microsoft.Office.Tools.Excel.ListObject> to the <xref:System.Data.DataSet> and the <xref:System.Data.DataTable>, but only includes one of the two possible table columns in the <xref:Microsoft.Office.Tools.Excel.ListObject>.</span></span>  
  
 <span data-ttu-id="9fc29-460">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-460">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#32](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#32)]
 [!code-vb[Trin_ExcelListObject#32](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Office.Tools.Excel.SetDataBindingFailedException">
          <span data-ttu-id="9fc29-461">未能绑定到指定的数据源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-461">Could not bind to the specified data source.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9fc29-462">一个或多个参数无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-462">One or more of the arguments are invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9fc29-463">
            <paramref name="dataSource" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-463">The <paramref name="dataSource" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SharePointURL">
      <MemberSignature Language="C#" Value="public string SharePointURL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SharePointURL" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.SharePointURL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-464">获取给定 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的 SharePoint 列表的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-464">Gets the URL of the SharePoint list for a given <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-465">给定 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的 SharePoint 列表的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-465">The URL of the SharePoint list for a given <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-466">访问此属性会导致如果列表未链接到 SharePoint 站点，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="9fc29-466">Accessing this property causes an exception to be thrown if the list is not linked to a SharePoint site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-467">下面的代码示例发布<xref:Microsoft.Office.Tools.Excel.ListObject>到运行 Microsoft Windows SharePoint Services 的网站。</span><span class="sxs-lookup"><span data-stu-id="9fc29-467">The following code example publishes a <xref:Microsoft.Office.Tools.Excel.ListObject> to a Web site that is running Microsoft Windows SharePoint Services.</span></span> <span data-ttu-id="9fc29-468">此示例假定有<xref:Microsoft.Office.Tools.Excel.ListObject>名为`customerListObject`当前的工作表上<xref:Microsoft.Office.Tools.Excel.ListObject>链接到 SharePoint 站点。</span><span class="sxs-lookup"><span data-stu-id="9fc29-468">This example assumes that there is a <xref:Microsoft.Office.Tools.Excel.ListObject> named `customerListObject` on the current worksheet, and that the <xref:Microsoft.Office.Tools.Excel.ListObject> is linked to a SharePoint site.</span></span>  
  
 <span data-ttu-id="9fc29-469">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-469">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#33](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#33)]
 [!code-vb[Trin_ExcelListObject#33](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAutoFilter">
      <MemberSignature Language="C#" Value="public bool ShowAutoFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.ShowAutoFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-470">获取或设置一个值，该值指示是否显示自动筛选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-470">Gets or sets a value that indicates whether the AutoFilter is displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-471">如果显示自动筛选，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-471">
              <see langword="true" /> if the AutoFilter is displayed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-472"><xref:Microsoft.Office.Tools.Excel.ListObject.ShowAutoFilter%2A>属性的默认值为`true`新<xref:Microsoft.Office.Tools.Excel.ListObject>控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-472">The <xref:Microsoft.Office.Tools.Excel.ListObject.ShowAutoFilter%2A> property defaults to `true` for a new <xref:Microsoft.Office.Tools.Excel.ListObject> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowHeaders">
      <MemberSignature Language="C#" Value="public bool ShowHeaders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeaders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.ShowHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-473">获取或设置一个值，该值指示是否应显示标题信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-473">Gets or sets a value that indicates whether the header information should be displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-474">如果应显示标题信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-474">
              <see langword="true" /> if the header information should be displayed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9fc29-475">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-475">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTableStyleColumnStripes">
      <MemberSignature Language="C#" Value="public bool ShowTableStyleColumnStripes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTableStyleColumnStripes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.ShowTableStyleColumnStripes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-476">设置或获取一个值，该值指示是否使用列条纹表样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-476">Gets or sets a value that indicates whether the Column Stripes table style is used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-477">如果使用列条纹表样式，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-477">
              <see langword="true" /> if the Column Stripes table style is used; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9fc29-478">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-478">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTableStyleFirstColumn">
      <MemberSignature Language="C#" Value="public bool ShowTableStyleFirstColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTableStyleFirstColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.ShowTableStyleFirstColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-479">获取或设置一个值，该值指示是否对第一列设置格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-479">Gets or sets a value that indicates whether the first column is formatted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-480">如果对第一列设置格式，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-480">
              <see langword="true" /> if the first column is formatted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9fc29-481">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-481">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTableStyleLastColumn">
      <MemberSignature Language="C#" Value="public bool ShowTableStyleLastColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTableStyleLastColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.ShowTableStyleLastColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-482">获取或设置一个值，该值指示是否对最后一列设置格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-482">Gets or sets a value that indicates whether the last column is formatted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-483">如果对最后一列设置格式，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-483">
              <see langword="true" /> if the last column is formatted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9fc29-484">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-484">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTableStyleRowStripes">
      <MemberSignature Language="C#" Value="public bool ShowTableStyleRowStripes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTableStyleRowStripes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.ShowTableStyleRowStripes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-485">设置或获取一个值，该值指示是否使用行条纹表样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-485">Gets or sets a value that indicates whether the Row Stripes table style is used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-486">如果使用行条纹表样式，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-486">
              <see langword="true" /> if the Row Stripes table style is used; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9fc29-487">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-487">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTotals">
      <MemberSignature Language="C#" Value="public bool ShowTotals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTotals" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.ShowTotals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-488">获取或设置一个值，该值表示总计行是否可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-488">Gets or sets a value that indicates whether the Total row is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-489">如果总计行可见，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-489">
              <see langword="true" /> if the Total row is visible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sort Sort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sort Sort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.Sort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-490">获取 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 集合的一个或多个排序列以及排序顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-490">Gets the sort column or columns, and the sort order for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-491">一个<c>Microsoft.Office.Interop.Excel.Sort</c> ，表示列排序或列和的排序顺序<see cref="T:Microsoft.Office.Tools.Excel.ListObject" />集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-491">A <c>Microsoft.Office.Interop.Excel.Sort</c> that represents the sort column or columns, and the sort order for the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9fc29-492">下面的代码示例添加<xref:Microsoft.Office.Tools.Excel.ListObject>到当前工作表。</span><span class="sxs-lookup"><span data-stu-id="9fc29-492">The following code example adds a <xref:Microsoft.Office.Tools.Excel.ListObject> to the current worksheet.</span></span> <span data-ttu-id="9fc29-493">然后，示例填充<xref:Microsoft.Office.Tools.Excel.ListObject>，这对应于 Excel 表、 使用的任意数据的两个行，并指定排序是升序顺序对列范围 a1: a3 执行。</span><span class="sxs-lookup"><span data-stu-id="9fc29-493">The example then populates the <xref:Microsoft.Office.Tools.Excel.ListObject>, which corresponds to an Excel table, with two rows of arbitrary data and specifies that the sort is to be performed in ascending order based on the column range A1:A3.</span></span> <span data-ttu-id="9fc29-494">接下来，该示例调用`Microsoft.Office.Interop.Excel.Sort.Apply`方法对表进行排序。</span><span class="sxs-lookup"><span data-stu-id="9fc29-494">Next, the example calls the `Microsoft.Office.Interop.Excel.Sort.Apply` method to sort the table.</span></span>  
  
 <span data-ttu-id="9fc29-495">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-495">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_Excelworkbook_Additional#33](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/Sheet3.cs#33)]
 [!code-vb[Trin_Excelworkbook_Additional#33](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/Sheet3.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.SourceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlListObjectSourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-496">获取列表的当前源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-496">Gets the current source of the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-497">
            <see cref="T:Microsoft.Office.Interop.Excel.XlListObjectSourceType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-497">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlListObjectSourceType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9fc29-498">下面的代码示例将创建<xref:System.Data.DataTable>和一个<xref:Microsoft.Office.Tools.Excel.ListObject>，，然后将绑定<xref:Microsoft.Office.Tools.Excel.ListObject>到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-498">The following code example creates a <xref:System.Data.DataTable> and a <xref:Microsoft.Office.Tools.Excel.ListObject>, and then binds the <xref:Microsoft.Office.Tools.Excel.ListObject> to the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9fc29-499">然后，在消息中显示的列表的源。</span><span class="sxs-lookup"><span data-stu-id="9fc29-499">It then displays the source of the list in a message.</span></span>  
  
 <span data-ttu-id="9fc29-500">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-500">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#34](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#34)]
 [!code-vb[Trin_ExcelListObject#34](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public string Summary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Summary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.Summary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-501">获取或设置与指定表的可选文本字符串关联的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-501">Gets or sets the description associated with the alternative text string for the specified table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-502">一个字符串，表示与指定表的可选文本字符串关联的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-502">A string that represents the description associated with the alternative text string for the specified table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-503">值<xref:Microsoft.Office.Tools.Excel.ListObject.Summary%2A>的设置的属性相对应**描述**框中**可选文字**对话框中，右键单击某个表，指向显示**表**，然后单击**可选文字**。</span><span class="sxs-lookup"><span data-stu-id="9fc29-503">The value of the <xref:Microsoft.Office.Tools.Excel.ListObject.Summary%2A> property corresponds to the setting of the **Description** box in the **Alternative Text** dialog box, which is displayed by right-clicking a table, pointing to **Table**, and then clicking **Alternative Text**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9fc29-504">此属性将出现在 IntelliSense 中 Excel 2007 项目中面向[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="9fc29-504">This property appears in IntelliSense in Excel 2007 projects that target the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="9fc29-505">但是，此属性不能使用 Excel 2007 项目中。</span><span class="sxs-lookup"><span data-stu-id="9fc29-505">However, this property cannot be used in Excel 2007 projects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="9fc29-506">此属性用于 Excel 2007 项目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-506">This property is used in an Excel 2007 project.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TableStyle">
      <MemberSignature Language="C#" Value="public object TableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.TableStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-507">获取或设置表样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-507">Gets or sets the table style.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-508">一个表示表样式的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-508">An object that represents the table style.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9fc29-509">下面的代码示例将添加<xref:Microsoft.Office.Tools.Excel.ListObject>到`Sheet1`工作表。</span><span class="sxs-lookup"><span data-stu-id="9fc29-509">The following code example adds a <xref:Microsoft.Office.Tools.Excel.ListObject> to the `Sheet1` sheet.</span></span> <span data-ttu-id="9fc29-510">该示例然后设置的表样式<xref:Microsoft.Office.Tools.Excel.ListObject>，它为对应于 Excel 表，**表样式深色 10**样式。</span><span class="sxs-lookup"><span data-stu-id="9fc29-510">The example then sets the table style of the <xref:Microsoft.Office.Tools.Excel.ListObject>, which corresponds to an Excel table, to the **Table Style Dark 10** style.</span></span> <span data-ttu-id="9fc29-511">为此属性可以设置表样式对应的表样式时选择某个表时，将显示设计选项卡上的 Excel 用户界面中提供的。</span><span class="sxs-lookup"><span data-stu-id="9fc29-511">The table styles you can set for this property correspond to the table styles that are available in the Excel user interface on the Design tab that appears when a table is selected.</span></span>  
  
 <span data-ttu-id="9fc29-512">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-512">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_Excelworkbook_Additional#41](~/snippets/csharp/VS_Snippets_OfficeSP/trin_excelworkbook_additional/cs/ThisWorkbook.cs#41)]
 [!code-vb[Trin_Excelworkbook_Additional#41](~/snippets/visualbasic/VS_Snippets_OfficeSP/trin_excelworkbook_additional/vb/ThisWorkbook.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-513">获取或设置包含有关 <see cref="P:Microsoft.Office.Tools.Excel.ListObject.Tag" /> 控件的数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-513">Gets or sets the object that contains data about the <see cref="P:Microsoft.Office.Tools.Excel.ListObject.Tag" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-514">一个包含有关 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件的数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-514">An object that contains data about the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-515">一个常见用途<xref:Microsoft.Office.Tools.Excel.ListObject.Tag%2A>属性是与密切关联的数据存储<xref:Microsoft.Office.Tools.Excel.ListObject>控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-515">A common use for the <xref:Microsoft.Office.Tools.Excel.ListObject.Tag%2A> property is to store data that is closely associated with the <xref:Microsoft.Office.Tools.Excel.ListObject> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalsRowRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range TotalsRowRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range TotalsRowRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.TotalsRowRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-516">获取一个表示 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 控件的总计行的 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-516">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the Total row of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-517">一个表示 <see cref="T:Microsoft.Office.Interop.Excel.Range" /> 控件的总计行的 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-517">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> that represents the Total row of the <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-518">此属性返回<xref:Microsoft.Office.Interop.Excel.Range>仅当中显示总计行<xref:Microsoft.Office.Tools.Excel.ListObject>控件。</span><span class="sxs-lookup"><span data-stu-id="9fc29-518">This property returns a <xref:Microsoft.Office.Interop.Excel.Range> only if the Total row is showing in the <xref:Microsoft.Office.Tools.Excel.ListObject> control.</span></span> <span data-ttu-id="9fc29-519">如果未显示总计行，它将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="9fc29-519">If the Total row is not showing, it returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fc29-520">下面的代码示例将创建<xref:System.Data.DataTable>和一个<xref:Microsoft.Office.Tools.Excel.ListObject>，并将绑定<xref:Microsoft.Office.Tools.Excel.ListObject>到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-520">The following code example creates a <xref:System.Data.DataTable> and a <xref:Microsoft.Office.Tools.Excel.ListObject>, and binds the <xref:Microsoft.Office.Tools.Excel.ListObject> to the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="9fc29-521">然后获取包含总计行和总计行字体变为斜体的范围。</span><span class="sxs-lookup"><span data-stu-id="9fc29-521">It then gets the range that contains the Total row and changes the Total row font to italic.</span></span>  
  
 <span data-ttu-id="9fc29-522">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-522">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#35](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#35)]
 [!code-vb[Trin_ExcelListObject#35](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unlink">
      <MemberSignature Language="C#" Value="public void Unlink ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unlink() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.Unlink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-523">从 <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> 控件中移除指向 Microsoft Windows SharePoint Services 站点的链接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-523">Removes the link to a Microsoft Windows SharePoint Services site from a <see cref="T:Microsoft.Office.Tools.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-524">调用此方法后，<xref:Microsoft.Office.Tools.Excel.ListObject>是取消链接，取消链接的操作无法撤消。</span><span class="sxs-lookup"><span data-stu-id="9fc29-524">After this method is called and the <xref:Microsoft.Office.Tools.Excel.ListObject> is unlinked, the unlinking cannot be reversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unlist">
      <MemberSignature Language="C#" Value="public void Unlist ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unlist() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.Unlist" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-525">从 <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> 控件中移除列表功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-525">Removes the list functionality from a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc29-526">此方法从本机 Excel 中移除列表功能<xref:Microsoft.Office.Interop.Excel.ListObject?displayProperty=fullName>对象，但不会影响<xref:Microsoft.Office.Tools.Excel.ListObject?displayProperty=fullName>宿主控件; 该控件将保持在项目生成的代码。</span><span class="sxs-lookup"><span data-stu-id="9fc29-526">This method removes the list functionality from the native Excel <xref:Microsoft.Office.Interop.Excel.ListObject?displayProperty=fullName> object but does not affect the <xref:Microsoft.Office.Tools.Excel.ListObject?displayProperty=fullName> host control; the generated code for the control remains in the project.</span></span>  
  
 <span data-ttu-id="9fc29-527">使用此方法后，由列表组成的单元格的范围将是常规的数据区域。</span><span class="sxs-lookup"><span data-stu-id="9fc29-527">After you use this method, the range of cells that made up the list will be a regular range of data.</span></span>  
  
 <span data-ttu-id="9fc29-528">运行此方法保留在工作表中单元格数据、 格式和公式。</span><span class="sxs-lookup"><span data-stu-id="9fc29-528">Running this method leaves the cell data, formatting, and formulas in the worksheet.</span></span> <span data-ttu-id="9fc29-529">总计行也将保持不变。</span><span class="sxs-lookup"><span data-stu-id="9fc29-529">The Total row is also left intact.</span></span> <span data-ttu-id="9fc29-530">此方法删除任何链接到 Microsoft Windows SharePoint Services 站点。</span><span class="sxs-lookup"><span data-stu-id="9fc29-530">This method removes any link to a Microsoft Windows SharePoint Services site.</span></span> <span data-ttu-id="9fc29-531">从列表中，还删除了自动筛选和插入行。</span><span class="sxs-lookup"><span data-stu-id="9fc29-531">AutoFilter and the Insert row are also removed from the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateChanges">
      <MemberSignature Language="C#" Value="public void UpdateChanges (Microsoft.Office.Interop.Excel.XlListConflict iConflictType = Microsoft.Office.Interop.Excel.XlListConflict.xlListConflictDialog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateChanges(valuetype Microsoft.Office.Interop.Excel.XlListConflict iConflictType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.Excel.ListObject.UpdateChanges(Microsoft.Office.Interop.Excel.XlListConflict)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iConflictType" Type="Microsoft.Office.Interop.Excel.XlListConflict" />
      </Parameters>
      <Docs>
        <param name="iConflictType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMap">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlMap XmlMap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlMap XmlMap" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.Excel.ListObject.XmlMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Excel</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlMap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fc29-532">获取一个表示该列表所用架构映射的 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-532">Gets an <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> that represents the schema map used for the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fc29-533">一个表示该列表所用架构映射的 <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fc29-533">An <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> that represents the schema map used for the list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9fc29-534">下面的代码示例显示的名称<xref:Microsoft.Office.Interop.Excel.XmlMap>映射到<xref:Microsoft.Office.Tools.Excel.ListObject>。</span><span class="sxs-lookup"><span data-stu-id="9fc29-534">The following code example displays the name of the <xref:Microsoft.Office.Interop.Excel.XmlMap> that is mapped to a <xref:Microsoft.Office.Tools.Excel.ListObject>.</span></span> <span data-ttu-id="9fc29-535">此示例假定有<xref:Microsoft.Office.Tools.Excel.ListObject>名为`customerListObject`当前的工作表上<xref:Microsoft.Office.Tools.Excel.ListObject>使用架构映射。</span><span class="sxs-lookup"><span data-stu-id="9fc29-535">This example assumes that there is a <xref:Microsoft.Office.Tools.Excel.ListObject> named `customerListObject` on the current worksheet, and that the <xref:Microsoft.Office.Tools.Excel.ListObject> uses a schema map.</span></span>  
  
 <span data-ttu-id="9fc29-536">此示例适用于文档级自定义。</span><span class="sxs-lookup"><span data-stu-id="9fc29-536">This example is for a document-level customization.</span></span>  
  
 [!code-csharp[Trin_ExcelListObject#36](~/snippets/csharp/VS_Snippets_OfficeSP/Trin_ExcelListObject/CS/Trin_ExcelListObject.cs#36)]
 [!code-vb[Trin_ExcelListObject#36](~/snippets/visualbasic/VS_Snippets_OfficeSP/Trin_ExcelListObject/VB/Sheet1.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>