<Type Name="CachedDataHostItemCollection" FullName="Microsoft.VisualStudio.Tools.Applications.CachedDataHostItemCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a127fe220730b78011610f38b5b0094501f3aba1" /><Meta Name="ms.sourcegitcommit" Value="66ccc1ab172558cdfd2b9ffb616a60e4c9105be3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/19/2018" /><Meta Name="ms.locfileid" Value="46458374" /></Metadata><TypeSignature Language="C#" Value="public sealed class CachedDataHostItemCollection : System.Collections.ObjectModel.Collection&lt;Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CachedDataHostItemCollection extends System.Collections.ObjectModel.Collection`1&lt;class Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItemCollection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualStudio.Tools.Applications.ServerDocument</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示文档级自定义的数据缓存中的 <see cref="T:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem" /> 对象集合，该文档级自定义通过使用 Visual Studio 中的 Office 开发工具创建。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:Microsoft.VisualStudio.Tools.Applications.CachedData.HostItems%2A>属性来获取<xref:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItemCollection>已缓存数据的解决方案文档。  
  
 有关在文档级自定义项中缓存数据的详细信息，请参阅[缓存数据](/visualstudio/vsto/caching-data)并[访问服务器上的文档中的数据](/visualstudio/vsto/accessing-data-in-documents-on-the-server)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem Add (string hostItemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem Add(string hostItemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItemCollection.Add(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Tools.Applications.ServerDocument</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostItemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostItemId">其中已缓存源数据的命名空间和类。</param>
        <summary>将指定的 <see cref="T:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem" /> 添加到集合末尾。</summary>
        <returns>被添加到集合末尾的 <see cref="T:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `hostItemId`参数是一个字符串，包含缓存的数据的解决方案文档中指定的命名空间和类。 一个句点 （.），例如，"ExcelWorkbook1.ThisWorkbook"分隔的命名空间和类名。  
  
 若要添加<xref:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem>集合中的特定索引位置处，使用<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">此集合中已存在对应于 <paramref name="hostItemId" /> 的 <see cref="T:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string hostItemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string hostItemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItemCollection.Contains(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Tools.Applications.ServerDocument</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostItemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostItemId">其中已缓存源数据的命名空间和类。</param>
        <summary>返回一个指示集合是否包含指定的 <see cref="T:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem" /> 的值。</summary>
        <returns>如果集合包含对应于 <paramref name="hostItemId" /> 参数的 <see cref="T:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `hostItemId`参数是一个字符串，包含缓存的数据的解决方案文档中指定的命名空间和类。 一个句点 （.），例如，"ExcelWorkbook1.ThisWorkbook"分隔的命名空间和类名。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public Microsoft.VisualStudio.Tools.Applications.CachedDataHostItemEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.VisualStudio.Tools.Applications.CachedDataHostItemEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItemCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Tools.Applications.ServerDocument</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualStudio.Tools.Applications.CachedDataHostItemEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个可用于循环访问集合内容的 <see cref="T:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItemEnumerator" />。</summary>
        <returns>可用于循环访问集合内容的 <see cref="T:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItemEnumerator" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem this[string hostItemId] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItemCollection.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Tools.Applications.ServerDocument</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostItemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostItemId">其中已缓存源数据的命名空间和类。</param>
        <summary>获取由其中已缓存源数据的命名空间和类标识的 <see cref="T:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem" />。</summary>
        <value><see cref="T:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem" />对应于<paramref name="hostItemId" />参数;<see langword="null" />如果没有<see cref="T:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem" />对应于<paramref name="hostItemId" />找到。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `hostItemId`参数是一个字符串，包含缓存的数据的解决方案文档中指定的命名空间和类。 一个句点 （.），例如，"ExcelWorkbook1.ThisWorkbook"分隔的命名空间和类名。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string hostItemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string hostItemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItemCollection.Remove(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Tools.Applications.ServerDocument</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostItemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostItemId">其中已缓存源数据的命名空间和类名。</param>
        <summary>从集合中删除由其中已缓存源数据的命名空间和类名标识的指定 <see cref="T:Microsoft.VisualStudio.Tools.Applications.CachedDataHostItem" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `hostItemId`参数是一个字符串，包含缓存的数据的解决方案文档中指定的命名空间和类。 一个句点 （.），例如，"ExcelWorkbook1.ThisWorkbook"分隔的命名空间和类名。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>