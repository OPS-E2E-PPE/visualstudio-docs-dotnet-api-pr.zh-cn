<Type Name="RegexCollection" FullName="Microsoft.Office.Tools.RegexCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f3669062b0302f7e91e166a46d2e5eef28f8b368" /><Meta Name="ms.sourcegitcommit" Value="bb8a3a96823cedeffbdbcc0c41a8118399de8074" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/21/2018" /><Meta Name="ms.locfileid" Value="29432776" /></Metadata><TypeSignature Language="C#" Value="public interface RegexCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract RegexCollection implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Tools.RegexCollection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Tools.Common</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("cfab1305-802f-4c99-8aa2-f68281840d39")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示一个正则表达式的集合，将被 Office 解决方案中的智能标记识别。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当你创建<xref:Microsoft.Office.Tools.Excel.SmartTag?displayProperty=fullName>或<xref:Microsoft.Office.Tools.Word.SmartTag?displayProperty=fullName>对象以创建智能标记，你可以使用<xref:Microsoft.Office.Tools.SmartTagBase.Expressions%2A>属性将无法识别的智能标记的正则表达式。 <xref:Microsoft.Office.Tools.SmartTagBase.Expressions%2A>属性具有类型<xref:Microsoft.Office.Tools.RegexCollection>。  
  
 此类型旨在使用仅在项目中，适用于 Excel 2007 和 Word 2007。 Word 2010 和 Excel 2010 中已弃用智能标记。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Text.RegularExpressions.Regex value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Text.RegularExpressions.Regex value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.RegexCollection.Add(System.Text.RegularExpressions.Regex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="value">要添加到 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 末尾的正则表达式。</param>
        <summary>将正则表达式添加到 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 末尾。</summary>
        <returns>已添加了 <paramref name="value" /> 的索引。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Text.RegularExpressions.Regex[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Text.RegularExpressions.Regex[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.RegexCollection.AddRange(System.Text.RegularExpressions.Regex[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.RegularExpressions.Regex[]" />
      </Parameters>
      <Docs>
        <param name="value">要添加到 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 的正则表达式的数组。</param>
        <summary>将正则表达式的数组添加到 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 末尾。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Text.RegularExpressions.Regex value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Text.RegularExpressions.Regex value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.RegexCollection.Contains(System.Text.RegularExpressions.Regex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="value">要包含在 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 中的正则表达式。</param>
        <summary>确定 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 是否包含特定正则表达式。</summary>
        <returns>
          如果 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 包含指定的 <paramref name="value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Text.RegularExpressions.Regex[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Text.RegularExpressions.Regex[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.RegexCollection.CopyTo(System.Text.RegularExpressions.Regex[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Text.RegularExpressions.Regex[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">一维数组，用作从 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 复制的元素的目标位置。 该数组的索引必须从零开始。</param>
        <param name="index"><c>array</c> 中从零开始的索引，在此处开始复制。</param>
        <summary>从目标数组的指定索引处开始，将整个 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 复制到兼容的一维数组。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> 为空引用。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 小于零。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> 是多维的。  
  
 或  
  
 源 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 中的元素个数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
        <exception cref="T:System.InvalidCastException">无法自动将源 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 的类型转换为目标 <paramref name="array" /> 的类型。</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Text.RegularExpressions.Regex value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Text.RegularExpressions.Regex value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.RegexCollection.IndexOf(System.Text.RegularExpressions.Regex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="value">要包含在 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 中的正则表达式。</param>
        <summary>搜索指定的正则表达式，并返回整个 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 中第一个匹配项的从零开始的索引。</summary>
        <returns>如果找到，则为整个 <paramref name="value" /> 中 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 第一个匹配项的从零开始的索引；否则为 -1。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Text.RegularExpressions.Regex value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Text.RegularExpressions.Regex value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.RegexCollection.Insert(System.Int32,System.Text.RegularExpressions.Regex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="index">从零开始的索引，应在该位置插入 <c>value</c>。</param>
        <param name="value">要插入的正则表达式。</param>
        <summary>将元素插入 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 的指定索引处。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Collections.CollectionBase.Count%2A>已经等于容量、 列表的容量翻倍通过自动重新分配在内部数组，才能插入新元素。  
  
 如果`index`等同于<xref:System.Collections.CollectionBase.Count%2A>，`value`添加到末尾<xref:Microsoft.Office.Tools.RegexCollection>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 小于零。  
  
 或  
  
 <paramref name="index" /> 大于 <see cref="P:System.Collections.CollectionBase.Count" />。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:Microsoft.Office.Tools.RegexCollection" /> 为只读。  
  
 或  
  
 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 具有固定的大小。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Regex this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.Regex Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Tools.RegexCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Regex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要获取或设置的正则表达式的从零开始的索引。</param>
        <summary>获取或设置位于指定索引处的正则表达式。</summary>
        <value>位于指定索引处的 <see cref="T:System.Text.RegularExpressions.Regex" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 小于零。  
  
 或  
  
 <paramref name="index" /> 等于或大于 <see cref="P:System.Collections.CollectionBase.Count" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Text.RegularExpressions.Regex value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Text.RegularExpressions.Regex value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Tools.RegexCollection.Remove(System.Text.RegularExpressions.Regex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Tools.Common</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="value">要从 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 中删除的正则表达式。</param>
        <summary>从 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 中删除特定正则表达式的第一个匹配项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:Microsoft.Office.Tools.RegexCollection>不包含指定<xref:System.Text.RegularExpressions.Regex>、<xref:Microsoft.Office.Tools.RegexCollection>保持不变。 不引发异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="T:Microsoft.Office.Tools.RegexCollection" /> 为只读。  
  
 或  
  
 <see cref="T:Microsoft.Office.Tools.RegexCollection" /> 具有固定的大小。</exception>
      </Docs>
    </Member>
  </Members>
</Type>