<Type Name="IDeploymentStep" FullName="Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStep">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b7a2f72c390846b9d38d0f5a670f7cc77d76ff1" />
    <Meta Name="ms.sourcegitcommit" Value="bb8a3a96823cedeffbdbcc0c41a8118399de8074" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="02/21/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDeploymentStep" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDeploymentStep" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStep" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualStudio.SharePoint</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>表示 SharePoint 项目的部署步骤。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实现<xref:Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStep>接口，以创建 SharePoint 项目自定义部署步骤。 部署 SharePoint 项目时，[!INCLUDE[vs_current_short](~/includes/vs-current-short-md.md)] 会执行一系列部署步骤。 Visual Studio 包含用于很多任务的内置部署步骤，如收回和添加解决方案。 但是，还可以创建自己的部署步骤。 有关详细信息，请参阅[扩展 SharePoint 打包和部署](/visualstudio/sharepoint/extending-sharepoint-packaging-and-deployment.md)和[演练： 为 SharePoint 项目创建自定义部署步骤](/visualstudio/sharepoint/walkthrough-creating-a-custom-deployment-step-for-sharepoint-projects.md)。  
  
 部署步骤是单一实例是一个实例化一次，每个 Visual Studio 实例。  
  
 实现此接口的类必须包括<xref:System.ComponentModel.Composition.ExportAttribute?displayProperty=fullName>和<xref:Microsoft.VisualStudio.SharePoint.Deployment.DeploymentStepAttribute>项目系统发现。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public bool CanExecute (Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(class Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStep.CanExecute(Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentContext" />
      </Parameters>
      <Docs>
        <param name="context">一个提供可用于确定在其中执行部署步骤的上下文的对象。</param>
        <summary>确定是否可在当前上下文中执行部署步骤。</summary>
        <returns>
          如果可执行部署步骤，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用收回 SharePoint 项目时，此方法从 UI 线程中执行**收回**选项**生成**Visual Studio 中的菜单。 从后台线程在以下情况下执行此方法：  
  
-   当调试后自动收回项目。 发生这种情况时**调试后自动收回**属性**SharePoint**选择的项目属性的选项卡。  
  
-   当部署项目。  
  
 Visual Studio 对象模型中的一些 Api 可能无法按预期从后台线程。 如果你需要调用这些 Api 从之一<xref:Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStep.CanExecute%2A>方法，可以通过使用对 UI 线程的调用封送<xref:System.Threading.SynchronizationContext>对象。 实现中<xref:Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStep.Initialize%2A>方法，请使用<xref:System.Threading.SynchronizationContext.Current%2A>属性来获取<xref:System.Threading.SynchronizationContext>的 UI 线程。 然后，在你实现<xref:Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStep.CanExecute%2A>方法，请使用<xref:System.Threading.SynchronizationContext.Post%2A>或<xref:System.Threading.SynchronizationContext.Send%2A>方法<xref:System.Threading.SynchronizationContext>要对 UI 线程的调用封送对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(class Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStep.Execute(Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentContext" />
      </Parameters>
      <Docs>
        <param name="context">一个提供可用于确定在其中执行部署步骤的上下文的对象。</param>
        <summary>执行部署步骤。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在此方法中实现你的部署步骤逻辑。  
  
 使用收回 SharePoint 项目时，此方法从 UI 线程中执行**收回**选项**生成**Visual Studio 中的菜单。 从后台线程在以下情况下执行此方法：  
  
-   当调试后自动收回项目。 发生这种情况时**调试后自动收回**属性**SharePoint**选择的项目属性的选项卡。  
  
-   当部署项目。  
  
 Visual Studio 对象模型中的一些 Api 可能无法按预期从后台线程。 如果你需要调用这些 Api 从之一<xref:Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStep.Execute%2A>方法，可以通过使用对 UI 线程的调用封送<xref:System.Threading.SynchronizationContext>对象。 实现中<xref:Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStep.Initialize%2A>方法，请使用<xref:System.Threading.SynchronizationContext.Current%2A>属性来获取<xref:System.Threading.SynchronizationContext>的 UI 线程。 然后，在你实现<xref:Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStep.Execute%2A>方法，请使用<xref:System.Threading.SynchronizationContext.Post%2A>或<xref:System.Threading.SynchronizationContext.Send%2A>方法<xref:System.Threading.SynchronizationContext>要对 UI 线程的调用封送对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStepInfo stepInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStepInfo stepInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStep.Initialize(Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStepInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stepInfo" Type="Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStepInfo" />
      </Parameters>
      <Docs>
        <param name="stepInfo">一个包含有关部署步骤信息的对象。</param>
        <summary>启动部署步骤。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当首次初始化了部署步骤，visual Studio 会调用此方法。 发生这种情况仅一次每个 Visual Studio 实例。  
  
 实现中<xref:Microsoft.VisualStudio.SharePoint.Deployment.IDeploymentStep.Initialize%2A>，设置属性的`stepInfo`参数来指定名称、 说明和部署步骤的其他详细信息。  
  
 此方法始终从 UI 线程执行。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>