<Type Name="INotifyObjectDisposing" FullName="Microsoft.VisualStudio.SharePoint.INotifyObjectDisposing">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc02e5422ae6e3533e301638b4b4bd3b33d2c76a" />
    <Meta Name="ms.sourcegitcommit" Value="bb8a3a96823cedeffbdbcc0c41a8118399de8074" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="02/21/2018" />
    <Meta Name="ms.locfileid" Value="29409688" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface INotifyObjectDisposing" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INotifyObjectDisposing" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualStudio.SharePoint.INotifyObjectDisposing" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualStudio.SharePoint</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="634a7-101">实现此接口的类可在释放对象时通知你。</span>
      <span class="sxs-lookup">
        <span data-stu-id="634a7-101">A class implementing this interface notifies you when an object is being disposed.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a7-102">当释放对象时，它可以用于执行清理任务，例如取消订阅事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="634a7-102">When object is being disposed, it can be used to perform clean up tasks such as unsubscribing from event handlers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Disposing">
      <MemberSignature Language="C#" Value="public event EventHandler Disposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposing" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualStudio.SharePoint.INotifyObjectDisposing.Disposing" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="634a7-103">在释放对象时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a7-103">Occurs when an object is being disposed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a7-104">此事件的处理程序可以用于取消订阅事件并释放任何引用或资源。</span><span class="sxs-lookup"><span data-stu-id="634a7-104">The handler for this event can be used to unsubscribe from events and release any references or resources.</span></span> <span data-ttu-id="634a7-105">大多数属性是此事件的处理程序中仍可访问。</span><span class="sxs-lookup"><span data-stu-id="634a7-105">Most properties are still accessible in the handler for this event.</span></span>  
  
 <span data-ttu-id="634a7-106"><xref:Microsoft.VisualStudio.SharePoint.INotifyObjectDisposing> 进行了补充<xref:Microsoft.VisualStudio.SharePoint.INotifyObjectDisposed.Disposed>事件将导致访问任何对象成员<xref:System.ObjectDisposedException>错误。</span><span class="sxs-lookup"><span data-stu-id="634a7-106"><xref:Microsoft.VisualStudio.SharePoint.INotifyObjectDisposing> complements the <xref:Microsoft.VisualStudio.SharePoint.INotifyObjectDisposed.Disposed> event where accessing any object member will cause an <xref:System.ObjectDisposedException> error.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposing">
      <MemberSignature Language="C#" Value="public bool IsDisposing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualStudio.SharePoint.INotifyObjectDisposing.IsDisposing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="634a7-107">获取是否释放对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a7-107">Gets whether an object is disposing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="634a7-108">
            <see langword="True" /> 如果正在释放对象;<see langword="false" />否则为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a7-108">
              <see langword="True" /> if the object is disposing; <see langword="false" /> otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a7-109">则可以安全地释放对象后，即使检查此属性。</span><span class="sxs-lookup"><span data-stu-id="634a7-109">It is safe to check this property even after object is disposed.</span></span> <span data-ttu-id="634a7-110"><xref:Microsoft.VisualStudio.SharePoint.INotifyObjectDisposing.IsDisposing%2A> 保持`true`释放此对象之后。</span><span class="sxs-lookup"><span data-stu-id="634a7-110"><xref:Microsoft.VisualStudio.SharePoint.INotifyObjectDisposing.IsDisposing%2A> remains `true` after the object is disposed.</span></span>  
  
 <span data-ttu-id="634a7-111">如果类实现<xref:System.ComponentModel.INotifyPropertyChanged>则`PropertyChanged`对象启动释放过程时，将此属性引发事件。</span><span class="sxs-lookup"><span data-stu-id="634a7-111">If the class implements <xref:System.ComponentModel.INotifyPropertyChanged> then the `PropertyChanged` event will be raised for this property when object starts the dispose process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>