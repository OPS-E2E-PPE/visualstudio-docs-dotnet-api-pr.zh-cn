<Type Name="INotifyObjectDisposed" FullName="Microsoft.VisualStudio.SharePoint.INotifyObjectDisposed">
  <Metadata><Meta Name="ms.openlocfilehash" Value="392a20870b17384e4c1999eaadf5489385d66894" /><Meta Name="ms.sourcegitcommit" Value="7439021cdeee6a9ef5d4640250701344f6cbba15" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/13/2019" /><Meta Name="ms.locfileid" Value="69008241" /></Metadata><TypeSignature Language="C#" Value="public interface INotifyObjectDisposed" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INotifyObjectDisposed" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualStudio.SharePoint.INotifyObjectDisposed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualStudio.SharePoint</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="01f07-101">实现此接口的类可在释放对象时通知你。</span><span class="sxs-lookup"><span data-stu-id="01f07-101">A class implementing this interface notifies you when an object is disposed.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01f07-102">释放对象后, 将无法再使用它。</span><span class="sxs-lookup"><span data-stu-id="01f07-102">After an object is disposed, it can no longer be used.</span></span> <span data-ttu-id="01f07-103">对其方法或属性的任何调用都将导致<xref:System.ObjectDisposedException>错误。</span><span class="sxs-lookup"><span data-stu-id="01f07-103">Any call to its methods or properties will result in a <xref:System.ObjectDisposedException> error.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualStudio.SharePoint.INotifyObjectDisposed.Disposed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01f07-104">在释放对象时发生。</span><span class="sxs-lookup"><span data-stu-id="01f07-104">Occurs when an object is disposed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01f07-105">释放对象后, 对其属性或方法的任何调用都将引发<xref:System.ObjectDisposedException>错误。</span><span class="sxs-lookup"><span data-stu-id="01f07-105">After an object is disposed, any call to its properties or methods will throw an <xref:System.ObjectDisposedException> error.</span></span> <span data-ttu-id="01f07-106">此事件可用于删除对刚刚释放的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="01f07-106">This event can be used to remove a reference to the object that was just disposed.</span></span>  
  
 <span data-ttu-id="01f07-107">访问此事件中的<xref:System.ObjectDisposedException>任何对象成员将引发。</span><span class="sxs-lookup"><span data-stu-id="01f07-107">Accessing  any object member in this event will throw the <xref:System.ObjectDisposedException>.</span></span>  
  
 <span data-ttu-id="01f07-108">如果需要取消订阅事件或访问任何其他对象成员, 请考虑使用<xref:Microsoft.VisualStudio.SharePoint.INotifyObjectDisposing.Disposing>事件 (如果可用)。</span><span class="sxs-lookup"><span data-stu-id="01f07-108">If you need to unsubscribe from events or access any other object member, consider using the <xref:Microsoft.VisualStudio.SharePoint.INotifyObjectDisposing.Disposing> event if it is available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualStudio.SharePoint.INotifyObjectDisposed.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.SharePoint</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01f07-109">获取是否释放对象。</span><span class="sxs-lookup"><span data-stu-id="01f07-109">Gets whether the an object is disposed.</span></span></summary>
        <value><span data-ttu-id="01f07-110"><see langword="True" />如果释放对象, 则为; 否则为。<see langword="false" />否则为。</span><span class="sxs-lookup"><span data-stu-id="01f07-110"><see langword="True" /> if the object is disposed; <see langword="false" /> otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01f07-111">即使在释放对象后, 也可以安全地检查此属性。</span><span class="sxs-lookup"><span data-stu-id="01f07-111">It is safe to check this property even after object is disposed.</span></span> <span data-ttu-id="01f07-112">如果类实现<xref:System.ComponentModel.INotifyPropertyChanged>, `PropertyChanged`则当对象被释放时, 将为此属性引发事件。</span><span class="sxs-lookup"><span data-stu-id="01f07-112">If a class implements <xref:System.ComponentModel.INotifyPropertyChanged>, then the `PropertyChanged` event will be raised for this property when the object becomes disposed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
